{Application 'BLPS2023CAPI' logic file generated by CSPro}
PROC GLOBAL
numeric ok,samplestatus;
numeric toptEggProducedBroiler,xDucKor,ctr;
numeric totSupplyMonth2, totSupplyMonth3;
numeric totBroilerLiveDressedL16_1, totBroilerLiveDressedL16_2, totBroilerLiveDressedL16_3;
numeric totDistination_BroilerL16,xL32_DES2,xL32_DES3,xL32_DES1;
numeric totDressingtotBroilerL1, totDressingtotBroilerL2, totDressingtotBroilerL3;

numeric totBirdDisposed1,   totBirdDisposed2, totBirdDisposed3;
numeric totBeginInventoryRecieved_1, totBeginInventoryRecieved_2, totBeginInventoryRecieved_3;
numeric totBrodHenMonth1;
numeric totInventoryCarabao;
numeric totInventoryCarabaoL10;
numeric firstMonthInventory, secondMonthInventory;
numeric AveGoatFreshMilk, AveCarabaoFreshMilk;
string diseaseMonth,myReason;
numeric totDistination_SwineL161, totDistination_SwineL162, totDistination_SwineL163;
numeric totDistination_Swine1,    totDistination_Swine2,    totDistination_Swine3;
numeric rq;
numeric xStartBornAcquireM1   ,xStartBornAcquireM2   ,xStartBornAcquireM3   ,xdispositionM2   ,xStartAllBornAcquireM1   ,xStartALlBornAcquireM2   ,xStartAllBornAcquireM3;
numeric xTotalSlaughteredHH   ,xTotalSlaughteredHHF  ,xTotalSlaughteredHHG  ,xTotalSlaughteredHHGt;

numeric tempE4L13L15_HEAD_TOTAL_M1M2M3, tempF4L13L15_HEAD_TOTAL_M1M2M3, tempG4L16L18_HEAD_TOTAL_M1M2M3, tempH4L13L15_HEAD_TOTAL_M1M2M3, tempBI, tempTotal;

alpha(15) ANIMAL_NAME;
// numeric xitem1,xitem2,xitem3,xitem4,xitem5;

{
PROC BLOCK026

preproc
	if ischecked("C",E1L01_TYPE_OF_OPERATION) = 0 then
		skip to F1L01_TYPE_OF_OPERATION;
	endif;
PROC E4L31L32_NUMBER_OF_HEADS_M1

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
  
	getOutOfRangeW($(curocc()),0,99999);
  
	savepartial();
	
PROC E4L31L32_NUMBER_OF_HEADS_M2

	getOutOfRangeW($(curocc()),0,99999);
  
	savepartial();
	
PROC E4L31L32_NUMBER_OF_HEADS_M3

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
  
	getOutOfRangeW($(curocc()),0,99999);
  
	savepartial();
	
PROC E4L31L32_SPECIFY_M1

preproc
	//selection of death
	if ischecked("A",E4FQ_L31L32) = 0 then 
		if curocc() = 1 then    
			move to E4L31L32_SPECIFY_M1(2); // punta other causes
		endif;
	endif;

	if ischecked("B",E4FQ_L31L32) = 0 then 
		if curocc() = 2 then    
			move to E5L33_CARACOW_MILKLINE(1);  // punta E.5 milk prod
		endif;
	endif;
 
 function saveClose()
	err = errmsg("Are you sure you want save this Case/Questionnaire?")select( "Yes", CONTINUE, "No", CONTINUE );;
	if err = 1 then
		savepartial();
		stop(1);
	endif;
end;
postproc

	if strip($(curocc())) = "" then   
		getErrorMsg("Missing Entry");
	endif;
  
	savepartial();
  
PROC E4L31L32_SPECIFY_M2

	if strip($(curocc())) = "" then   
		getErrorMsg("Missing Entry");
	endif;
	
	savepartial();
	
PROC E4L31L32_SPECIFY_M3

	if strip($(curocc())) = "" then   
		getErrorMsg("Missing Entry");
	endif;
  
	savepartial();
	
PROC E5FQ_L42L44

	if poschar("ABC", $) = 0 then
		getErrorMsg("NO selected destination to sell milk produce/harvest!");
	// elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		// getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	// else
		// if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			// skip to E4L16_DISPOSE_SELL_SLAUGHTER;
		// endif;
	endif;
	

}

function CreateDirectories()
//errmsg("a");

	string backupDirectoryName = "..\..\..\..\..\CL";
	string directoryPath =       "..\..\..\..\..\CLPS\Form1\";
	if direxist(backupDirectoryName) then
		dirdelete(backupDirectoryName); 
		dircreate(backupDirectoryName);
	else
		dircreate(backupDirectoryName);
	endif;
	

	string REF_YEARout1 = maketext("01_REF_YEAR=%d",visualvalue(REF_YEAR));
	dircreate(directoryPath + REF_YEARout1);
	string REF_QUARTERout = maketext("02_REF_QUARTER=%01d",visualvalue(REF_QUARTER));
	dircreate(directoryPath + REF_QUARTERout);
	string REGout = maketext("03_REG=%02d",visualvalue(REG));
	dircreate(directoryPath + REGout);
	string PROVout = maketext("04_PROV=%03d",visualvalue(PROV));
	dircreate(directoryPath + PROVout);
	string MUNout = maketext("05_MUN=%02d",visualvalue(MUN));
	dircreate(directoryPath + MUNout);
	string BGYout = maketext("06_BGY=%03d",visualvalue(BGY));
	dircreate(directoryPath + BGYout);
	string ECNout = maketext("07_ECN=%s",maketext(ECN));
	dircreate(directoryPath + ECNout);
	
	string ANIMAL_TYPEout = maketext("01_ANIMAL_TYPE=%02d",visualvalue(ANIMAL_TYPE));
	dircreate(directoryPath + ANIMAL_TYPEout);
	
	if sampleStatus = 12 then
		string STATUSout = maketext("01_STATUS=%02d",sampleStatus);
		dircreate(directoryPath + STATUSout);
	else
		string STATUSout = maketext("01_STATUS=%02d",C3L09_STATUS_OP_RESULT_VISIT);
		dircreate(directoryPath + STATUSout);
	endif;

	string B2L02_BNout = maketext("08_B2L02_BN=%s",maketext(B2L02_BN));
	dircreate(directoryPath + B2L02_BNout);
	string B2L02_RNout = maketext("09_B2L02_RN=%s",maketext(B2L02_RN));
	dircreate(directoryPath + B2L02_RNout);
	string B2L03_OWNER_MNGR_NAMEout = maketext("10_B2L03_OWNER_MNGR_NAME=%s",B2L03_OWNER_MNGR_NAME);
	dircreate(directoryPath + B2L03_OWNER_MNGR_NAMEout);
	
	if B4L04_SEX = NOTAPPL then
		string B4L04_SEXout = maketext("11_B4L04_SEX=BLANK");
		dircreate(directoryPath + B4L04_SEXout);
	else
		string B4L04_SEXout = maketext("11_B4L04_SEX=%d",visualvalue(B4L04_SEX));
		dircreate(directoryPath + B4L04_SEXout);
	endif;
	
	string B5L05_ADD_ESTABout = maketext("12_B5L05_ADD_ESTAB=%s",B5L05_ADD_ESTAB);
	dircreate(directoryPath + B5L05_ADD_ESTABout);
	if NAME_OF_CONTACT_PERSON = "" then
		string NAME_OF_CONTACT_PERSONout = maketext("13_NAME_OF_CONTACT_PERSON=BLANK");
		dircreate(directoryPath + NAME_OF_CONTACT_PERSONout);
	else
		string NAME_OF_CONTACT_PERSONout = maketext("13_NAME_OF_CONTACT_PERSON=^%s",NAME_OF_CONTACT_PERSON);
		dircreate(directoryPath + NAME_OF_CONTACT_PERSONout);
	endif;
	
	string MAX_CAPout = maketext("14_MAX_CAP=%d",visualvalue(MAX_CAP));
	dircreate(directoryPath + MAX_CAPout);
	string INTEGRATOR_MCout = maketext("15_INTEGRATOR_MC=%s",INTEGRATOR_MC);
	dircreate(directoryPath + INTEGRATOR_MCout);
	
	if A_INVENTORY = notappl then
		string A_INVENTORYout = maketext("16_A_INVENTORY=BLANK");
		dircreate(directoryPath + A_INVENTORYout);
	else
		string A_INVENTORYout = maketext("16_A_INVENTORY=%d",visualvalue(A_INVENTORY));
		dircreate(directoryPath + A_INVENTORYout);
	endif;
	if YEAR_STARTED_OP = notappl then
		string YEAR_STARTED_OPout = maketext("17_YEAR_STARTED_OP=BLANK");
		dircreate(directoryPath + YEAR_STARTED_OPout);
	else
		string YEAR_STARTED_OPout = maketext("17_YEAR_STARTED_OP=%d",YEAR_STARTED_OP);
		dircreate(directoryPath + YEAR_STARTED_OPout);
	endif;
	if ECO_ACTIVITY = notappl then
		//YEAR_STARTED_OP = 0;
		string ECO_ACTIVITYout = maketext("18_ECO_ACTIVITY=BLANK");
		dircreate(directoryPath + ECO_ACTIVITYout);
	else
		string ECO_ACTIVITYout = maketext("18_ECO_ACTIVITY=%d",ECO_ACTIVITY);
		dircreate(directoryPath + ECO_ACTIVITYout);
	endif;
	if UPDATE_CODES = "" then
		//UPDATE_CODES = 0;
		string UPDATE_CODESout = maketext("19_UPDATE_CODES=BLANK");
		dircreate(directoryPath + UPDATE_CODESout);
	else
		string UPDATE_CODESout = maketext("19_UPDATE_CODES=%s",UPDATE_CODES);
		dircreate(directoryPath + UPDATE_CODESout);
	endif;
	if CHANGE_NAME_ESTAB = "" then
		//CHANGE_NAME_ESTAB = "BLANK";
		string CHANGE_NAME_ESTABout = maketext("20_CHANGE_NAME_ESTAB=BLANK");
		dircreate(directoryPath + CHANGE_NAME_ESTABout);
	else
		string CHANGE_NAME_ESTABout = maketext("20_CHANGE_NAME_ESTAB=%s",CHANGE_NAME_ESTAB);
		dircreate(directoryPath + CHANGE_NAME_ESTABout);
	endif;
	if CHANGE_OWNER = "" then
		//CHANGE_OWNER = "BLANK";
		string CHANGE_OWNERout = maketext("21_CHANGE_OWNER=BLANK");
		dircreate(directoryPath + CHANGE_OWNERout);
	else
		string CHANGE_OWNERout = maketext("21_CHANGE_OWNER=%s",CHANGE_OWNER);
		dircreate(directoryPath + CHANGE_OWNERout);
	endif;
	if CHANGE_FARM_CAP = notappl then
		//CHANGE_FARM_CAP = 0;
		string CHANGE_FARM_CAPout = maketext("22_CHANGE_FARM_CAP=BLANK");
		dircreate(directoryPath + CHANGE_FARM_CAPout);
	else
		string CHANGE_FARM_CAPout = maketext("22_CHANGE_FARM_CAP=%d",CHANGE_FARM_CAP);
		dircreate(directoryPath + CHANGE_FARM_CAPout);
	endif;

	string C3L09_STATUS_OP_RESULT_VISITout = maketext("23_C3L09_STATUS_OP_RESULT_VISIT=%02d",visualvalue(C3L09_STATUS_OP_RESULT_VISIT));
	dircreate(directoryPath + C3L09_STATUS_OP_RESULT_VISITout);
	
	string BASEWEIGHTSSout = maketext("24_BASEWEIGHTSS=%d",visualvalue(BASEWEIGHTSS));
	dircreate(directoryPath + BASEWEIGHTSSout);

	string TOT_ESTAB2out = maketext("25_TOT_ESTAB2=%d",TOT_ESTAB2);
	dircreate(directoryPath + TOT_ESTAB2out);	
	string SAMPLE_ESTAB2out = maketext("26_SAMPLE_ESTAB2=%d",SAMPLE_ESTAB2);
	dircreate(directoryPath + SAMPLE_ESTAB2out);		
	
	string TOT_MAX_CAP_PROV2out = maketext("27_TOT_MAX_CAP_PROV2=%d",TOT_MAX_CAP_PROV2);
	dircreate(directoryPath + TOT_MAX_CAP_PROV2out);
	//errmsg("z");
end;

// function OnStop()
	// numeric ExitInt = accept("Exit without saving?", "Yes", "Cancel", "Save Partial");
	// if ExitInt = 1 then
		// errmsg ("Closing CLPS Application without saving");
		// stop(1);
	// elseif ExitInt = 2 then
		// reenter;
	// elseif ExitInt = 3 then
		// errmsg("Partially saving CLPS data before exiting.");
		// samplestatus=12;
		// CreateDirectories();
		// savepartial();
		// stop(1);
	// endif;
// end;

function OnStop()
	savepartial();
	// writeEN();
	CreateDirectories(); // MackeyRead
   
   numeric ExitInt = accept("Exit without saving?", "Yes", "Cancel", "Save Partial");
	if ExitInt = 1 then
		 errmsg ("Closing CLPS Application without saving");
		 stop(1);
	elseif ExitInt = 2 then
		reenter;
	elseif ExitInt = 3 then
		C3L09_STATUS_OP_RESULT_VISIT = 0;
		// writeEN();
		 CreateDirectories(); // MackeyRead
		 savepartial();
		 stop(1);
	endif;
end;


function saveClose()
	err = errmsg("Are you sure you want save this Case/Questionnaire?")select( "Yes", CONTINUE, "No", CONTINUE );;
	if err = 1 then
		INTERVIEW_STATUS = 1;
		//writeEN();
		CreateDirectories();
		savepartial();
		stop(1);
	endif;
end;

function savePartials()
	// INTERVIEW_STATUS = 9;
	 //writeEN();
	 CreateDirectories();
	 errmsg("Your data was partially saved..");
	 savepartial();

end;
	
// PROC F5L44_FG_OTHER_SPECIFY
// preproc
// ask if F5L44_SOLD_VOL_OTHER <> notappl;
// PROC F5L44_VOL_OTHER_SPECIFY
// preproc
// ask if F5L44_SOLD_VOL_OTHER <> notappl;
PROC A_INVENTORY
if $ > MAX_CAP then
	errmsg("Animal inventory is greater than maximum farm capacity");
endif;
savepartial();

PROC JDZ_HC

preproc 
	ask if ischecked("Z",JD_BROILER_DISEASE);
postproc  
	   
	
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),JDO_HC(curocc()),JDP_HC(curocc()),JDQ_HC(curocc()),JDR_HC(curocc()),JDS_HC(curocc()),
													   JDT_HC(curocc()),JDU_HC(curocc()),JDV_HC(curocc()),JDW_HC(curocc()),JDX_HC(curocc()),JDY_HC(curocc()),JDZ_HC(curocc()),
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC KDL12_HC
preproc
ask if ischecked("L",KD_LAYER_DISEASE);

postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),KDJ_HC(curocc()),KDK_HC(curocc()),KDL_HC(curocc()),KDL12_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

 savepartial();

  
PROC KDP18_HC
preproc
ask if ischecked("P",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),KDJ_HC(curocc()),KDK_HC(curocc()),KDL_HC(curocc()),KDL12_HC(curocc()),KDM_HC(curocc()),KDN_HC(curocc()),KDO_HC(curocc()),KDP18_HC(curocc()),0,0,0,0,0,0,0,0,0,
				                                 0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;	

 savepartial();
PROC REF_QUARTER
savepartial();
PROC REF_YEAR
savepartial();


PROC TOTAL_JD_BROILER_HC

preproc 
	ask if JDZ_SPECIFY <> "";
PROC CLPS2023_FF
preproc
    set behavior() specialvalues(zero) on;

	userbar(clear);
	setfont(userbar, "ARIAL",11,bold,italics);	
	//userbar(add button,"Save and Close", saveClose);
	//userbar(add button,"Save Partial", SavePartials);
	userbar(add spacing,50);
	userbar(set color,0,1500,1500);
	userbar(show);
	
	
// 10-25-2023 silas
// string dataFile = concat(".\data\F1_", sysparm("REG"), sysparm("PROV"), sysparm("MUN"), sysparm("BGY"), sysparm("ECN"),".csdbe|password=1234");
// setfile(CLPS_DICT,dataFile,create);	
	


PROC CLPS_QUEST

preproc 
// set behavior() specialvalues(zero) on;
setproperty("SpecialValuesZero",true);
 
if demode() = 1 then 
	//cYEAR  				      = sysparm("REF_YEAR");
	REF_YEAR     		      = tonumber(sysparm("REF_YEAR"));
	REF_QUARTER 			  = tonumber(sysparm("REF_QUARTER"));
	// REG        				  = tonumber(sysparm("REG"));
	// PROV       				  = tonumber(sysparm("PROV"));
	// MUN         			  = tonumber(sysparm("MUN"));
	// BGY        				  = tonumber(sysparm("BGY"));
	// ECN        				  = sysparm("ECN");
	B2L02_BN          		  = sysparm("B2L02_BN");
	B2L02_RN         		  = sysparm("B2L02_RN");
	B2L03_OWNER_MNGR_NAME     = sysparm("B2L03_OWNER_MNGR_NAME");
	B5L05_ADD_ESTAB           = sysparm("B5L05_ADD_ESTAB");
	MAX_CAP					  = tonumber(sysparm("MAX_CAP"));
	INTEGRATOR_MC			  = sysparm("INTEGRATOR_MC");
	YEAR_STARTED_OP			  = tonumber(sysparm("YEAR_STARTED_OP"));
	ECO_ACTIVITY			  = tonumber(sysparm("ECO_ACTIVITY"));
	BASEWEIGHTSS              = tonumber(sysparm("BASEWEIGHTSS"));
	TOT_ESTAB2                = tonumber(sysparm("TOT_ESTAB2"));
	SAMPLE_ESTAB2             = tonumber(sysparm("SAMPLE_ESTAB2"));
	TOT_MAX_CAP_PROV2         = tonumber(sysparm("TOT_MAX_CAP_PROV2"));
	ANIMAL_TYPE				  = tonumber(sysparm("ANIMAL_TYPE"));
	C3L09_STATUS_OP_RESULT_VISIT  = tonumber(sysparm("NONRESPONSE"));
	
endif;
ANIMAL_TYPE				  = tonumber(sysparm("ANIMAL_TYPE"));
if ANIMAL_TYPE = 01 then
	D2L12_CARABAO = 01;
	ANIMAL_NAME = "CARABAO";
	ischecked("A", SELECT_ANIMALS);
elseif ANIMAL_TYPE = 02 then
	D2L12_CATTLE = 02;
	ANIMAL_NAME = "CATTLE";
	ischecked("B", SELECT_ANIMALS);
elseif ANIMAL_TYPE = 03 then
	D2L12_SWINE = 03;
	ANIMAL_NAME = "SWINE";
	ischecked("C", SELECT_ANIMALS);
elseif ANIMAL_TYPE = 04 then
	D2L12_GOAT = 04;
	ANIMAL_NAME = "GOAT";
	ischecked("D", SELECT_ANIMALS);
elseif ANIMAL_TYPE = 05 then
	D2L12_SHEEP = 05;
	ANIMAL_NAME = "SHEEP";
	ischecked("E", SELECT_ANIMALS);
elseif ANIMAL_TYPE = 06 then
	D2L12_BROILER = 06;
	ANIMAL_NAME = "BROILER";
	ischecked("F", SELECT_ANIMALS);
elseif ANIMAL_TYPE = 07 then
	D2L12_LAYER = 07;
	ANIMAL_NAME = "LAYER";
	ischecked("G", SELECT_ANIMALS);
elseif ANIMAL_TYPE = 08 then
	D2L12_NATIVE = 08;
	ANIMAL_NAME = "NATIVE";
	ischecked("H", SELECT_ANIMALS);
elseif ANIMAL_TYPE = 09 then
	D2L12_GAMEFOWL = 09;
	ANIMAL_NAME = "GAMEFOWL";
	ischecked("I", SELECT_ANIMALS);
elseif ANIMAL_TYPE = 10 then
	D2L12_DUCK = 10;
	ANIMAL_NAME = "DUCK";
	ischecked("J", SELECT_ANIMALS);
elseif ANIMAL_TYPE = 11 then
	D2L12_OA_HORSE = 11;
	ANIMAL_NAME = "HORSE";
	ischecked("K", SELECT_ANIMALS);
elseif ANIMAL_TYPE = 12 then
	D2L12_OA_RABBIT = 12;
	ANIMAL_NAME = "HORSE";
	ischecked("L", SELECT_ANIMALS);
elseif ANIMAL_TYPE = 13 then
	D2L12_OA_QUAIL = 13;
	ANIMAL_NAME = "QUAIL";
	ischecked("M", SELECT_ANIMALS);
elseif ANIMAL_TYPE = 14 then
	D2L12_OA_TURKEY = 14;
	ANIMAL_NAME = "TURKEY";
	ischecked("N", SELECT_ANIMALS);
elseif ANIMAL_TYPE = 15 then
	D2L12_OA_GOOSE = 15;
	ANIMAL_NAME = "GOOSE";
	ischecked("O", SELECT_ANIMALS);
endif;
C3L09_STATUS_OP_RESULT_VISIT  = tonumber(sysparm("ISTATUS"));
rq =  tonumber(sysparm("QUARTER"));


MONTHS_LABEL();
Heading_month();

advance to REPACT;
 
postproc
 // writeEN();
samplestatus=1;
CreateDirectories(); 
PROC REPACT
preproc
$="";
PROC REG
//savepartial();
PROC PROV

//savepartial();
PROC MUN

//savepartial();
PROC BGY
//savepartial();
PROC ECN

PROC INTVW
preproc 
protect(GEOID, true); 
REG  = visualvalue(REG);
PROV = visualvalue(PROV);
MUN  = visualvalue(MUN);
BGY  = visualvalue(BGY);
ECN   = ECN;


SURVEY_START_TIME = edit("99:99:99",systime("HHMMSS"));

if tonumber(sysparm("C3L09_STATUS_OP_RESULT_VISIT")) in 2:11 then
	INTVW = 2;
ENDIF;


postproc
if not($ in 1:2) or $ = notappl then
     getErrorMsg(" No Selected Code!");
else
	  if $ = 1 then
		  if tonumber(sysparm("C3L09_STATUS_OP_RESULT_VISIT")) in 2:11 then
				ERRMSG("Can't Proceed to interview because the result of final visit is Non-response");
				reenter;
		  ENDIF;
		  advance to B2L03_OWNER_MNGR_NICKNAME;  //disabled geoid
		  
		  // skip to SELECT_ANIMALS;
      elseif $ = 2 then
		 // advance to B2L03_OWNER_MNGR_NICKNAME;
		  skip to C1L07_RESP_NAME; 
	 endif; 
endif;	 
savepartial();
PROC B2L02_BN

savepartial();
PROC B2L02_RN

savepartial();
PROC B2L03_OWNER_MNGR_NAME

savepartial();
PROC B2L03_OWNER_MNGR_NICKNAME


postproc

if B2L03_OWNER_MNGR_NAME <> "" then
	if $ = "" then
		getErrorMsg("No nick name of Owner/Manager entered");
	endif;
endif;

// if $ = "" then
	 // getErrorMsg("No nick name of Owner/Manager entered");
// endif;
 
savepartial();
PROC B4L04_SEX
if !($ in 1:2) then
	getErrorMsg("Sex is empty. Please provide the required information.");
endif;

savepartial();

PROC B5L05_ADD_ESTAB
savepartial();
PROC NAME_OF_CONTACT_PERSON
savepartial();
PROC B6L06_CONTACTNO

postproc
if not $ in 0,10000000:99999999999  then
     getWarningMsg("Invalid number");
endif;
savepartial();
PROC MAX_CAP
savepartial();
PROC INTEGRATOR_MC
savepartial();
PROC YEAR_STARTED_OP
savepartial();
PROC ECO_ACTIVITY
savepartial();
PROC UPDATE_CODES



	// if poschar("A", $) > 0 and poschar("BCD", $) = 0  then
		// skip to CHANGE_NAME_ESTAB;
	// endif;
	
	// if poschar("B", $) > 0 and poschar("ACD", $) = 0  then
		// skip to CHANGE_OWNER;
	// endif;
	
	// if poschar("C", $) > 0 and poschar("BAD", $) = 0  then
		// skip to CHANGE_IN_ADDRESS;
	// endif;
	
	// if poschar("D", $) > 0 and poschar("BCA", $) = 0  then
		// skip to CHANGE_FARM_CAP;
	// endif;
postproc

	if B2L03_OWNER_MNGR_NAME = "" then
		if poschar("B", $) = 0 then
			getErrorMsg("No entry in Name of Owner/Manger. Please select Name of Owner/Manager and update.");
			reenter;
		endif;
	endif;
	
	if poschar("E", $) > 0 and poschar("ABCD", $) > 0 then
		getErrorMsg("Selection not allowed! 'No Changes' cannot be selected with other choices!");
	else
		if poschar("E", $) > 0 and poschar("ABCD", $) = 0 then
			skip to C1L07_RESP_NAME;
		endif;
	endif;
	
savepartial();
PROC CHANGE_NAME_ESTAB
preproc
	if ischecked("A",UPDATE_CODES) = 0 then    
			move to CHANGE_OWNER;
	endif;

savepartial();
PROC CHANGE_OWNER
preproc
	if ischecked("B",UPDATE_CODES) = 0 then    
			move to CHANGE_IN_ADDRESS;
	endif;

savepartial();



PROC CHANGE_IN_ADDRESS
preproc
	if ischecked("C",UPDATE_CODES) = 0 then    
			move to CHANGE_FARM_CAP;
	endif;

savepartial();
PROC CHANGE_FARM_CAP
preproc
	if ischecked("D",UPDATE_CODES) = 0 then    
			move to C1L07_RESP_NAME;
	endif;

savepartial();
PROC C1L07_RESP_NAME

if $ = "SAME" then
	if CHANGE_OWNER <> "" then
		$ = CHANGE_OWNER;
		C1L07_NICKNAME = B2L03_OWNER_MNGR_NICKNAME;
		skip to C2L08_RELATIONSHIP;
	elseif CHANGE_OWNER = "" then
		$ = B2L03_OWNER_MNGR_NAME;
		C1L07_NICKNAME = B2L03_OWNER_MNGR_NICKNAME;
		skip to C2L08_RELATIONSHIP;
	endif;
elseif $ = "" then
	getErrormsg("No name of respondent entered");
endif;


if strip(C1L07_RESP_NAME) = "" then
	ok = accept("What is the name of respondent?","Same with the owner/manager","Provide entry");
	if ok = 1 then
		$ = B2L03_OWNER_MNGR_NAME;
		C1L07_NICKNAME = B2L03_OWNER_MNGR_NICKNAME;
		C2L08_RELATIONSHIP = 1;
	else
		reenter;
	endif;
endif;

savepartial();
PROC C1L07_NICKNAME

postproc
if $ = "" then
	 getErrorMsg("No nickname of respondent entered");
endif;
 

savepartial();
PROC C2L08_RELATIONSHIP


if INTVW = 1 then
	if $ in 1:3 then
		skip to D1L11_TEND_RAISE_ANIMALS;
	elseif $ = 4 then
		skip to C2L08_REL_SPECIFY;
	else
		errmsg("No selected relation to Owner/Manager,Please select one");
		reenter;	
	endif;
else
	if $ in 1:3 then
		skip to REMARKS;
	elseif $ = 4 then
		skip to C2L08_REL_SPECIFY;
	else
		errmsg("No selected relation to Owner/Manager,Please select one");
		reenter;	
	endif;
endif;


savepartial();
PROC C2L08_REL_SPECIFY
postproc
if INTVW = 2 then
	skip to REMARKS;
endif;
savepartial();
PROC D1L11_TEND_RAISE_ANIMALS
preproc
$ = 1;

postproc
if $ <> 1 then
	$ = 1;
endif;


if ANIMAL_TYPE = 01 then
	D2L12_CARABAO = 01;
	if INTVW = 1 then
		skip to E1L01_TYPE_OF_OPERATION;
	else
		skip to REMARKS;
	endif;
elseif ANIMAL_TYPE = 02 then
	D2L12_CATTLE = 02;
	if INTVW = 1 then
	skip to F1L01_TYPE_OF_OPERATION;
	else
		skip to REMARKS;
	endif;
elseif ANIMAL_TYPE = 03 then
	D2L12_SWINE = 03;
	if INTVW = 1 then
	skip to G1L01_TYPE_OF_OPERATION;
	else
		skip to REMARKS;
	endif;
elseif ANIMAL_TYPE = 04 then
	D2L12_GOAT = 04;
		if INTVW = 1 then
	skip to H1L01_TYPE_OF_OPERATION;
	else
		skip to REMARKS;
	endif;
elseif ANIMAL_TYPE = 05 then
	D2L12_SHEEP = 05;
		if INTVW = 1 then
	skip to I1L01_TYPE_OF_OPERATION;
	else
		skip to REMARKS;
	endif;
elseif ANIMAL_TYPE = 06 then
	D2L12_BROILER = 06;
		if INTVW = 1 then
	skip to J1L01_TYPE_OF_OPERATION;
	else
		skip to REMARKS;
	endif;
elseif ANIMAL_TYPE = 07 then
	D2L12_LAYER = 07;
		if INTVW = 1 then
	skip to K1L01_TYPE_OF_OPERATION;
	else
		skip to REMARKS;
	endif;
elseif ANIMAL_TYPE = 08 then
	D2L12_NATIVE = 08;
		if INTVW = 1 then
	skip to L1L01_TYPE_OPERATION;
	else
		skip to REMARKS;
	endif;
elseif ANIMAL_TYPE = 09 then
	D2L12_GAMEFOWL = 09;
		if INTVW = 1 then
	skip to M1L01_TOTAL(1);
	else
		skip to REMARKS;
	endif;
elseif ANIMAL_TYPE = 10 then
	D2L12_DUCK = 10;
		if INTVW = 1 then
	skip to N1L01_TYPE_OPERATION;
	else
		skip to REMARKS;
	endif;
else
	skip to RTO1_L01L05000;
endif;
savepartial();
PROC GROUP001_CARABAO
preproc
if D2L12_CARABAO = 1 then
	ok = 1
else
	skip to REMARKS;
endif;
PROC E1L01_TYPE_OF_OPERATION

	if not $ in 1:7 then
		getErrorMsg("A. No selected type of operation. Please select type of operation.");
	endif;
	
savepartial();
PROC E2L02_TOTAL

postproc
if CHANGE_FARM_CAP > 0 then
	if E2L02_TOTAL(2) > CHANGE_FARM_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;

else
	if E2L02_TOTAL(2) > MAX_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;
endif;
skip to E2L03_CARABULL;
  
savepartial();
PROC E2L03_CARABULL

	if $(curocc()) > E2L02_TOTAL(curocc())  then
		getErrorMsg("A. Inventory of Carabull is greater than the total inventory ");
	endif;
	
savepartial();
PROC E2L04_CARACOW
  
	if $(curocc()) > E2L02_TOTAL(curocc())  then
		getErrorMsg("B. Inventory of Caracow is greater than the total inventory.");
	endif;
	
savepartial();
PROC E2L05_OTHER_AGES

	// getErrorMsg2("J. Other ages is selected but missing entries in number of heads, average liveweight and farnmagate price","Go back to the first month","E2L03_CARABULL");
	
	numeric xE2TotInventory = E2L03_CARABULL(curocc()) + E2L04_CARACOW(curocc()) + E2L05_OTHER_AGES(curocc());

	if $(curocc()) > E2L02_TOTAL(curocc())  then
		getErrorMsg("A. Inventory of Other Ages is greater than the total inventory.");
	endif;
	
	if xE2TotInventory <> E2L02_TOTAL then
//		getErrorMsg("The total inventory of carabao [%d] is not equal to the breakdown [%d]. Please check",E2L02_TOTAL, xE2TotInventory);
		errmsg("The total inventory of carabao [%d] is not equal to the breakdown [%d]. Please check",E2L02_TOTAL, xE2TotInventory);
		reenter
	endif;
	
	
	 firstMonthInventory  = E2L04_CARACOW(1) + E2L05_OTHER_AGES(1);
	 secondMonthInventory = E2L04_CARACOW(2) + E2L05_OTHER_AGES(2);
	
savepartial();
	

PROC BLOCK002

numeric xBAmth1,xBAmth2,xBAmth3;
 
	xBAmth1 =  E3L07_CARACALVES_BORN(1)+ E3L08_CARABAOS_ACQUIRED(1);
	xBAmth2 =  E3L07_CARACALVES_BORN(2)+ E3L08_CARABAOS_ACQUIRED(2);
	xBAmth3 =  E3L07_CARACALVES_BORN(3)+ E3L08_CARABAOS_ACQUIRED(3);

	xStartBornAcquireM1 = E2L02_TOTAL(1) + xBAmth1;
	xStartBornAcquireM2 = E2L02_TOTAL(1) + xBAmth1 + xBAmth2;
	xStartBornAcquireM3 = E2L02_TOTAL(1) + xBAmth1 + xBAmth2 + xBAmth3;

	xStartAllBornAcquireM1 = E2L02_TOTAL(1) + xBAmth1 + E3L06_CARACOWS_BIRTH(1) ;
	xStartAllBornAcquireM2 = E2L02_TOTAL(1) + xBAmth1 + xBAmth2 + E3L06_CARACOWS_BIRTH(1) + E3L06_CARACOWS_BIRTH(2);
	xStartAllBornAcquireM3 = E2L02_TOTAL(1) + xBAmth1 + xBAmth2 + xBAmth3 + E3L06_CARACOWS_BIRTH(1) + E3L06_CARACOWS_BIRTH(2) + E3L06_CARACOWS_BIRTH(3);

PROC E3L06_CARACOWS_BIRTH


	
preproc

if curocc() = 1 then
	totInventoryCarabao = E2L04_CARACOW(1) + E2L05_OTHER_AGES(1);
elseif curocc() = 2 then
	totInventoryCarabao = E2L04_CARACOW(1) + E2L05_OTHER_AGES(1);
elseif curocc() = 3 then
	totInventoryCarabao = E2L04_CARACOW(2) + E2L05_OTHER_AGES(2);
endif;

savepartial();
PROC E3L07_CARACALVES_BORN


	if $(curocc()) > 0 and E3L06_CARACOWS_BIRTH(curocc()) = 0 then
		getErrorMsg("A. With entry in born live but zero in caracow that gave birth.");
	endif;
	
	if $(curocc()) > (E3L06_CARACOWS_BIRTH(curocc()) * 2) then
		getWarningMsg("B. Born live is greater than the acceptable range. A caracow that gave birth may have at most 2 caracalf in one calving.");
	endif;


	// 10-24-2023 silas
	if E3L06_CARACOWS_BIRTH(curocc()) > 0 then
		if E3L07_CARACALVES_BORN(curocc()) in 0, notappl then
			errmsg("Warning! zero in born live but with entry in caracows that gave birth. Please check")
			select("Update number who gave birth",E3L06_CARACOWS_BIRTH(curocc()), "Update born alive",E3L07_CARACALVES_BORN(curocc()), "Proceed", next);
		endif;
	endif;


savepartial();
PROC E3L08_CARABAOS_ACQUIRED

numeric total_birth,beg_invt,end_invt,sum_gaveB;
	total_birth = 0;
	beg_invt    = 0;
	end_invt    = 0;
	sum_gaveB   = 0;

	
	total_birth = $(1) + $(2) + $(3);
               // caracow                                             other                    acquired
	beg_invt  = visualvalue(E2L04_CARACOW(1))        + visualvalue(E2L05_OTHER_AGES(1))     +  E3L08_CARABAOS_ACQUIRED(1);
	end_invt  = visualvalue(E2L04_CARACOW(2))        + visualvalue(E2L05_OTHER_AGES(2))     +  E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2) + E3L08_CARABAOS_ACQUIRED(3) ;
	sum_gaveB = visualvalue(E3L06_CARACOWS_BIRTH(1)) + visualvalue(E3L06_CARACOWS_BIRTH(2)) +  visualvalue(E3L06_CARACOWS_BIRTH(3));
	
	if curocc() = 1 then
		if visualvalue(E3L06_CARACOWS_BIRTH(1)) > beg_invt   then
//			getErrorMsg("B. Caracows that gave birth is greater than beginning inventory of caracow, other ages, and acquired.");
			errmsg("B. Caracows that gave birth [%d] is greater than beginning inventory of caracow [%d], other ages [%d], and acquired [%d].",visualvalue(E3L06_CARACOWS_BIRTH(1)), visualvalue(E2L04_CARACOW(1)), visualvalue(E2L05_OTHER_AGES(1)), E3L08_CARABAOS_ACQUIRED(1));
			reenter
		endif;
	elseif curocc() = 2 then
		if visualvalue(E3L06_CARACOWS_BIRTH(2)) > ((beg_invt + ($(2)) - visualvalue(E3L06_CARACOWS_BIRTH(1))))  then
//			 getErrorMsg("C. Caracows that gave birth is greater than the beginning inventory of caracow and other ages, and acquired.");
			 errmsg("C. Caracows that gave birth [%d] is greater than beginning inventory of caracow [%d], other ages [%d], and acquired [%d].",visualvalue(E3L06_CARACOWS_BIRTH(2)), visualvalue(E2L04_CARACOW(2)), visualvalue(E2L05_OTHER_AGES(2)), E3L08_CARABAOS_ACQUIRED(2));
			 reenter
		endif;
	elseif curocc() = 3 then
		if visualvalue(E3L06_CARACOWS_BIRTH(3)) > (end_invt  - (visualvalue(E3L06_CARACOWS_BIRTH(1)) + visualvalue(E3L06_CARACOWS_BIRTH(2))))  then
//			getErrorMsg("D. Caracows that  gave birth is is greater than the ending inventory of caracow and ending other ages, and acquired.");
			     errmsg("D. Caracows that gave birth [%d] is greater than beginning inventory of caracow [%d], other ages [%d], and acquired [%d].",visualvalue(E3L06_CARACOWS_BIRTH(2)), visualvalue(E2L04_CARACOW(2)), visualvalue(E2L05_OTHER_AGES(2)), E3L08_CARABAOS_ACQUIRED(3));
			reenter
		endif;
		
		if sum_gaveB > (beg_invt + $(2) + $(3) + E2L05_OTHER_AGES(2)) then
		  getErrorMsg("E. Total number of caracow that gave birth during the quarter exceeds the beginning inventory of caracow and other ages, and acquired.");
		  reenter
		endif;
	endif;

savepartial();
PROC E4L09_ANY_SOLD_SLAUGHTER

	if $ in 1:2 then
		if $ = 2 then
			skip to E4L25_SOLD_OTHER_PURPOSE;
		endif;
	else
		getNoAcceptCode();
	endif;
	
savepartial();
PROC E4FQ_L10L12

	if poschar("ABCD", $) = 0 then
		getErrorMsg("NO selected ages of carabao slaughtered in the household farm!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			skip to E4FQ_L13L15;
		endif;
	endif;
	
savepartial();
	
PROC BLOCK004
	
PROC E4L10L12_HEAD_M1

preproc


	if curocc() = 1 then
		totInventoryCarabaoL10 = E2L02_TOTAL(1) + E2L05_OTHER_AGES(1);;
	endif;

	//selection of ages
	if ischecked("A",E4FQ_L10L12) = 0 then 
		if curocc() = 1 then    
			move to E4L10L12_HEAD_M1(2); // punta caracow
		endif;
	endif;

	if ischecked("B",E4FQ_L10L12) = 0 then 
		if curocc() = 2 then    
			move to E4L10L12_HEAD_M1(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",E4FQ_L10L12) = 0 then 
		if curocc() = 3 then    
			move to E4L10L12_HEAD_M2(1); 
		endif;
	endif;
 
 
postproc
 

	xblockE1_m1 = $(1) + $(2) + $(3);
	E4L10L12_HEAD_TOTAL_M1 = xblockE1_m1;	 
	

	
	if curocc() = 1 then
		if $(1) > (E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1)) then
			getErrorMsg("A. Carabull slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1)) then
		getErrorMsg("A. Caracow slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1)) then
		getErrorMsg("A. Other Ages slaughtered on establishment is greater than Total Supply");
		endif;

		if E4L10L12_HEAD_TOTAL_M1 > (E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1)) then
//			getErrorMsg("A. Total slaughtered on establishment is greater than Total Supply");
			errmsg("A. Total slaughtered on establishment [%d] is greater than Total Supply [%d] + [%d]", E4L10L12_HEAD_TOTAL_M1, E2L02_TOTAL(1), E3L08_CARABAOS_ACQUIRED(1));
			reenter
		endif;
	endif;
	
savepartial();
  
PROC E4L10L12_LIVEWEIGHT_M1

	if E4L10L12_HEAD_M1(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,150,600,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,50,600,"A. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if E4L10L12_HEAD_M1(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Please verify the inputted code in either number of heads or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", E4FQ_L10L12) = 1 then
						getErrorMsg("F. Carabull is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", E4FQ_L10L12) = 1 then
						getErrorMsg("F. Caracow is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", E4FQ_L10L12) = 1 then
						getErrorMsg("F. Other ages is selected but missing entries in number of heads and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;
	
		

// if E4L10L12_HEAD_M1(1) <> notappl then mylit1 = E4L10L12_HEAD_M1(1) * $(1); endif;
// if E4L10L12_HEAD_M1(2) <> notappl then mylit2 = E4L10L12_HEAD_M1(2) * $(2); endif;
// if E4L10L12_HEAD_M1(3) <> notappl then mylit3 = E4L10L12_HEAD_M1(3) * $(3); endif;

// if $(3) <> notappl then
	// xblockE2_m1 = (mylit1 + mylit2 + mylit3)/xblockE1_m1;
	
	// if !(xblockE2_m1 in 0:9999999) then
			// xblockE2_m1 = 0;
	// endif;
      
     // E4L12L14_TOTAL_LV_M1 = xblockE2_m1;
	 // if xblockE2_m1  = notappl then
		 // E4L12L14_TOTAL_LV_M1 = 0;
	 // endif;
// endif;

	savepartial();
	
PROC E4L10L12_FARMGATE_M1


	if E4L10L12_HEAD_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15000.00,65000.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,15000.00,70000.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,13000.00,65000.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if E4L10L12_LIVEWEIGHT_M1(curocc()) in 0,  notappl and $(curocc()) in 0,  notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif E4L10L12_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0,  notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif E4L10L12_LIVEWEIGHT_M1(curocc()) in 0,  notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if E4L10L12_HEAD_M1(curocc()) in 0,notappl then
			if E4L10L12_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0,  notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif E4L10L12_LIVEWEIGHT_M1(curocc()) in 0,  notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif E4L10L12_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
			
			if E4L10L12_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", E4FQ_L10L12) = 1 then
						getErrorMsg("J. Carabull is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", E4FQ_L10L12) = 1 then
						getErrorMsg("J. Caracow is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", E4FQ_L10L12) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;

	savepartial();
	
PROC E4L10L12_HEAD_M2

preproc

	if curocc() = 1 then
		totInventoryCarabaoL10 = E2L02_TOTAL(1) + E2L05_OTHER_AGES(1)  + E2L05_OTHER_AGES(2);
	endif;


	//selection of ages
	if ischecked("A",E4FQ_L10L12) = 0 then 
		if curocc() = 1 then    
			move to E4L10L12_HEAD_M2(2); // punta caracow
		endif;
	endif;

	if ischecked("B",E4FQ_L10L12) = 0 then 
		if curocc() = 2 then    
			move to E4L10L12_HEAD_M2(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",E4FQ_L10L12) = 0 then 
		if curocc() = 3 then    
			move to E4L10L12_HEAD_M3(1); 
		endif;
	endif;
 
 
postproc


	xblockE1_m2 = $(1) + $(2) + $(3);
	E4L10L12_HEAD_TOTAL_M2 = xblockE1_m2;
	
	if curocc() = 1 then
		if $(1) > (E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2)) then
			getErrorMsg("B. Carabull slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2)) then
			getErrorMsg("B. Caracow slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 3 then
		if $(3) > (E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2)) then
			getErrorMsg("B. Other Ages slaughtered on establishment is greater than Total Supply");
		endif;
	
		if E4L10L12_HEAD_TOTAL_M2 > (E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2)) then
//			getErrorMsg("B. Total slaughtered on establishment is greater than Total Supply");
			errmsg("A. Total slaughtered on establishment [%d] is greater than Total Supply [%d] + [%d] + [%d]", E4L10L12_HEAD_TOTAL_M2, E2L02_TOTAL(1), E3L08_CARABAOS_ACQUIRED(1), E3L08_CARABAOS_ACQUIRED(2));
			reenter
		endif;
	endif;
  
	savepartial();
  
PROC E4L10L12_LIVEWEIGHT_M2

	if E4L10L12_HEAD_M2(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,150,600,"B. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,50,600,"B. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if E4L10L12_HEAD_M2(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Please verify the inputted code in either number of heads or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", E4FQ_L10L12) = 1 then
						getErrorMsg("F. Carabull is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", E4FQ_L10L12) = 1 then
						getErrorMsg("F. Caracow is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", E4FQ_L10L12) = 1 then
						getErrorMsg("F. Other ages is selected but missing entries in number of heads and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;

  
	savepartial();
PROC E4L10L12_FARMGATE_M2


	if E4L10L12_HEAD_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15000.00,65000.00,"B. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,15000.00,70000.00,"B. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,13000.00,65000.00,"B. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if E4L10L12_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif E4L10L12_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif E4L10L12_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if E4L10L12_HEAD_M2(curocc()) in 0, notappl then
			if E4L10L12_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			elseif E4L10L12_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			elseif E4L10L12_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			endif;	
				
			if E4L10L12_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", E4FQ_L10L12) = 1 then
						getErrorMsg("J. Carabull is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", E4FQ_L10L12) = 1 then
						getErrorMsg("J. Caracow is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", E4FQ_L10L12) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;
  
	savepartial();
PROC E4L10L12_HEAD_M3

preproc


	if curocc() = 1 then
		totInventoryCarabaoL10 = E2L02_TOTAL(2) + E2L05_OTHER_AGES(2);
	endif;


	//selection of ages
	if ischecked("A",E4FQ_L10L12) = 0 then 
		if curocc() = 1 then    
			move to E4L10L12_HEAD_M3(2); // punta caracow
		endif;
	endif;

	if ischecked("B",E4FQ_L10L12) = 0 then 
		if curocc() = 2 then    
			move to E4L10L12_HEAD_M3(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",E4FQ_L10L12) = 0 then 
		if curocc() = 3 then    
			move to E4FQ_L13L15; 
		endif;
	endif;
	
	
postproc 


	xblockE1_m3 = $(1) + $(2) + $(3);
	E4L10L12_HEAD_TOTAL_M3 = xblockE1_m3;


	if curocc() = 1 then
		if $(1) > (E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2) + E3L08_CARABAOS_ACQUIRED(3)) then
			getErrorMsg("C. Carabull slaughtered on establishment is greater than Total Supply");
		endif;	
	elseif curocc() = 2 then
		if $(2) > (E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2) + E3L08_CARABAOS_ACQUIRED(3)) then
			getErrorMsg("C. Caracow slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 3 then
		if $(3) > (E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2) + E3L08_CARABAOS_ACQUIRED(3)) then
			getErrorMsg("C. Other Ages slaughtered on establishment is greater than Total Supply");
		endif;
	
		if E4L10L12_HEAD_TOTAL_M3 > (E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2) + E3L08_CARABAOS_ACQUIRED(3)) then
//			getErrorMsg("C. Total slaughtered on establishment is greater than Total Supply");
			errmsg("A. Total slaughtered on establishment [%d] is greater than Total Supply [%d] + [%d] + [%d] + [%d]", E4L10L12_HEAD_TOTAL_M3, E2L02_TOTAL(1), E3L08_CARABAOS_ACQUIRED(1), E3L08_CARABAOS_ACQUIRED(2), E3L08_CARABAOS_ACQUIRED(3));
			reenter
		endif;
	endif;


	if E4L10L12_HEAD_M1(curocc()) = notappl and E4L10L12_HEAD_M2(curocc()) = notappl and E4L10L12_HEAD_M3(curocc()) = notappl then
		if curocc() = 1 then
			if ischecked("A", E4FQ_L10L12) = 1 then
				getErrorMsg("D. Carabull is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 2 then
			if ischecked("B", E4FQ_L10L12) = 1 then
				getErrorMsg("E. Caracow is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 3 then
			if ischecked("C", E4FQ_L10L12) = 1 then
				getErrorMsg("F. Other ages is selected but no entry for M1, M2, and M3");
			endif;
		endif;
	endif;
	
	savepartial();

  
PROC E4L10L12_LIVEWEIGHT_M3


	if E4L10L12_HEAD_M3(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,150,600,"C. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,50,600,"C. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if E4L10L12_HEAD_M3(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Please verify the inputted code in either number of heads or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", E4FQ_L10L12) = 1 then
						getErrorMsg("F. Carabull is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", E4FQ_L10L12) = 1 then
						getErrorMsg("F. Caracow is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", E4FQ_L10L12) = 1 then
						getErrorMsg("F. Other ages is selected but missing entries in number of heads and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;

  
	savepartial();
PROC E4L10L12_FARMGATE_M3

	if E4L10L12_HEAD_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15000.00,65000.00,"C. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,15000.00,70000.00,"C. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,13000.00,65000.00,"C. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if E4L10L12_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif E4L10L12_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif E4L10L12_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if E4L10L12_HEAD_M3(curocc()) in 0,notappl then
			if E4L10L12_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif E4L10L12_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif E4L10L12_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
			
		endif;
	endif;
	
	
			
	if E4L10L12_HEAD_M1(curocc()) in 0, notappl and E4L10L12_LIVEWEIGHT_M1(curocc()) in 0, notappl and E4L10L12_FARMGATE_M1(curocc()) in 0, notappl and
	   E4L10L12_HEAD_M3(curocc()) in 0, notappl and E4L10L12_LIVEWEIGHT_M3(curocc()) in 0, notappl and E4L10L12_FARMGATE_M3(curocc()) in 0, notappl and
	   E4L10L12_HEAD_M3(curocc()) in 0, notappl and E4L10L12_LIVEWEIGHT_M3(curocc()) in 0, notappl and E4L10L12_FARMGATE_M3(curocc()) in 0, notappl then
		if curocc() = 1 then
			if ischecked("A", E4FQ_L10L12) = 1 then
				getErrorMsg("J. Carabull is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 2 then
			if ischecked("B", E4FQ_L10L12) = 1 then
				getErrorMsg("J. Caracow is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 3 then
			if ischecked("C", E4FQ_L10L12) = 1 then
				getErrorMsg("J. Other ages is selected but no entry for M1, M2, and M3"); 
			endif;
		endif;
	endif;
	
  
	savepartial();
	
PROC E4FQ_L13L15
	if poschar("D", $) > 0 and poschar("D",E4FQ_L10L12)> 0 and  E4L09_ANY_SOLD_SLAUGHTER = 1 then
	    getErrorMsg("Dispose/sell is “Yes” but slaughtered in the HH/Farm and sold live for slaughter is code 4 “None”. ");
	endif;

	if poschar("ABCD", $) = 0 then
		getErrorMsg("NO selected carabao sold live for slaughter!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			skip to E4L16_DISPOSE_SELL_SLAUGHTER;
		endif;
	endif;
	
	
PROC E4L13L15_HEAD_M1

preproc
	//selection of ages
	if ischecked("A",E4FQ_L13L15) = 0 then 
		if curocc() = 1 then    
			move to E4L13L15_HEAD_M1(2); // punta caracow
		endif;
	endif;

	if ischecked("B",E4FQ_L13L15) = 0 then 
		if curocc() = 2 then    
			move to E4L13L15_HEAD_M1(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",E4FQ_L13L15) = 0 then 
		if curocc() = 3 then    
			move to E4L13L15_HEAD_M2(1); 
		endif;
	endif;
 
 
postproc


	xblockE2_m1 = $(1) + $(2) + $(3);
	E4L13L15_HEAD_TOTAL_M1 = xblockE2_m1;	 

	if curocc() = 1 then
		if $(1) > E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) then
			getErrorMsg("A. Carabull sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) then
			getErrorMsg("A. Caracow sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() = 3 then
		if $(3) > E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) then
			getErrorMsg("A. Other Ages sold live for slaughter is greater than Total Supply");
		endif;

		if E4L13L15_HEAD_TOTAL_M1 > (E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1)) then
//			getErrorMsg("A. Total sold live for slaughter is greater than Total Supply");
			
			
			errmsg("Total slaughtered on establishment [%d] is greater than Total Supply [%d]",E4L13L15_HEAD_TOTAL_M1, E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1));
			reenter;
			
			
		endif;
	endif;
  
		 // 11-13-2023 silas
		if visualvalue(E4L13L15_HEAD_M1(1)) >= 0 or visualvalue(E4L13L15_HEAD_M1(2)) >= 0 or visualvalue(E4L13L15_HEAD_M1(3)) >= 0 then
			numeric totDistination_CarabaoL13 = visualvalue(E4L13L15_HEAD_M1(1)) + visualvalue(E4L13L15_HEAD_M1(2)) + visualvalue(E4L13L15_HEAD_M1(3));			
			E4L21_TOTAL(1)	= totDistination_CarabaoL13;						
			//errmsg("total areas (col-1) = %v",totDistination_SwineL13);
		endif;
  
PROC E4L13L15_LIVEWEIGHT_M1

	if E4L13L15_HEAD_M1(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,150,600,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,50,600,"A. Average liveweight is not within the the acceptable range.");
		endif;
			
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if E4L13L15_HEAD_M1(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of heads or average liveweight");
			endif;		
		endif;
	endif;
  
	savepartial();
	
PROC E4L13L15_FARMGATE_M1


	E4L13L15_HEAD_TOTAL_M1 = E4L13L15_HEAD_M1(1) + E4L13L15_HEAD_M1(2) + E4L13L15_HEAD_M1(3);

	if E4L13L15_HEAD_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15000.00,65000.00,"A. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,15000.00,70000.00,"A. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,13000.00,65000.00,"A. Average Farmgate price is not within the the acceptable range.");
		endif;
		
		if E4L13L15_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif E4L13L15_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif E4L13L15_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if E4L13L15_HEAD_M1(curocc()) in 0, notappl then
			if E4L13L15_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			elseif E4L13L15_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			elseif E4L13L15_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			endif;	
			if E4L13L15_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", E4FQ_L13L15) = 1 then
						getErrorMsg("J. Carabull is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", E4FQ_L13L15) = 1 then
						getErrorMsg("J. Caracow is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", E4FQ_L13L15) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
		endif;
	endif;


	savepartial();
	
PROC E4L13L15_HEAD_M2

preproc
	//selection of ages
	if ischecked("A",E4FQ_L13L15) = 0 then 
		if curocc() = 1 then    
			move to E4L13L15_HEAD_M2(2); // punta caracow
		endif;
	endif;

	if ischecked("B",E4FQ_L13L15) = 0 then 
		if curocc() = 2 then    
			move to E4L13L15_HEAD_M2(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",E4FQ_L13L15) = 0 then 
		if curocc() = 3 then    
			move to E4L13L15_HEAD_M3(1); 
		endif;
	endif;
 

postproc


	xblockE2_m2 = $(1) + $(2) + $(3);
	E4L13L15_HEAD_TOTAL_M2 = xblockE2_m2;	 

	if curocc() = 1 then
		if $(1) > E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2) then
			getErrorMsg("B. Carabull sold live for slaughter is greater than Total Supply");
		endif;	
	elseif curocc() = 2 then
		if $(2) > E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2) then
			getErrorMsg("B. Caracow sold live for slaughter is greater than Total Supply");
		endif;	
	elseif curocc() = 3 then
		if $(3) > E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2) then
			getErrorMsg("B. Other Ages sold live for slaughter is greater than Total Supply");
		endif;
	
		if E4L13L15_HEAD_TOTAL_M2 > (E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2)) then
//			getErrorMsg("B. Total sold live for slaughter is greater than Total Supply");
			
			errmsg("Total slaughtered on establishment [%d] is greater than Total Supply [%d]",E4L13L15_HEAD_TOTAL_M2, E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2));
			reenter;
			
			
		endif;
	endif;

		 // 11-13-2023 silas
		if visualvalue(E4L13L15_HEAD_M2(1)) >= 0 or visualvalue(E4L13L15_HEAD_M2(2)) >= 0 or visualvalue(E4L13L15_HEAD_M2(3)) >= 0 then
			numeric totDistination_CarabaoL13 = visualvalue(E4L13L15_HEAD_M2(1)) + visualvalue(E4L13L15_HEAD_M2(2)) + visualvalue(E4L13L15_HEAD_M2(3));			
			E4L21_TOTAL(2)	= totDistination_CarabaoL13;						
			//errmsg("total areas (col-1) = %v",totDistination_SwineL13);
		endif;
  
PROC E4L13L15_LIVEWEIGHT_M2

	if E4L13L15_HEAD_M2(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,150,600,"B. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,50,600,"B. Average liveweight is not within the the acceptable range.");
		endif;
			if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if E4L13L15_HEAD_M2(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of heads or average liveweight");
			endif;		
		endif;
	endif;
  
	savepartial();
	
PROC E4L13L15_FARMGATE_M2

	E4L13L15_HEAD_TOTAL_M2 = E4L13L15_HEAD_M2(1) + E4L13L15_HEAD_M2(2) + E4L13L15_HEAD_M2(3);

	if E4L13L15_HEAD_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15000.00,65000.00,"B. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,15000.00,70000.00,"B. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,13000.00,65000.00,"B. Average Farmgate price is not within the the acceptable range.");
		endif;
		
		if E4L13L15_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif E4L13L15_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif E4L13L15_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if E4L13L15_HEAD_M2(curocc()) in 0,notappl then
			if E4L13L15_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif E4L13L15_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif E4L13L15_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
			
		if E4L13L15_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", E4FQ_L13L15) = 1 then
						getErrorMsg("J. Carabull is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", E4FQ_L13L15) = 1 then
						getErrorMsg("J. Caracow is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", E4FQ_L13L15) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
		endif;
	endif;

	savepartial();
PROC E4L13L15_HEAD_M3

preproc
	//selection of ages
	if ischecked("A",E4FQ_L13L15) = 0 then 
		if curocc() = 1 then    
			move to E4L13L15_HEAD_M3(2); // punta caracow
		endif;
	endif;

	if ischecked("B",E4FQ_L13L15) = 0 then 
		if curocc() = 2 then    
			move to E4L13L15_HEAD_M3(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",E4FQ_L13L15) = 0 then 
		if curocc() = 3 then    
			move to E4L16_DISPOSE_SELL_SLAUGHTER; 
		endif;
	endif;
 
 
postproc



	xblockE2_m3 = $(1) + $(2) + $(3);
	E4L13L15_HEAD_TOTAL_M3 = xblockE2_m3;	 


	if curocc() = 1 then
		if $(1) > E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2) + E3L08_CARABAOS_ACQUIRED(3) then
			getErrorMsg("C. Carabull sold live for slaughter is greater than Total Supply");
		endif;	
	elseif curocc() = 2 then
		if $(2) > E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2) + E3L08_CARABAOS_ACQUIRED(3) then
			getErrorMsg("C. Caracow sold live for slaughter is greater than Total Supply");
		endif;	
	elseif curocc() = 3 then
		if $(3) > E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2) + E3L08_CARABAOS_ACQUIRED(3) then
			getErrorMsg("C. Other Ages sold live for slaughter is greater than Total Supply");
		endif;
	
		if E4L13L15_HEAD_TOTAL_M3 > (E2L02_TOTAL(1) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2) + E3L08_CARABAOS_ACQUIRED(3)) then
//			getErrorMsg("C. Total sold live for slaughter is greater than Total Supply");
			
			errmsg("Total slaughtered on establishment [%d] is greater than Total Supply [%d]",E4L13L15_HEAD_TOTAL_M3, E2L02_TOTAL(2) + E3L08_CARABAOS_ACQUIRED(1) + E3L08_CARABAOS_ACQUIRED(2) + E3L08_CARABAOS_ACQUIRED(3));
			reenter;
			
			
		endif;
	endif;
	
	
	if E4L13L15_HEAD_M1(curocc()) = notappl and E4L13L15_HEAD_M2(curocc()) = notappl and E4L13L15_HEAD_M3(curocc()) = notappl then
		if curocc() = 1 then
			if ischecked("A", E4FQ_L13L15) = 1 then
				getErrorMsg("D. Carabull is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 2 then
			if ischecked("B", E4FQ_L13L15) = 1 then
				getErrorMsg("E. Caracow is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 3 then
			if ischecked("C", E4FQ_L13L15) = 1 then
				getErrorMsg("F. Other ages is selected but no entry for M1, M2, and M3");
			endif;
		endif;
	endif;
  
		// 11-13-2023 silas
		if visualvalue(E4L13L15_HEAD_M3(1)) >= 0 or visualvalue(E4L13L15_HEAD_M3(2)) >= 0 or visualvalue(E4L13L15_HEAD_M3(3)) >= 0 then
			numeric totDistination_CarabaoL13 = visualvalue(E4L13L15_HEAD_M3(1)) + visualvalue(E4L13L15_HEAD_M3(2)) + visualvalue(E4L13L15_HEAD_M3(3));			
			E4L21_TOTAL(3)	= totDistination_CarabaoL13;						
			//errmsg("total areas (col-1) = %v",totDistination_SwineL13);
		endif;
  
  
  
PROC E4L13L15_LIVEWEIGHT_M3

	if E4L13L15_HEAD_M3(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,150,600,"C. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,50,600,"C. Average liveweight is not within the the acceptable range.");
		endif;
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if E4L13L15_HEAD_M3(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of heads or average liveweight");
			endif;		
		endif;
	endif;
  
	savepartial();
	
PROC E4L13L15_FARMGATE_M3


	E4L13L15_HEAD_TOTAL_M3 = E4L13L15_HEAD_M3(1) + E4L13L15_HEAD_M3(2) + E4L13L15_HEAD_M3(3);

	if E4L13L15_HEAD_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15000.00,65000.00,"C. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,15000.00,70000.00,"C. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,13000.00,65000.00,"C. Average Farmgate price is not within the the acceptable range.");
		endif;
		
		if E4L13L15_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif E4L13L15_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif E4L13L15_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if E4L13L15_HEAD_M3(curocc()) in 0,notappl then
			if E4L13L15_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif E4L13L15_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif E4L13L15_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
			
		endif;
	endif;
	
	
	if E4L13L15_HEAD_M1(curocc()) in 0, notappl and E4L13L15_LIVEWEIGHT_M1(curocc()) in 0, notappl and E4L13L15_FARMGATE_M1(curocc()) in 0, notappl and
	   E4L13L15_HEAD_M3(curocc()) in 0, notappl and E4L13L15_LIVEWEIGHT_M3(curocc()) in 0, notappl and E4L13L15_FARMGATE_M3(curocc()) in 0, notappl and
	   E4L13L15_HEAD_M3(curocc()) in 0, notappl and E4L13L15_LIVEWEIGHT_M3(curocc()) in 0, notappl and E4L13L15_FARMGATE_M3(curocc()) in 0, notappl then
		if curocc() = 1 then
			if ischecked("A", E4FQ_L13L15) = 1 then
				getErrorMsg("J. Carabull is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 2 then
			if ischecked("B", E4FQ_L13L15) = 1 then
				getErrorMsg("J. Caracow is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 3 then
			if ischecked("C", E4FQ_L13L15) = 1 then
				getErrorMsg("J. Other ages is selected but no entry for M1, M2, and M3"); 
			endif;
		endif;
	endif;

	savepartial();
PROC E4L16_DISPOSE_SELL_SLAUGHTER
numeric showw1,showw2,showw3,showw;
	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 2 then
		if E4L13L15_HEAD_TOTAL_M1 >= 0 then
			showw1 = E4L13L15_HEAD_TOTAL_M1;
		else
			showw1 = 0;
		endif;
		if E4L13L15_HEAD_TOTAL_M2 >= 0 then
			showw2 = E4L13L15_HEAD_TOTAL_M2;
		else
			showw2 = 0;
		endif;
		if E4L13L15_HEAD_TOTAL_M3 >= 0 then
			showw3 = E4L13L15_HEAD_TOTAL_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to E4L21_TOTAL(1);
		else
			skip to E4L25_SOLD_OTHER_PURPOSE;
		endif;
	endif;
	
	savepartial();
PROC E4L17_COMPARED_LYSQ

	if not $ in 1:3 then
          getErrorMsg("No selected code. Please select a valid code");
    endif;	

	if $ = 3 then
		skip to E4L19_COMPARED_FG;
	endif;

	savepartial();
PROC E4L18_CHECKBOX_HIGH

preproc
	ask if E4L17_COMPARED_LYSQ = 1;

postproc

    if ischecked ("A",$) = 1 then E4L181_HIGH_DEMAND        =  1;endif;
	if ischecked ("B",$) = 1 then E4L182_NO_OUTBREAK        =  2;endif;
	if ischecked ("C",$) = 1 then E4L183_INC_PASTURE        =  3;endif;
	if ischecked ("D",$) = 1 then E4L184_LIFT_BAN           =  4;endif;
	if ischecked ("E",$) = 1 then E4L185_INC_FARM_MECH      =  5;endif;
	if ischecked ("F",$) = 1 then E4L186_HIGHER_PRICE_OFFER =  6;endif;
	if ischecked ("G",$) = 1 then E4L187_FINANCIAL_NEED     =  7;endif;
	if ischecked ("H",$) = 1 then E4L1814H_OHIGH_REASON     =  14;endif;
	

	if poschar("ABCDEFGH", $) = 0 then
		getErrorMsg("No selected code!");
	endif;


	savepartial();
PROC E4L18_CHECKBOX_LOW

preproc
	ask if E4L17_COMPARED_LYSQ = 2;

postproc

    if ischecked ("A",$) = 1 then E4L188_LOW_DEMAND       =  8;endif;
	if ischecked ("B",$) = 1 then E4L189_OUTBREAK         =  9;endif;
	if ischecked ("C",$) = 1 then E4L1810_DEC_PASTURE     = 10;endif;
	if ischecked ("D",$) = 1 then E4L1811_IMPLEMENT_BAN   = 11;endif;
	if ischecked ("E",$) = 1 then E4L1812_ANIMAL_KEPT     = 12;endif;
	if ischecked ("F",$) = 1 then E4L1813_LOW_PRICE_OFFER = 13;endif;
	if ischecked ("G",$) = 1 then E4L1814L_OLOW_REASON    = 14;endif;
	

	if poschar("ABCDEFG", $) = 0 then
		getErrorMsg("No selected code!");
	endif;

	savepartial();
PROC E4L1814HSPECIFY

preproc
	ask if ischecked("H", E4L18_CHECKBOX_HIGH) and E4L17_COMPARED_LYSQ = 1;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified.");
	endif;
	
	savepartial();
PROC E4L1814LSPECIFY

preproc
	ask if ischecked("G", E4L18_CHECKBOX_LOW) and E4L17_COMPARED_LYSQ = 2;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified.");
	endif;
	
	savepartial();
PROC E4L19_COMPARED_FG

postproc

if E4L19_COMPARED_FG = 1 then
	myReason = "Higher";
elseif E4L19_COMPARED_FG = 2 then
	myReason = "Lower";
endif;
	savepartial();
PROC E4L20_REASON_FG

preproc
	ask if E4L19_COMPARED_FG in 1:2;
	
postproc
numeric showw1,showw2,showw3,showw;
	if strip($) = "" then
		getErrorMsg("A. Indicate the reason for increase/decrease in farmgate price");
	endif;
	
		if E4L13L15_HEAD_TOTAL_M1 >= 0 then
			showw1 = E4L13L15_HEAD_TOTAL_M1;
		else
			showw1 = 0;
		endif;
		if E4L13L15_HEAD_TOTAL_M2 >= 0 then
			showw2 = E4L13L15_HEAD_TOTAL_M2;
		else
			showw2 = 0;
		endif;
		if E4L13L15_HEAD_TOTAL_M3 >= 0 then
			showw3 = E4L13L15_HEAD_TOTAL_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to E4L21_TOTAL(1);
		else
			skip to E4L25_SOLD_OTHER_PURPOSE;
		endif;
	
	savepartial();
PROC BLOCK016

// preproc
	// if curocc(RTE4_L21L24000) = 1 then	
		// tempE4L13L15_HEAD_TOTAL_M1M2M3 = E4L13L15_HEAD_TOTAL_M1;
	// elseif curocc(RTE4_L21L24000) = 2 then
		// tempE4L13L15_HEAD_TOTAL_M1M2M3 = E4L13L15_HEAD_TOTAL_M2;
	// else
		// if curocc(RTE4_L21L24000) = 3 then
			// tempE4L13L15_HEAD_TOTAL_M1M2M3 = E4L13L15_HEAD_TOTAL_M3;
		// endif;
	// endif;

PROC E4L21_TOTAL

preproc
	$(1) = E4L13L15_HEAD_TOTAL_M1;
	$(2) = E4L13L15_HEAD_TOTAL_M2;
	$(3) = E4L13L15_HEAD_TOTAL_M3;


postproc
	
  
	savepartial();
PROC E4L22_WIN_PRV

	if $(curocc()) = notappl then   
		getErrorMsg("Please verify the inputted code");
	elseif E4L22_WIN_PRV(curocc()) > E4L21_TOTAL(curocc()) then
		getErrorMsg("Sold live within the province is greater than the Total Destination");
	endif;

	getOutOfRangeW($(curocc()),0,999999);
  
	savepartial();
PROC E4L23_OUT_PRV
	
	if $(curocc()) = notappl then   
		getErrorMsg("Please verify the inputted code");
	elseif E4L23_OUT_PRV(curocc()) > E4L21_TOTAL(curocc()) then
		getErrorMsg("Sold live outside the province is greater than the Total Destination");
	endif;

	getOutOfRangeW($(curocc()),0,999999);
  
	savepartial();
PROC E4L24_UNK_PRV

preproc

	if curocc() = 1 then
		if E4L13L15_HEAD_TOTAL_M1 >= 0 then
			tempE4L13L15_HEAD_TOTAL_M1M2M3 = E4L13L15_HEAD_TOTAL_M1;
		else
			tempE4L13L15_HEAD_TOTAL_M1M2M3 = 0;
		endif;
	elseif curocc() = 2 then
		if E4L13L15_HEAD_TOTAL_M2 >= 0 then
			tempE4L13L15_HEAD_TOTAL_M1M2M3 = E4L13L15_HEAD_TOTAL_M2;
		else
			tempE4L13L15_HEAD_TOTAL_M1M2M3 = 0;
		endif;
	else
		if curocc() = 3 then
			if E4L13L15_HEAD_TOTAL_M3 >= 0 then
				tempE4L13L15_HEAD_TOTAL_M1M2M3 = E4L13L15_HEAD_TOTAL_M3;
			else
				tempE4L13L15_HEAD_TOTAL_M1M2M3 = 0;
			endif;
		endif;
	endif;
	
	
postproc
	
	E4L21_TOTAL(curocc()) = E4L22_WIN_PRV(curocc()) + E4L23_OUT_PRV(curocc()) + E4L24_UNK_PRV(curocc());
	
	
	if E4L21_TOTAL(curocc()) <> tempE4L13L15_HEAD_TOTAL_M1M2M3 then
		getErrorMsg( maketext("B. The total number of animals in the different areas of destination [%d] is not equal to the total sold live for slaughter in Item LN13 [%d] for the month of %s",E4L21_TOTAL(curocc()),tempE4L13L15_HEAD_TOTAL_M1M2M3,E2_QtrMonth(curocc())) );
	endif;
	// getInvtSuppDisp(curocc(),E4L21_TOTAL(curocc()),xCaStartBornAcquireM1,xCaStartBornAcquireM2,xCaStartBornAcquireM3,F4L10_HEAD_TOTAL_M1 ,xCatdispositionM2)
	
  
	savepartial();
PROC E4L25_SOLD_OTHER_PURPOSE

	if $ = 2 then
		skip to E4L30_DEATHS;
	elseif not E4L25_SOLD_OTHER_PURPOSE in 1:2 then
		errmsg("A. No selected code. Please select a valid code.");
		reenter;
	endif;

	savepartial();
PROC E4FQ_L27L29

	if poschar("ABCD", $) = 0 then
		getErrorMsg("NO selected carabao sold live/disposed for other purpose!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			skip to E4L30_DEATHS;
		endif;
	endif;
	
	
	savepartial();
PROC E4L27L29_HEAD_M1

preproc
	//selection of ages
	if ischecked("A",E4FQ_L27L29) = 0 then 
		if curocc() = 1 then    
			move to E4L27L29_HEAD_M1(2); // punta caraheifer
		endif;
	endif;

	if ischecked("B",E4FQ_L27L29) = 0 then 
		if curocc() = 2 then    
			move to E4L27L29_HEAD_M1(3);  // punta others
		endif;
	endif;

	if ischecked("C",E4FQ_L27L29) = 0 then 
		if curocc() = 3 then    
			move to E4L27L29_HEAD_M2(1); 
		endif;
	endif;
 
 
postproc

	 E4L26_HEAD_TOTAL_M1 = $(1) + $(2) + $(3);
  
   	if $(1) > (E2L02_TOTAL(1) + E3L07_CARACALVES_BORN(1) + E3L08_CARABAOS_ACQUIRED(1)) then
		getErrorMsg("A. Carabull sold live for other purpose is greater than Total Supply");
	elseif $(2) > (E2L02_TOTAL(1) +  E3L07_CARACALVES_BORN(1) + E3L08_CARABAOS_ACQUIRED(1)) then
		getErrorMsg("A. Caracow  sold live for other purpose is greater than Total Supply");
	elseif $(3) > (E2L02_TOTAL(1) +  E3L07_CARACALVES_BORN(1) + E3L08_CARABAOS_ACQUIRED(1)) then
		getErrorMsg("A. Other Ages  sold live for other purpose is greater than Total Supply");
	endif;
	savepartial();
  
PROC E4L27L29_FARMGATE_M1
	// if E4L27L29_FARMGATE_M1(curocc()) = notappl then   
		// getWarningMsg("Missing Entry");
	// endif;
	
	getOutOfRange($,10000,75000, "A. Average Farmgate price is not within the acceptable range.");
	
if E4L27L29_HEAD_M1(curocc()) > 0 then
	if E4L27L29_FARMGATE_M1(curocc()) in 0, notappl then
		getErrorMsg("B. With entry in number of heads but no average farmgate price.");
	endif;
endif;
	
if E4L27L29_FARMGATE_M1(curocc()) > 0 then
	if E4L27L29_HEAD_M1(curocc()) in 0, notappl then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
endif;
	
	E4L26_FARMGATE_TOTAL_M1 = $(1) + $(2) + $(3);
	
	savepartial();
	
	

PROC E4L27L29_DESTINATION_M1

preproc
if E4L27L29_HEAD_M1(curocc()) in 0, notappl then
	if E4L27L29_FARMGATE_M1(curocc()) in 0, notappl then
		skip to next;
	endif;
endif;

postproc
	if not E4L27L29_DESTINATION_M1(curocc()) in 1:3 then   
		getWarningMsg("Missing Entry");
	endif;
	
	if E4L27L29_HEAD_M1(curocc()) > 0 and not E4L27L29_DESTINATION_M1(curocc()) in 1:3 then
		if curocc() = 1 then
			getErrorMsg("A. Caracalf/Yearling has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("A. Caraheifer has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("A. Others has entry but no specified destination was selected");
		endif;
	endif;
	
if E4L27L29_DESTINATION_M1(curocc()) in 1:3 then
	if E4L27L29_HEAD_M1(curocc()) in 0, notappl then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
endif;


  
	// E4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
  
	savepartial();
	

PROC E4L27L29_HEAD_M2

preproc
	//selection of ages
	if ischecked("A",E4FQ_L27L29) = 0 then 
		if curocc() = 1 then    
			move to E4L27L29_HEAD_M2(2); // punta caraheifer
		endif;
	endif;

	if ischecked("B",E4FQ_L27L29) = 0 then 
		if curocc() = 2 then    
			move to E4L27L29_HEAD_M2(3);  // punta others
		endif;
	endif;

	if ischecked("C",E4FQ_L27L29) = 0 then 
		if curocc() = 3 then    
			move to E4L27L29_HEAD_M3(1); 
		endif;
	endif;
 
 
postproc

	 E4L26_HEAD_TOTAL_M2 = $(1) + $(2) + $(3);
  
	if $(1) > (E2L02_TOTAL(1) + E3L07_CARACALVES_BORN(2) + E3L08_CARABAOS_ACQUIRED(2)) then
		getErrorMsg("A. Carabull slaughtered on HH/Farm is greater than Total Supply");
	elseif $(2) > (E2L02_TOTAL(1) +  E3L07_CARACALVES_BORN(2) + E3L08_CARABAOS_ACQUIRED(2)) then
		getErrorMsg("A. Caracow slaughtered on HH/Farm is greater than Total Supply");
	elseif $(3) > (E2L02_TOTAL(1) +  E3L07_CARACALVES_BORN(2) + E3L08_CARABAOS_ACQUIRED(2)) then
		getErrorMsg("A. Other Ages slaughtered on HH/Farm is greater than Total Supply");
	endif;
	savepartial();
  
PROC E4L27L29_FARMGATE_M2
	
	
// if E4L27L29_FARMGATE_M2(curocc()) in 0, notappl then   
	// getWarningMsg("Missing Entry");
// endif;
	
	getOutOfRange($,10000,75000, "A. Average Farmgate price is not within the acceptable range.");
	
if E4L27L29_HEAD_M2(curocc()) > 0 then
	if E4L27L29_FARMGATE_M2(curocc()) in 0, notappl then
		getErrorMsg("B. With entry in number of heads but no average farmgate price.");
	endif;
endif;
	
if E4L27L29_FARMGATE_M2(curocc()) > 0 then
	if E4L27L29_HEAD_M2(curocc()) in 0, notappl then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
endif;
	
	E4L26_FARMGATE_TOTAL_M2 = $(1) + $(2) + $(3);
  
	savepartial();
	
PROC E4L27L29_DESTINATION_M2

preproc
if E4L27L29_HEAD_M2(curocc()) in 0, notappl then
	if E4L27L29_FARMGATE_M2(curocc()) in 0, notappl then
		skip to next;
	endif;
endif;

postproc
	if not E4L27L29_DESTINATION_M2(curocc()) in 1:3 then   
		getWarningMsg("Missing Entry");
	endif;
	
	if E4L27L29_HEAD_M2(curocc()) > 0 and not E4L27L29_DESTINATION_M2(curocc()) in 1:3 then
		if curocc() = 1 then
			getErrorMsg("B. Caracalf/Yearling has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("B. Caraheifer has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("B. Others has entry but no specified destination was selected");
		endif;
	endif;
	
if E4L27L29_DESTINATION_M2(curocc()) in 1:3 then
	if E4L27L29_HEAD_M2(curocc()) in 0, notappl then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
endif;



	// E4L26_DESTINATION_TOTAL_M2 = $(1) + $(2) + $(3);
  
	savepartial();
	
PROC E4L27L29_HEAD_M3

preproc
	//selection of ages
	if ischecked("A",E4FQ_L27L29) = 0 then 
		if curocc() = 1 then    
			move to E4L27L29_HEAD_M3(2); // punta caraheifer
		endif;
	endif;

	if ischecked("B",E4FQ_L27L29) = 0 then 
		if curocc() = 2 then    
			move to E4L27L29_HEAD_M3(3);  // punta others
		endif;
	endif;

	if ischecked("C",E4FQ_L27L29) = 0 then 
		if curocc() = 3 then    
			move to E4L30_DEATHS; 
		endif;
	endif;
postproc


	 E4L26_HEAD_TOTAL_M3 = $(1) + $(2) + $(3);
	if Curocc() = 3 then
		if E4L27L29_HEAD_M1(1) + E4L27L29_HEAD_M1(2) + E4L27L29_HEAD_M1(3) = 0 then  
			if E4L27L29_HEAD_M2(1) + E4L27L29_HEAD_M2(2) + E4L27L29_HEAD_M2(3) = 0 then  
				if E4L27L29_HEAD_M2(1) + E4L27L29_HEAD_M2(2) + E4L27L29_HEAD_M2(3) = 0 then  
					getErrorMsg("There is a selected animal age, but all months are empty.");
				endif;
			endif;
		endif;
	endif;
	
	if $(1) > (E2L02_TOTAL(1) + E3L07_CARACALVES_BORN(3) + E3L08_CARABAOS_ACQUIRED(3)) then
		getErrorMsg("A. Carabull slaughtered on HH/Farm is greater than Total Supply");
	elseif $(2) > (E2L02_TOTAL(1) +  E3L07_CARACALVES_BORN(3) + E3L08_CARABAOS_ACQUIRED(3)) then
		getErrorMsg("A. Caracow slaughtered on HH/Farm is greater than Total Supply");
	elseif $(3) > (E2L02_TOTAL(1) +  E3L07_CARACALVES_BORN(3) + E3L08_CARABAOS_ACQUIRED(3)) then
		getErrorMsg("A. Other Ages slaughtered on HH/Farm is greater than Total Supply");
	endif;
	savepartial();
  
  
  
PROC E4L27L29_FARMGATE_M3

	// if E4L27L29_FARMGATE_M3(curocc()) in 0, notappl then   
		// getWarningMsg("Missing Entry");
	// endif;
	
	getOutOfRange($,10000,75000, "A. Average Farmgate price is not within the acceptable range.");
	
if E4L27L29_HEAD_M3(curocc()) > 0 then
	if E4L27L29_FARMGATE_M3(curocc()) in 0, notappl then
		getErrorMsg("B. With entry in number of heads but no average farmgate price.");
	endif;
endif;

if E4L27L29_FARMGATE_M3(curocc()) > 0 then
	if E4L27L29_HEAD_M3(curocc()) in 0, notappl then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
endif;

	E4L26_FARMGATE_TOTAL_M3 = $(1) + $(2) + $(3);
	
	savepartial();
	

PROC E4L27L29_DESTINATION_M3

	
preproc
if E4L27L29_HEAD_M3(curocc()) in 0, notappl then
	if E4L27L29_FARMGATE_M3(curocc()) in 0, notappl then
		skip to next;
	endif;
endif;

postproc
	if not E4L27L29_DESTINATION_M3(curocc()) in 1:3 then   
		getWarningMsg("Missing Entry");
	endif;
	
	if E4L27L29_HEAD_M3(curocc()) > 0 and not E4L27L29_DESTINATION_M3(curocc()) in 1:3 then
		if curocc() = 1 then
			getErrorMsg("C. Caracalf/Yearling has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("C. Caraheifer has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("C. Others has entry but no specified destination was selected");
		endif;
	endif;

	// E4L26_DESTINATION_TOTAL_M3 = $(1) + $(2) + $(3);
	
	if E4L27L29_HEAD_M1(curocc()) in 0, notappl and E4L27L29_FARMGATE_M1(curocc()) in 0, notappl and not E4L27L29_DESTINATION_M1(curocc()) in 1:3 and
	   E4L27L29_HEAD_M2(curocc()) in 0, notappl and E4L27L29_FARMGATE_M2(curocc()) in 0, notappl and not E4L27L29_DESTINATION_M2(curocc()) in 1:3 and
	   E4L27L29_HEAD_M3(curocc()) in 0, notappl and E4L27L29_FARMGATE_M3(curocc()) in 0, notappl and not E4L27L29_DESTINATION_M3(curocc()) in 1:3 then
		if curocc() = 1 then
			if ischecked("A", E4FQ_L27L29) = 1 then
				getErrorMsg("D. caracalf/yearling is selected but no entries"); 
			endif;
		elseif curocc() = 2 then
			if ischecked("B", E4FQ_L27L29) = 1 then
				getErrorMsg("E. caraheifer is selected but no entries"); 
			endif;
		elseif curocc() = 3 then
			if ischecked("C", E4FQ_L27L29) = 1 then
				getErrorMsg("F. others is selected but missing entries in number of heads and average farmgate price"); 
			endif;
		endif;
	endif;

	savepartial();
	
PROC E4L30_DEATHS

	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 2 then
		skip to E5L33_CARACOW_MILKLINE(1);
	endif;

	savepartial();
	
	
PROC E4FQ_L31L32

preproc
	ask if E4L30_DEATHS = 1;

postproc
	if poschar("AB", $) = 0 then
		getErrorMsg("NO selected carabao sold live/disposed for other purpose!");
	endif;
	

	savepartial();
	
	
PROC RTE4_DC000

preproc
setproperty("SpecialValuesZero",true);
postproc


	if ischecked("AB",E4FQ_L31L32) > 0 then
		if strip(ED_CARABAO_DISEASES) = "" and strip(ECA_SPECIFY) = "" then
			getErrorMsg("C. Deaths/losses is code 1 but disease and other causes is empty.");
		endif;
	endif;

PROC ED_CARABAO_DISEASES

preproc
	ask if ischecked("A",E4FQ_L31L32);
	string xDa, xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq,xDr;
	numeric cc = curocc();
	
postproc

	if soccurs(RTE4_L31L32) = 0 then INSERT(RTE4_L31L32(1)); endif;
	if soccurs(RTE4_L31L32) = 1 then INSERT(RTE4_L31L32(2)); endif;

	if ischecked("A",$ ) = 1 then xDa = "Antrax (Bacterial) "; 						endif;
	if ischecked("B",$ ) = 1 then xDb = "Black Leg Disease (Bacterial) ";  			endif;
	if ischecked("C",$ ) = 1 then xDc = "Blue Tongue (Viral) ";  					    endif;
	if ischecked("D",$ ) = 1 then xDd = "Botulism (Bacterial) ";                      endif;
	if ischecked("E",$ ) = 1 then xDe = "Bovine Rhinotracheitis (Viral/Bacterial) "; 	endif;
	if ischecked("F",$ ) = 1 then xDf = "Brucellosis (Bacterial) ";  					endif;
	if ischecked("G",$ ) = 1 then xDg = "Colds "; 									endif;
	if ischecked("H",$ ) = 1 then xDh = "Diarrhea "; 									endif;
	if ischecked("I",$ ) = 1 then xDi = "Enteritis (Bacterial/Viral) ";  				endif;
	if ischecked("J",$ ) = 1 then xDj = "Foot And Mouth Disease (Viral) ";  			endif;
	if ischecked("K",$ ) = 1 then xDk = "Leptospirosis (Bacterial) ";  				endif;
	if ischecked("L",$ ) = 1 then xDl = "Pneumonia (Bacterial/Viral/Fungal) ";  		endif;
	if ischecked("M",$ ) = 1 then xDm = "Rabies (Viral) ";  							endif;
	if ischecked("N",$ ) = 1 then xDn = "Rinderpest (Viral) ";  						endif;
	if ischecked("O",$ ) = 1 then xDo = "Tetanus (Bacterial) ";  					endif;
	if ischecked("P",$ ) = 1 then xDp = "Tick Fever(Bacterial) ";  					endif;
	if ischecked("Q",$ ) = 1 then xDq = "Vibriosis(Bacterial) ";  						endif;
	if ischecked("R",$ ) = 1 then xDr = EDR_SPECIFY;  								endif;

 
	if curocc() = 1 then  E4L31L32_SPECIFY_M1(1) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq,xDr); 
	elseif curocc() = 2 then  E4L31L32_SPECIFY_M2(1) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq,xDr); 
	elseif curocc() = 3 then  E4L31L32_SPECIFY_M3(1) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq,xDr); 
	endif;

if curocc() = 3 then
	if poschar("ABCDEFGHIJKLMNOPQR", ED_CARABAO_DISEASES(1)) in 0, notappl then
		if poschar("ABCDEFGHIJKLMNOPQR", ED_CARABAO_DISEASES(2)) in 0, notappl then
			if poschar("ABCDEFGHIJKLMNOPQR", ED_CARABAO_DISEASES(3)) in 0, notappl then
				getErrorMsg("No selected code!");
			endif;
		endif;
	endif;
endif;
	savepartial();
PROC EDA_HC

preproc 
	ask if ischecked("A",E4FQ_L31L32) and ischecked("A",ED_CARABAO_DISEASES);
numeric cc = curocc();

postproc
// TOTAL_ED_CARABAO_HC(cc) = EDA_HC(cc); 

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

     // if cc = 1 then E4L31L32_NUMBER_OF_HEADS_M1(1) = TOTAL_ED_CARABAO_HC(cc); 
 // elseif cc = 2 then E4L31L32_NUMBER_OF_HEADS_M2(1) = TOTAL_ED_CARABAO_HC(cc); 
 // elseif cc = 3 then E4L31L32_NUMBER_OF_HEADS_M3(1) = TOTAL_ED_CARABAO_HC(cc); 
 // endif;
 
  savepartial();
PROC EDB_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("B",ED_CARABAO_DISEASES);

numeric cc = curocc();
postproc
   
// TOTAL_ED_CARABAO_HC(cc) = EDA_HC(cc) + EDB_HC(cc);

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

     // if cc = 1 then E4L31L32_NUMBER_OF_HEADS_M1(1) = TOTAL_ED_CARABAO_HC(cc); 
 // elseif cc = 2 then E4L31L32_NUMBER_OF_HEADS_M2(1) = TOTAL_ED_CARABAO_HC(cc); 
 // elseif cc = 3 then E4L31L32_NUMBER_OF_HEADS_M3(1) = TOTAL_ED_CARABAO_HC(cc); 
 // endif;
 
  savepartial();
PROC EDC_HC


preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("C",ED_CARABAO_DISEASES);

numeric cc = curocc();

postproc

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

 
  savepartial();
PROC EDD_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("D",ED_CARABAO_DISEASES);
numeric cc = curocc();

postproc
// TOTAL_ED_CARABAO_HC(cc) = EDA_HC(cc) + EDB_HC(cc) + EDC_HC(cc)  + EDD_HC(cc);

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

     // if cc = 1 then E4L31L32_NUMBER_OF_HEADS_M1(1) = TOTAL_ED_CARABAO_HC(cc); 
 // elseif cc = 2 then E4L31L32_NUMBER_OF_HEADS_M2(1) = TOTAL_ED_CARABAO_HC(cc); 
 // elseif cc = 3 then E4L31L32_NUMBER_OF_HEADS_M3(1) = TOTAL_ED_CARABAO_HC(cc); 
 // endif;
 
  savepartial();
PROC EDE_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("E",ED_CARABAO_DISEASES);

numeric cc = curocc();

postproc

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

  savepartial();
PROC EDF_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("F",ED_CARABAO_DISEASES);

numeric cc = curocc();

postproc

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

  savepartial();
PROC EDG_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("G",ED_CARABAO_DISEASES);
numeric cc = curocc();

postproc

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

  savepartial();
PROC EDH_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("H",ED_CARABAO_DISEASES);

numeric cc = curocc();

postproc

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

  savepartial();
PROC EDI_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("I",ED_CARABAO_DISEASES);

numeric cc = curocc();

postproc

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

  savepartial();
PROC EDJ_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("J",ED_CARABAO_DISEASES);

numeric cc = curocc();

postproc

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

  savepartial();
PROC EDK_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("K",ED_CARABAO_DISEASES);

numeric cc = curocc();

postproc

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

  savepartial();
PROC EDL_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("L",ED_CARABAO_DISEASES);

numeric cc = curocc();

postproc

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

  savepartial();
PROC EDM_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("M",ED_CARABAO_DISEASES);

numeric cc = curocc();

postproc

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

  savepartial();
PROC EDN_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("N",ED_CARABAO_DISEASES);

numeric cc = curocc();

postproc

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

  savepartial();
PROC EDO_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("O",ED_CARABAO_DISEASES);

numeric cc = curocc();

postproc

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

  savepartial();
PROC EDP_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("P",ED_CARABAO_DISEASES);
numeric cc = curocc();

postproc

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

  savepartial();
PROC EDQ_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("Q",ED_CARABAO_DISEASES);

numeric cc = curocc();

postproc

if $(cc) in 0, notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getOutOfRange($,0,9999, "B. Verify inputed values.");

  savepartial();
PROC EDR_SPECIFY


preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("R",ED_CARABAO_DISEASES);
	
postproc

	if strip($) = "" then
		getErrorMsg("C. Please specify the cause of death due to other disease.");
	endif;
	
	savepartial();
	
	
	
PROC EDR_HC

preproc
	ask if ischecked("A",E4FQ_L31L32) and ischecked("R",ED_CARABAO_DISEASES);

numeric cc = curocc();


TOTAL_ED_CARABAO_HC(cc)   = EDA_HC(cc) + EDB_HC(cc) + EDC_HC(cc)  + EDD_HC(cc) + EDD_HC(cc) + EDE_HC(cc) + EDF_HC(cc) + EDG_HC(cc) +
								EDH_HC(cc) + EDI_HC(cc) + EDJ_HC(cc)  + EDK_HC(cc) + EDL_HC(cc) + EDM_HC(cc) + EDN_HC(cc) + EDO_HC(cc) +
								EDP_HC(cc) + EDQ_HC(cc) + EDR_HC(cc);
		
			 if cc = 1 then E4L31L32_NUMBER_OF_HEADS_M1(1) = TOTAL_ED_CARABAO_HC(cc); E4L31L32_NUMBER_OF_HEADS_M1(2) = ECA_SP_HC(cc);
		 elseif cc = 2 then E4L31L32_NUMBER_OF_HEADS_M2(1) = TOTAL_ED_CARABAO_HC(cc); E4L31L32_NUMBER_OF_HEADS_M2(2) = ECA_SP_HC(cc);
		 elseif cc = 3 then E4L31L32_NUMBER_OF_HEADS_M3(1) = TOTAL_ED_CARABAO_HC(cc); E4L31L32_NUMBER_OF_HEADS_M3(2) = ECA_SP_HC(cc);
		 endif;

postproc
	if not strip(EDR_SPECIFY(curocc())) = "" then
		if EDR_HC(curocc()) in 0, notappl then      
			getErrorMsg("With entry in the reason for death, but no corresponding number of deaths.");
		elseif not EDR_HC(curocc()) in 1:9999 then
			getErrorMsg("Verify inputted value.");
		endif;
	else 
		if $(curocc()) > 0 then
			getErrorMsg("With entry in number of death, but no corresponding reason for deaths.");
		endif;
	endif;
	
	
  
	savepartial();
PROC ECA_SPECIFY

preproc
	ask if ischecked("B",E4FQ_L31L32);

postproc


	
    if curocc() = 1 then  E4L31L32_SPECIFY_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  E4L31L32_SPECIFY_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  E4L31L32_SPECIFY_M3(2) = $(curocc());
	endif;

	savepartial();
	
	
PROC ECA_SP_HC

preproc
	ask if ischecked("B",E4FQ_L31L32) and strip(ECA_SPECIFY) <> "";

postproc
    if  ECA_SP_HC(curocc()) > 0 and strip(ECA_SPECIFY(curocc())) = ""    then
		getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	elseif not ECA_SP_HC(curocc()) > 0 and not strip(ECA_SPECIFY(curocc())) = "" then
		getErrorMsg("With entry in the reason for death but no corresponding number of deaths.");
	endif;
   
	getOutOfRange($,0,9999, "B. Verify inputed values.");

    if curocc() = 1 then  E4L31L32_NUMBER_OF_HEADS_M1(2)  = $(curocc()); 
	elseif curocc() = 2 then  E4L31L32_NUMBER_OF_HEADS_M2(2)  = $(curocc()); 
	elseif curocc() = 3 then 
		E4L31L32_NUMBER_OF_HEADS_M3(2)  = $(curocc());
		if $(1) +  $(2) + $(3) = 0 then
			getErrorMsg(" Other causes are selected but all months has no entry. ");
		endif;
	endif;
    
	
	savepartial();
PROC ECB_SPECIFY
preproc
	ask if ischecked("B",E4FQ_L31L32);

postproc

	
    if curocc() = 1 then  E4L31L32_SPECIFY_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  E4L31L32_SPECIFY_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  E4L31L32_SPECIFY_M3(2) = $(curocc());
	endif;

	savepartial();
	
PROC ECB_SP_HC
preproc
	ask if ischecked("B",E4FQ_L31L32) and strip(ECB_SPECIFY) <> "";
postproc
    if  $(curocc()) > 0 and strip(ECB_SPECIFY(curocc())) = ""    then
		 getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	elseif not ECB_SP_HC(curocc()) > 0 and not strip(ECB_SPECIFY(curocc())) = "" then
		getErrorMsg("With entry in the reason for death but no corresponding number of deaths.");
	endif;
   
	getOutOfRange($,0,9999, "B. Verify inputed values.");

    if curocc() = 1 then  E4L31L32_NUMBER_OF_HEADS_M1(2)  = $(curocc()); 
	elseif curocc() = 2 then  E4L31L32_NUMBER_OF_HEADS_M2(2)  = $(curocc()); 
	elseif curocc() = 3 then 
		E4L31L32_NUMBER_OF_HEADS_M3(2)  = $(curocc());
		if $(1) +  $(2) + $(3) = 0 then
			getErrorMsg(" Other causes are selected but all months has no entry. ");
		endif;
	endif;
    
	
	savepartial();
PROC ECC_SPECIFY
preproc
	ask if ischecked("B",E4FQ_L31L32);

postproc

	
	
    if curocc() = 1 then  E4L31L32_SPECIFY_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  E4L31L32_SPECIFY_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  E4L31L32_SPECIFY_M3(2) = $(curocc());
	endif;
	
	if curocc() = 3 then    	
		if  strip(ECA_SPECIFY(1)) = "" and strip(ECA_SPECIFY(2)) = "" and strip(ECA_SPECIFY(3)) = "" and
			strip(ECB_SPECIFY(1)) = "" and strip(ECB_SPECIFY(2)) = "" and strip(ECB_SPECIFY(3)) = "" and 
			strip($(1)) = "" and strip($(2)) = "" and strip($(3)) = "" then
				getErrorMsg("D. Please specify the cause of death due to other causes.");
		endif;
	endif;
	savepartial();
	
PROC ECC_SP_HC
preproc
	ask if ischecked("B",E4FQ_L31L32) and strip(ECC_SPECIFY) <> "";
postproc
   if  $(curocc()) > 0 and strip(ECC_SPECIFY (curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	elseif not ECC_SP_HC(curocc()) > 0 and not strip(ECC_SPECIFY(curocc())) = "" then
		getErrorMsg("With entry in the reason for death but no corresponding number of deaths.");
	endif;
   
   
	getOutOfRange($,0,9999, "B. Verify inputed values.");

    if curocc() = 1 then  E4L31L32_NUMBER_OF_HEADS_M1(2)  = $(curocc()); 
	elseif curocc() = 2 then  E4L31L32_NUMBER_OF_HEADS_M2(2)  = $(curocc()); 
	elseif curocc() = 3 then 
		E4L31L32_NUMBER_OF_HEADS_M3(2)  = $(curocc());
		if $(1) +  $(2) + $(3) = 0 then
			getErrorMsg(" Other causes are selected but all months has no entry. ");
		endif;
	endif;
    
	
	savepartial();
PROC RTE5_L33L44000
preproc
if E1L01_TYPE_OF_OPERATION in 3,5,6,7 then
	oks=1;
else
	skip to remarks;
endif;
PROC E5L33_CARACOW_MILKLINE

preproc
	if !(E1L01_TYPE_OF_OPERATION in 3,5,6,7) then
		skip to REMARKS;
	endif;
	
postproc

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
  
	getOutOfRangeW($(curocc()),0,99999);
	
	// If number of caracows in the milkline is > than the beggining inventory of caracow + Other Ages +Acquired
	tempBI  = E2L04_CARACOW(1) + E2L05_OTHER_AGES(1) + E3L08_CARABAOS_ACQUIRED(1);
	if $ > tempBI then
		getErrorMsg("Number of caracows in the milkline exceeds the inventory of caracow, Other Ages, and Acquired");
	endif;
	
	savepartial();

PROC E5L34_AVE_MILK_DAY

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	if curocc() = 1 then
		if $ > refdays1 then
			getErrorMsg(maketext("Average number of milking days is higher than the total number of days for the month of %s.",E2_QtrMonth(curocc())));
		endif;
	elseif curocc() = 2 then
		if $ > refdays2 then
			getErrorMsg(maketext("Average number of milking days is higher than the total number of days for the month of %s.",E2_QtrMonth(curocc())));
		endif;
	elseif curocc() = 3 then
		if $ > refdays3 then
			getErrorMsg(maketext("Average number of milking days is higher than the total number of days for the month of %s.",E2_QtrMonth(curocc())));
		endif;
	endif;
  
	savepartial();
PROC E5L35_AVE_MILK_PROD

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
  
	getOutOfRange($,1,10.00, "Average milk production (in liter) per day is not within the acceptable range.");
  
	savepartial();
PROC E5L37_CONSUMED_HOME


	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
  
if E5L37_CONSUMED_HOME(curocc()) > 100 then
	getErrorMsg("A. Entered value is greater than 100 percent. Verify inputed data");
endif;
 
	// getOutOfRange($,1,100.00, "A. Entered value is greater than 100 percent. Verify inputed data");
  
	savepartial();
  

  
PROC E5L38_FED_CALVES

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;

if E5L38_FED_CALVES(curocc()) > 100 then
	getErrorMsg("A. Entered value is greater than 100 percent. Verify inputed data");
endif;

	// getOutOfRange($,1,100.00, "A. Entered value is greater than 100 percent. Verify inputed data");
  
	savepartial();
  
PROC E5L39_WASTAGE

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;

if E5L39_WASTAGE(curocc()) > 100 then
	getErrorMsg("A. Entered value is greater than 100 percent. Verify inputed data");
endif;
  
	// getOutOfRange($,1,100.00, "A. Entered value is greater than 100 percent. Verify inputed data");
  
	savepartial();
  
PROC E5L40_FRESH_MILK

postproc
numeric xTotMilkProd = visualvalue(E5L37_CONSUMED_HOME(curocc())) + visualvalue(E5L38_FED_CALVES(curocc())) + visualvalue(E5L39_WASTAGE(curocc())) + visualvalue(E5L40_FRESH_MILK(curocc()));

	E5L36_TOTAL_MILK_PROD(curocc()) = E5L37_CONSUMED_HOME(curocc()) + E5L38_FED_CALVES(curocc()) + E5L39_WASTAGE(curocc()) + E5L40_FRESH_MILK(curocc());

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;

	if E5L39_WASTAGE(curocc()) > 100 then
	getErrorMsg("A. Entered value is greater than 100 percent. Verify inputed data");
	endif;

	if E5L36_TOTAL_MILK_PROD(curocc()) in 0, notappl then
	if E5L40_FRESH_MILK(curocc()) > 0 then
		getErrorMsg("B. Sold as raw milk is greater than zero but computed milk production is zero. Please verify the milk disposition or milk production.");
	endif;
	endif;

	if  E5L36_TOTAL_MILK_PROD(curocc()) < 100 and E5L36_TOTAL_MILK_PROD(curocc()) <> 0   then
		getErrorMsg("C. Sum of 1:4 is less than 100 %. Verify the inputted data");
	endif;


	if E5L37_CONSUMED_HOME(curocc()) in 0, notappl and E5L38_FED_CALVES(curocc()) in 0, notappl and E5L39_WASTAGE(curocc()) in 0, notappl and E5L40_FRESH_MILK(curocc()) in 0, notappl and E5L35_AVE_MILK_PROD(curocc()) > 0 then
		getErrorMsg("F. With entry in Total milk produced (in liters) but without entry in any items of consumed /processed at home,  fed to caracalves, wastage, and sold as raw milk");
	endif;

	if E5L36_TOTAL_MILK_PROD(curocc()) > 0 and E5L33_CARACOW_MILKLINE(curocc()) in 0, notappl and E5L34_AVE_MILK_DAY(curocc()) in 0, notappl and E5L35_AVE_MILK_PROD(curocc()) in 0, notappl then
		getErrorMsg("G. Milk production indicator has no entry but milk disposition has entry");
	endif;

	// for total not in edit specs
	if E5L36_TOTAL_MILK_PROD(curocc()) > 100 then
		getErrorMsg("Entered value is greater than 100 percent. Verify inputed data");
	endif;

	E5L41_TOTAL_M1(curocc()) = E5L33_CARACOW_MILKLINE(curocc()) * E5L34_AVE_MILK_DAY(curocc()) * E5L35_AVE_MILK_PROD(curocc()) * (visualvalue(E5L40_FRESH_MILK(curocc())) / 100);

	savepartial();
PROC BLOCK025
	
preproc

	ask if E5L40_FRESH_MILK(curocc()) > 0;
	

PROC E5L42_SOLD_VOL_PCC


postproc

	if not $(curocc()) in 0:999999.99 then
		getWarningMsg("Entry(PCC Volume) is not in acceptable range");
	endif; 
	savepartial();
  
PROC E5L42_MILK_FG_PCC

	if not $(curocc()) in 0,40.00:90.00 then
		getWarningMsg("Entry(PCC Ave. Farmgate Price) is not in acceptable range");
	endif; 
	
	if E5L42_SOLD_VOL_PCC(curocc()) > 0 then
		if ($ = 0 or $ = notappl) then
			getErrorMsg("a. Missing entry in average farmgate");
		endif;
	else
		if E5L42_SOLD_VOL_PCC(curocc()) = 0 then
			if $ > 0 then
				getErrorMsg("b. Missing entry in Volume/Number (in liter)");
			endif;
		endif;
	endif;
	
	savepartial();
PROC E5L43_SOLD_VOL_NDA

	if not $(curocc()) in 0:999999.99 then
		getWarningMsg("Entry(NDA Volume) is not in acceptable range");
	endif;
   
	savepartial(); 
PROC E5L43_MILK_FG_NDA

	
	if not $(curocc()) in 0,40.00:90.00 then
		getWarningMsg("Entry(NDA Ave. Farmgate Price) is not in acceptable range");
	else
		getWarningMsg("Veify the inputted entry. Carabao's milk will only sold to PCC or Other than PCC");
	endif; 
	    
	savepartial();

PROC E5L44_SOLD_VOL_OTHERS


postproc

	E5L41_TOTAL_M1(curocc()) = E5L42_SOLD_VOL_PCC(curocc()) + E5L43_SOLD_VOL_NDA(curocc()) + E5L44_SOLD_VOL_OTHERS(curocc());

	if not $(curocc()) in 0:999999.99 then
		getWarningMsg("Entry(Other Volume) is not in acceptable range");
	endif;
	savepartial();

PROC E5L44_MILK_FG_OTHERS

		if not $(curocc()) in 0,40.00:90.00 then
		getWarningMsg("Entry(Other Ave. Farmgate Price) is not in acceptable range");
	endif; 
	
	if curocc() = 1 then
		xblockE4_m1 = E5L42_SOLD_VOL_PCC(1) + E5L43_SOLD_VOL_NDA(1) + E5L44_SOLD_VOL_OTHERS(1);
		// E5L41_TOTAL_M1(1) = xblockE4_m1;
	elseif curocc() = 2 then
		xblockE4_m2 = E5L42_SOLD_VOL_PCC(2) + E5L43_SOLD_VOL_NDA(2) + E5L44_SOLD_VOL_OTHERS(2);
		// E5L41_TOTAL_M1(2) = xblockE4_m2;
	elseif curocc() = 3 then
		xblockE4_m3 = E5L42_SOLD_VOL_PCC(3) + E5L43_SOLD_VOL_NDA(3) + E5L44_SOLD_VOL_OTHERS(3);
		// E5L41_TOTAL_M1(3) = xblockE4_m3;
	endif;
	
	if E5L44_SOLD_VOL_OTHERS(curocc()) > 0 then
		if ($ = 0 or $ = notappl) then
			getErrorMsg("a. Missing entry in average farmgate");
		endif;
	else
		if E5L44_SOLD_VOL_OTHERS(curocc()) = 0 then
			if $ > 0 then
				getErrorMsg("b. Missing entry in Volume/Number (in liter)");
			endif;
		endif;
	endif;
	
	// E5L41_TOTAL_M1(curocc()) = E5L42_SOLD_VOL_PCC(curocc()) + E5L43_SOLD_VOL_NDA(curocc()) + E5L44_SOLD_VOL_OTHERS(curocc());
	
	tempTotal = ((E5L40_FRESH_MILK(curocc())/100) * (E5L33_CARACOW_MILKLINE(curocc()) * E5L34_AVE_MILK_DAY(curocc()) * E5L35_AVE_MILK_PROD(curocc())));
	
	if E5L41_TOTAL_M1(curocc()) <> ((E5L40_FRESH_MILK(curocc())/100) * (E5L33_CARACOW_MILKLINE(curocc()) * E5L34_AVE_MILK_DAY(curocc()) * E5L35_AVE_MILK_PROD(curocc()))) THEN //tempTotal then
		errmsg("Total sold as fresh milk %10.2f is not equal to %10.2f (Sum of sold to PCC, NDA, and Other than PCC/NDA is less than or greater than LN 41 x Total Milk Produced)",E5L41_TOTAL_M1(curocc()),tempTotal)
		select("Milk Production",E5L33_CARACOW_MILKLINE(curocc()),"Sold as Fresh Milk",E5L40_FRESH_MILK(curocc()),"Milk Destination",E5L42_SOLD_VOL_PCC(curocc()),"Proceed",continue);
	endif;
    
	savepartial();

//********  Block F - Cattle *******//

PROC E5L44_OTHER_MTH
preproc
	ask if E5L44_SOLD_VOL_OTHERS(curocc()) > 0 and E5L44_MILK_FG_OTHERS(curocc()) > 0 ;
	
postproc
	if E5L44_SOLD_VOL_OTHERS(curocc()) > 0 or E5L44_SOLD_VOL_OTHERS(curocc()) > 0  then
		if strip($) = "" then
			getErrorMsg("Missing entry in specify! Please specify other destination!");
		endif;
	endif;

	if E5L44_SOLD_VOL_OTHERS(curocc()) in 0, notappl and E5L44_SOLD_VOL_OTHERS(curocc()) in 0, notappl then
		if !(strip($) = "") then
			getErrorMsg("Item specify should be blank!");
		endif;
	endif; 


	savepartial();

PROC GROUP002_CATTLE
preproc
if D2L12_CATTLE = 2 then
	ok = 1
else
	skip to REMARKS;
endif;
PROC F1L01_TYPE_OF_OPERATION

postproc
	if not $ in 1:8 then
		getErrorMsg("A. No selected type of operation. Please select type of operation.");
	endif;
	
	savepartial();
PROC F2L02_TOTAL


postproc
if CHANGE_FARM_CAP > 0 then
	if F2L02_TOTAL(2) > CHANGE_FARM_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;

else
	if F2L02_TOTAL(2) > MAX_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;
endif;
	savepartial();
	
PROC F2L03_BULL

	if $(curocc()) > F2L02_TOTAL(curocc())  then
		getErrorMsg("A. Inventory of Bull is greater than the total inventory ");
	endif;
	
	savepartial();
PROC F2L04_COW

	if $(curocc()) > F2L02_TOTAL(curocc())  then
		getErrorMsg("B. Inventory of Cow is greater than the total inventory.");
	endif;
	
	savepartial();
PROC F2L05_OTHER_AGES

	numeric xE2TotInventory = F2L03_BULL(curocc()) + F2L04_COW(curocc()) + F2L05_OTHER_AGES(curocc());

	if $(curocc()) > F2L02_TOTAL(curocc())  then
		getErrorMsg("A. Inventory of Other Ages is greater than the total inventory.");
	endif;
	
	if xE2TotInventory <> F2L02_TOTAL then
		getErrorMsg("The total inventory of cattle is not equal to the breakdown.");
	endif;
	
	savepartial();
	
PROC F3L06_COWS_BIRTH

	savepartial();
	
PROC F3L07_CALVES_BORN

	if $(curocc()) > 0 and F3L06_COWS_BIRTH(curocc()) = 0 then
		getErrorMsg("A. With entry in born live but zero in cow that gave birth.");
	endif;
	
		// 10-19-2023 silas
	if $(curocc()) in 0, notappl and F3L06_COWS_BIRTH(curocc()) > 0 then
		errmsg("Warning! zero in born live but with entry in cows that gave birth.")
		select("Update claved born alive", $(curocc()),"Proceed", next);
	endif;
	
	if $(curocc()) > (F3L06_COWS_BIRTH(curocc()) * 2) then
		getWarningMsg("B. Born live is greater than the acceptable range. A cow that gave birth may have at most 2 calf in one calving.");
	endif;

	savepartial();
PROC F3L08_CATTLES_ACQUIRED

numeric total_birth,beg_invt,end_invt,sum_gaveB;
	total_birth = 0;
	beg_invt    = 0;
	end_invt    = 0;
	sum_gaveB   = 0;

	
	total_birth = $(1) + $(2) + $(3);
               // caracow                                             other                    acquired
	beg_invt  = visualvalue(F2L04_COW(1))        + visualvalue(F2L05_OTHER_AGES(1))     +  F3L08_CATTLES_ACQUIRED(1);
	end_invt  = visualvalue(F2L04_COW(2))        + visualvalue(F2L05_OTHER_AGES(2))     +  F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2) + F3L08_CATTLES_ACQUIRED(3) ;
	sum_gaveB = visualvalue(F3L06_COWS_BIRTH(1)) + visualvalue(F3L06_COWS_BIRTH(2)) +  visualvalue(F3L06_COWS_BIRTH(3));
	
	if curocc() = 1 then
		if visualvalue(F3L06_COWS_BIRTH(1)) > beg_invt   then
			getErrorMsg("B. cows that gavebirth is > beginning inventory of cow + beginning inventory of other ages + acquired");
		endif;
	elseif curocc() = 2 then
		if visualvalue(F3L06_COWS_BIRTH(2)) > ((beg_invt + ($(2)) - visualvalue(F3L06_COWS_BIRTH(1))))  then
			 getErrorMsg("C. cows that gavebirth is > beginning inventory of cow + beginning inventory of other ages + acquired");
		endif;
	elseif curocc() = 3 then
		if visualvalue(F3L06_COWS_BIRTH(3)) > (end_invt  - (visualvalue(F3L06_COWS_BIRTH(1)) + visualvalue(F3L06_COWS_BIRTH(2))))  then
			getErrorMsg("D.  cows that  gave birth is > ending inventory of cow + ending inventory of other ages + acquired");
		endif;
		
		if sum_gaveB > (beg_invt + $(2) + $(3) + F2L05_OTHER_AGES(2)) then
		  getErrorMsg("E. Total number of cow that gave birth during the quarter exceeds the beginning inventory of cow and other ages, and acquired. ");
		endif;
	endif;

	savepartial();

PROC F4L09_ANY_SOLD_SLAUGHTER

	if $ in 1:2 then
		if $ = 2 then
			skip to F4L25_SOLD_OTHER_PURPOSE;
		endif;
	else
		getNoAcceptCode(); //
	endif;
	
	savepartial();
PROC F4FQ_L10L12

	if poschar("ABCD", $) = 0 then
		getErrorMsg("NO selected ages of cattle slaughtered in the household farm!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			skip to F4FQ_L13L15;
		endif;
	endif;
	
	savepartial();
	
PROC F4L10L12_HEAD_M1
preproc
	//selection of ages
	if ischecked("A",F4FQ_L10L12) = 0 then 
		if curocc() = 1 then    
			move to F4L10L12_HEAD_M1(2); // punta caracow
		endif;		
	endif;

	if ischecked("B",F4FQ_L10L12) = 0 then 
		if curocc() = 2 then    
			move to F4L10L12_HEAD_M1(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",F4FQ_L10L12) = 0 then 
		if curocc() = 3 then    
			move to F4L10L12_HEAD_M2(1); 
		endif;
	endif;
 
 
postproc

	F4L10L12_HEAD_TOTAL_M1 =  $(1) + $(2) + $(3); 
	
 
	if curocc() = 1 then
		if $(1) > (F2L02_TOTAL(1) + F3L07_CALVES_BORN(1) + F3L08_CATTLES_ACQUIRED(1)) then
			getErrorMsg("A. Bull slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (F2L02_TOTAL(1) + F3L07_CALVES_BORN(1) + F3L08_CATTLES_ACQUIRED(1)) then
			getErrorMsg("A. Cow slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (F2L02_TOTAL(1) + F3L07_CALVES_BORN(1) + F3L08_CATTLES_ACQUIRED(1)) then
			getErrorMsg("A. Other Ages slaughtered on establishment is greater than Total Supply");
		endif;

		if F4L10L12_HEAD_TOTAL_M1 > (F2L02_TOTAL(1) + F3L07_CALVES_BORN(1) + F3L08_CATTLES_ACQUIRED(1)) then
			getErrorMsg("A. Total slaughtered on establishment is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
PROC F4L10L12_LIVEWEIGHT_M1

	if F4L10L12_HEAD_M1(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,150,400,"A. Average liveweight is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,50,400,"A. Average liveweight is not within the acceptable range.");
		endif;
		
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if F4L10L12_HEAD_M1(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Please verify the inputted code in either number of heads or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", F4FQ_L10L12) = 1 then
						getErrorMsg("F. Bull is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", F4FQ_L10L12) = 1 then
						getErrorMsg("F. Cow is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", F4FQ_L10L12) = 1 then
						getErrorMsg("F. Other ages is selected but missing entries in number of heads and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;
	
	savepartial();

	
		
PROC F4L10L12_FARMGATE_M1

if E4L10L12_HEAD_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15000.00,65000.00,"A. Average Farmgate is not within the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,15000.00,70000.00,"A. Average Farmgate is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,13000.00,65000.00,"A. Average Farmgate is not within the acceptable range.");
		endif;
		
		if E4L10L12_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif E4L10L12_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif E4L10L12_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
else
		if F4L10L12_HEAD_M1(curocc()) in 0,notappl then
			if F4L10L12_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif F4L10L12_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F2. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif F4L10L12_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;		
				
			if F4L10L12_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", F4FQ_L10L12) = 1 then
						getErrorMsg("J. Bull is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", F4FQ_L10L12) = 1 then
						getErrorMsg("J. Cow is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", F4FQ_L10L12) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;
endif;

savepartial();
	

PROC F4L10L12_HEAD_M2

preproc
	//selection of ages
	if ischecked("A",F4FQ_L10L12) = 0 then 
		if curocc() = 1 then    
			move to F4L10L12_HEAD_M2(2); // punta cow
		endif;		
	endif;

	if ischecked("B",F4FQ_L10L12) = 0 then 
		if curocc() = 2 then    
			move to F4L10L12_HEAD_M2(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",F4FQ_L10L12) = 0 then 
		if curocc() = 3 then    
			move to F4L10L12_HEAD_M3(1); 
		endif;
	endif;
 
 
postproc

	xblockE1_m2 = $(1) + $(2) + $(3);
	F4L10L12_HEAD_TOTAL_M2 = xblockE1_m2;
	
	
	if curocc() = 1 then
		if $(1) > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2)) then
			getErrorMsg("B. Bull slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2)) then
			getErrorMsg("B. Cow slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2)) then
			getErrorMsg("B. Other Ages slaughtered on establishment is greater than Total Supply");
		endif;

		if F4L10L12_HEAD_TOTAL_M2 > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2)) then
			getErrorMsg("B. Total slaughtered on establishment is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  
PROC F4L10L12_LIVEWEIGHT_M2

	if F4L10L12_HEAD_M2(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,150,400,"B. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,50,400,"B. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if F4L10L12_HEAD_M2(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Please verify the inputted code in either number of heads or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", F4FQ_L10L12) = 1 then
						getErrorMsg("F. Bull is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", F4FQ_L10L12) = 1 then
						getErrorMsg("F. Cow is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", F4FQ_L10L12) = 1 then
						getErrorMsg("F. Other ages is selected but missing entries in number of heads and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;
	
	savepartial();

	
		
PROC F4L10L12_FARMGATE_M2

if F4L10L12_HEAD_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15000.00,130000.00,"B. Average Farmgate is not within the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,15000.00,130000.00,"B. Average Farmgate is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,10000.00,130000.00,"B. Average Farmgate is not within the acceptable range.");
		endif;
		
		if F4L10L12_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif F4L10L12_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif F4L10L12_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if F4L10L12_HEAD_M2(curocc()) in 0,notappl then
			if F4L10L12_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif F4L10L12_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F2. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif F4L10L12_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
			
		if F4L10L12_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", F4FQ_L10L12) = 1 then
						getErrorMsg("J. Bull is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", F4FQ_L10L12) = 1 then
						getErrorMsg("J. Cow is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", F4FQ_L10L12) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;

	savepartial();
	
PROC F4L10L12_HEAD_M3

preproc
	//selection of ages
	if ischecked("A",F4FQ_L10L12) = 0 then 
		if curocc() = 1 then    
			move to F4L10L12_HEAD_M3(2); // punta cow
		endif;		
	endif;

	if ischecked("B",F4FQ_L10L12) = 0 then 
		if curocc() = 2 then    
			move to F4L10L12_HEAD_M3(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",F4FQ_L10L12) = 0 then 
		if curocc() = 3 then    
			move to F4FQ_L13L15; 
		endif;
	endif;
 
 
postproc


	xblockE1_m3 = $(1) + $(2) + $(3);
	F4L10L12_HEAD_TOTAL_M3 = xblockE1_m3;
	
	
	if curocc() = 1 then
		if $(1) > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2) + F3L08_CATTLES_ACQUIRED(3)) then
			getErrorMsg("C. Bull slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2) + F3L08_CATTLES_ACQUIRED(3)) then
			getErrorMsg("C. Cow slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2) + F3L08_CATTLES_ACQUIRED(3)) then
			getErrorMsg("C. Other Ages slaughtered on establishment is greater than Total Supply");
		endif;

		if F4L10L12_HEAD_TOTAL_M3 > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2) + F3L08_CATTLES_ACQUIRED(3)) then
			getErrorMsg("C. Total slaughtered on establishment is greater than Total Supply");
		endif;
	endif;
	
	
	if F4L10L12_HEAD_M1(curocc()) = notappl and F4L10L12_HEAD_M2(curocc()) = notappl and F4L10L12_HEAD_M3(curocc()) = notappl then
		if curocc() = 1 then
			if ischecked("A", F4FQ_L10L12) = 1 then
				getErrorMsg("D. Bull is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 2 then
			if ischecked("B", F4FQ_L10L12) = 1 then
				getErrorMsg("E. Cow is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 3 then
			if ischecked("C", F4FQ_L10L12) = 1 then
				getErrorMsg("F. Other ages is selected but no entry for M1, M2, and M3");
			endif;
		endif;
	endif;
	
	
	savepartial();
  
PROC F4L10L12_LIVEWEIGHT_M3


	if F4L10L12_HEAD_M3(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,150,400,"C. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,50,400,"C. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if F4L10L12_HEAD_M3(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Please verify the inputted code in either number of heads or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", F4FQ_L10L12) = 1 then
						getErrorMsg("F. Bull is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", F4FQ_L10L12) = 1 then
						getErrorMsg("F. Cow is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", F4FQ_L10L12) = 1 then
						getErrorMsg("F. Other ages is selected but missing entries in number of heads and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;
	
	savepartial();

	
		
PROC F4L10L12_FARMGATE_M3

if F4L10L12_HEAD_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15000.00,130000.00,"C. Average Farmgate is not within the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,15000.00,130000.00,"C. Average Farmgate is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,10000.00,130000.00,"C. Average Farmgate is not within the acceptable range.");
		endif;
		
		if F4L10L12_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif F4L10L12_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif F4L10L12_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if F4L10L12_HEAD_M3(curocc()) in 0,notappl then
			if F4L10L12_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif F4L10L12_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F3. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif F4L10L12_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
			
		endif;
	endif;
	
	if F4L10L12_HEAD_M1(curocc()) in 0, notappl and F4L10L12_LIVEWEIGHT_M1(curocc()) in 0, notappl and F4L10L12_FARMGATE_M1(curocc()) in 0, notappl and
	   F4L10L12_HEAD_M2(curocc()) in 0, notappl and F4L10L12_LIVEWEIGHT_M2(curocc()) in 0, notappl and F4L10L12_FARMGATE_M2(curocc()) in 0, notappl and
	   F4L10L12_HEAD_M3(curocc()) in 0, notappl and F4L10L12_LIVEWEIGHT_M3(curocc()) in 0, notappl and F4L10L12_FARMGATE_M3(curocc()) in 0, notappl then
		if curocc() = 1 then
			if ischecked("A", F4FQ_L10L12) = 1 then
				getErrorMsg("J. Bull is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 2 then
			if ischecked("B", F4FQ_L10L12) = 1 then
				getErrorMsg("J. Cow is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 3 then
			if ischecked("C", F4FQ_L10L12) = 1 then
				getErrorMsg("J. Cow is selected but missing entries in three months"); 
			endif;
		endif;
	endif;

	savepartial();
	
PROC F4FQ_L13L15
	if poschar("D", $) > 0 and poschar("D",F4FQ_L10L12)> 0 and  F4L09_ANY_SOLD_SLAUGHTER = 1 then
	    getErrorMsg("Dispose/sell is “Yes” but slaughtered in the HH/Farm and sold live for slaughter is code 4 “None”. ");
	endif;
	
	if poschar("ABCD", $) = 0 then
		getErrorMsg("NO selected cattle sold live for slaughter!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			skip to F4L16_DISPOSE_SELL_SLAUGHTER;
		endif;
	endif;
	
	savepartial();
PROC F4L13L15_HEAD_M1

preproc
	//selection of ages
	if ischecked("A",F4FQ_L13L15) = 0 then 
		if curocc() = 1 then    
			move to F4L13L15_HEAD_M1(2); // punta cow
		endif;		
	endif;

	if ischecked("B",F4FQ_L13L15) = 0 then 
		if curocc() = 2 then    
			move to F4L13L15_HEAD_M1(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",F4FQ_L13L15) = 0 then 
		if curocc() = 3 then    
			move to F4L13L15_HEAD_M2(1); 
		endif;
	endif;
 
 
postproc

	xblockE2_m1 = $(1) + $(2) + $(3);
	F4L13L15HEAD_TOTAL_M1 = xblockE2_m1;	
	
	if curocc() = 1 then
		if $(1) > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1)) then
			getErrorMsg("A. Bull sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1)) then
			getErrorMsg("A. Cow sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1)) then
			getErrorMsg("A. Other sold live for slaughter is greater than Total Supply");
		endif;

		if F4L13L15HEAD_TOTAL_M1 > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1)) then
			getErrorMsg("A. Total sold live for slaughter is greater than Total Supply");
		endif;
	endif;
	
	
		// 10-19-2023 silas
		// pagbabato sa total distination
		if curocc() = 1 then
			if visualvalue(F4L13L15_HEAD_M1(1)) >= 0 or visualvalue(F4L13L15_HEAD_M1(2)) >= 0 or visualvalue(F4L13L15_HEAD_M1(3)) >= 0 then
				numeric totDistination_cattle = visualvalue(F4L13L15_HEAD_M1(1)) + visualvalue(F4L13L15_HEAD_M1(2)) + visualvalue(F4L13L15_HEAD_M1(3));			
				F4L21_TOTAL(1)	= totDistination_cattle;						
			endif;
		endif;
		//end
	
	savepartial();
  
PROC F4L13L15_LIVEWEIGHT_M1

	if F4L13L15_HEAD_M1(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,150,400,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,50,400,"A. Average liveweight is not within the the acceptable range.");
		endif;
			if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if F4L13L15_HEAD_M1(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of heads or average liveweight");
			endif;		
		endif;
	endif;
  
	savepartial();
	
PROC F4L13L15_FARMGATE_M1

	F4L13L15HEAD_TOTAL_M1 = F4L13L15_HEAD_M1(1) + F4L13L15_HEAD_M1(2) + F4L13L15_HEAD_M1(3);

	if F4L13L15_HEAD_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15000.00,130000.00,"A. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,15000.00,130000.00,"A. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,10000.00,130000.00,"A. Average Farmgate price is not within the the acceptable range.");
		endif;
		
		if F4L13L15_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc())  in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif F4L13L15_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc())  in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif F4L13L15_LIVEWEIGHT_M1(curocc())  in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if F4L13L15_HEAD_M1(curocc()) in 0,notappl then
			if F4L13L15_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc())  in 0, notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif F4L13L15_LIVEWEIGHT_M1(curocc())  in 0,notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif F4L13L15_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
			
			if F4L13L15_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", F4FQ_L13L15) = 1 then
						getErrorMsg("J. Bull is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", F4FQ_L13L15) = 1 then
						getErrorMsg("J. Cow is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", F4FQ_L13L15) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;


	savepartial();
	
PROC F4L13L15_HEAD_M2

preproc
	//selection of ages
	if ischecked("A",F4FQ_L13L15) = 0 then 
		if curocc() = 1 then    
			move to F4L13L15_HEAD_M2(2); // punta cow
		endif;		
	endif;

	if ischecked("B",F4FQ_L13L15) = 0 then 
		if curocc() = 2 then    
			move to F4L13L15_HEAD_M2(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",F4FQ_L13L15) = 0 then 
		if curocc() = 3 then    
			move to F4L13L15_HEAD_M3(1); 
		endif;
	endif;
 
 
postproc

	xblockE2_m2 = $(1) + $(2) + $(3);
	F4L13L15HEAD_TOTAL_M2 = xblockE2_m2;	
	
	if curocc() = 1 then
		if $(1) > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2)) then
			getErrorMsg("B. Bull sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2)) then
			getErrorMsg("B. Cow sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2)) then
			getErrorMsg("B. Other sold live for slaughter is greater than Total Supply");
		endif;

		if F4L13L15HEAD_TOTAL_M2 > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2)) then
			getErrorMsg("B. Total sold live for slaughter is greater than Total Supply");
		endif;
	endif;
	
	
		// 10-19-2023 silas
		// pagbabato sa total distination
		if curocc() = 2 then
			if visualvalue(F4L13L15_HEAD_M2(1)) >= 0 or visualvalue(F4L13L15_HEAD_M2(2)) >= 0 or visualvalue(F4L13L15_HEAD_M2(3)) >= 0 then
				numeric totDistination_cattle2 = visualvalue(F4L13L15_HEAD_M2(1)) + visualvalue(F4L13L15_HEAD_M2(2)) + visualvalue(F4L13L15_HEAD_M2(3));			
				F4L21_TOTAL(2)	= totDistination_cattle2;						
			endif;
		endif;
		//end	
	
	savepartial();
  
PROC F4L13L15_LIVEWEIGHT_M2

	if F4L13L15_HEAD_M2(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,150,400,"B. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,50,400,"B. Average liveweight is not within the the acceptable range.");
		endif;
				if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if F4L13L15_HEAD_M2(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of heads or average liveweight");
			endif;		
		endif;
	endif;
  
	savepartial();
	
PROC F4L13L15_FARMGATE_M2

	F4L13L15HEAD_TOTAL_M2 = F4L13L15_HEAD_M2(1) + F4L13L15_HEAD_M2(2) + F4L13L15_HEAD_M2(3);

	if F4L13L15_HEAD_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15000.00,130000.00,"B. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,15000.00,130000.00,"B. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,10000.00,130000.00,"B. Average Farmgate price is not within the the acceptable range.");
		endif;
		
		if F4L13L15_LIVEWEIGHT_M2(curocc())  in 0, notappl and $(curocc())  in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif F4L13L15_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc())  in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif F4L13L15_LIVEWEIGHT_M2(curocc())  in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if F4L13L15_HEAD_M2(curocc()) in 0,notappl then
			if F4L13L15_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc())  in 0, notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif F4L13L15_LIVEWEIGHT_M2(curocc())  in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif F4L13L15_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
				
			if F4L13L15_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", F4FQ_L13L15) = 1 then
						getErrorMsg("J. Bull is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", F4FQ_L13L15) = 1 then
						getErrorMsg("J. Cow is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", F4FQ_L13L15) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
		endif;
	endif;


	savepartial();
	
PROC F4L13L15_HEAD_M3

preproc
	//selection of ages
	if ischecked("A",F4FQ_L13L15) = 0 then 
		if curocc() = 1 then    
			move to F4L13L15_HEAD_M3(2); // punta cow
		endif;		
	endif;

	if ischecked("B",F4FQ_L13L15) = 0 then 
		if curocc() = 2 then    
			move to F4L13L15_HEAD_M3(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",F4FQ_L13L15) = 0 then 
		if curocc() = 3 then    
			move to F4L16_DISPOSE_SELL_SLAUGHTER; 
		endif;
	endif;
 
 
postproc

	xblockE2_m3 = $(1) + $(2) + $(3);
	F4L13L15HEAD_TOTAL_M3 = xblockE2_m3;
	
	
	if curocc() = 1 then
		if $(1) > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2) + F3L08_CATTLES_ACQUIRED(3)) then
			getErrorMsg("C. Bull sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2) + F3L08_CATTLES_ACQUIRED(3)) then
			getErrorMsg("C. Cow sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2) + F3L08_CATTLES_ACQUIRED(3)) then
			getErrorMsg("C. Other Ages sold live for slaughter is greater than Total Supply");
		endif;

		if F4L13L15HEAD_TOTAL_M3 > (F2L02_TOTAL(1) + F3L08_CATTLES_ACQUIRED(1) + F3L08_CATTLES_ACQUIRED(2) + F3L08_CATTLES_ACQUIRED(3)) then
			getErrorMsg("C. Total sold live for slaughter is greater than Total Supply");
		endif;
	endif;
	
	
	if F4L13L15_HEAD_M1(curocc()) = notappl and F4L13L15_HEAD_M2(curocc()) = notappl and F4L13L15_HEAD_M3(curocc()) = notappl then
		if curocc() = 1 then
			if ischecked("A", F4FQ_L13L15) = 1 then
				getErrorMsg("D. Bull is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 2 then
			if ischecked("B", F4FQ_L13L15) = 1 then
				getErrorMsg("E. Cow is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 3 then
			if ischecked("C", F4FQ_L13L15) = 1 then
				getErrorMsg("F. Other ages is selected but no entry for M1, M2, and M3");
			endif;
		endif;
	endif;
	
	
			// 10-19-2023 silas
		// pagbabato sa total distination
		if curocc() = 3 then
			if visualvalue(F4L13L15_HEAD_M3(1)) >= 0 or visualvalue(F4L13L15_HEAD_M3(2)) >= 0 or visualvalue(F4L13L15_HEAD_M3(3)) >= 0 then
				numeric totDistination_cattle3 = visualvalue(F4L13L15_HEAD_M3(1)) + visualvalue(F4L13L15_HEAD_M3(2)) + visualvalue(F4L13L15_HEAD_M3(3));			
				F4L21_TOTAL(3)	= totDistination_cattle3;						
			endif;
		endif;
		//end
	
	
	savepartial();
  
PROC F4L13L15_LIVEWEIGHT_M3

	if F4L13L15_HEAD_M3(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,150,400,"C. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,50,400,"C. Average liveweight is not within the the acceptable range.");
		endif;
				if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if F4L13L15_HEAD_M3(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of heads or average liveweight");
			endif;		
		endif;
	endif;
  
	savepartial();
	
PROC F4L13L15_FARMGATE_M3

	F4L13L15HEAD_TOTAL_M3 = F4L13L15_HEAD_M3(1) + F4L13L15_HEAD_M3(2) + F4L13L15_HEAD_M3(3);

	if F4L13L15_HEAD_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15000.00,130000.00,"C. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,15000.00,130000.00,"C. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,10000.00,130000.00,"C. Average Farmgate price is not within the the acceptable range.");
		endif;
		
		if F4L13L15_LIVEWEIGHT_M3(curocc())  in 0, notappl and $(curocc())  in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif F4L13L15_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc())  in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif F4L13L15_LIVEWEIGHT_M3(curocc())  in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if F4L13L15_HEAD_M3(curocc()) in 0,notappl then
			if F4L13L15_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc())  in 0, notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif F4L13L15_LIVEWEIGHT_M3(curocc())  in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif F4L13L15_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
				
			// if F4L13L15_LIVEWEIGHT_M3(curocc()) = notappl and $(curocc()) = notappl then
				// if curocc() = 1 then
					// if ischecked("A", F4FQ_L13L15) = 1 then
						// getErrorMsg("J. Bull is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					// endif;
				// elseif curocc() = 2 then
					// if ischecked("B", F4FQ_L13L15) = 1 then
						// getErrorMsg("J. Cow is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					// endif;
				// elseif curocc() = 3 then
					// if ischecked("C", F4FQ_L13L15) = 1 then
						// getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					// endif;
				// endif;
			// endif;
			
		endif;
	endif;
	
	if F4L13L15_HEAD_M1(curocc())  in 0, notappl and F4L13L15_LIVEWEIGHT_M1(curocc())  in 0, notappl and F4L13L15_FARMGATE_M1(curocc())  in 0, notappl and
	   F4L13L15_HEAD_M2(curocc())  in 0, notappl and F4L13L15_LIVEWEIGHT_M2(curocc())  in 0, notappl and F4L13L15_FARMGATE_M2(curocc())  in 0, notappl and
	   F4L13L15_HEAD_M3(curocc())  in 0, notappl and F4L13L15_LIVEWEIGHT_M3(curocc())  in 0, notappl and F4L13L15_FARMGATE_M3(curocc())  in 0, notappl then
		if curocc() = 1 then
			if ischecked("A", F4FQ_L13L15) = 1 then
				getErrorMsg("J. Bull is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 2 then
			if ischecked("B", F4FQ_L13L15) = 1 then
				getErrorMsg("J. Cow is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 3 then
			if ischecked("C", F4FQ_L13L15) = 1 then
				getErrorMsg("J. Other ages is selected but no entry for M1, M2, and M3"); 
			endif;
		endif;
	endif;


	savepartial();
	
PROC F4L16_DISPOSE_SELL_SLAUGHTER
numeric showw1,showw2,showw3,showw;
	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 2 then
		if F4L13L15HEAD_TOTAL_M1 >= 0 then
			showw1 = F4L13L15HEAD_TOTAL_M1;
		else
			showw1 = 0;
		endif;
		if F4L13L15HEAD_TOTAL_M2 >= 0 then
			showw2 = F4L13L15HEAD_TOTAL_M2;
		else
			showw2 = 0;
		endif;
		if F4L13L15HEAD_TOTAL_M3 >= 0 then
			showw3 = F4L13L15HEAD_TOTAL_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to F4L21_TOTAL(1);
		else
			skip to F4L25_SOLD_OTHER_PURPOSE;
		endif;
	endif;
	
	savepartial();
PROC F4L17_COMPARED_LYSQ
	if not $ in 1:3 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	if $ = 3 then
		skip to F4L19_COMPARED_FG;
	endif;

	savepartial();
PROC F4L18_CHECKBOX_HIGH

preproc
	ask if F4L17_COMPARED_LYSQ = 1;

postproc

    if ischecked ("A",$) = 1 then F4L181_HIGH_DEMAND        =  1;endif;
	if ischecked ("B",$) = 1 then F4L182_NO_OUTBREAK        =  2;endif;
	if ischecked ("C",$) = 1 then F4L183_INC_PASTURE        =  3;endif;
	if ischecked ("D",$) = 1 then F4L184_LIFT_BAN           =  4;endif;
	if ischecked ("E",$) = 1 then F4L185_INC_FARM_MECH      =  5;endif;
	if ischecked ("F",$) = 1 then F4L186_HIGHER_PRICE_OFFER =  6;endif;
	if ischecked ("G",$) = 1 then F4L187_FINANCIAL_NEED     =  7;endif;
	if ischecked ("H",$) = 1 then F4L1814H_OHIGH_REASON     =  14;endif;


	if poschar("ABCDEFGH", $) = 0 then
		getErrorMsg("No selected code!");
	endif;

	savepartial();

if F4L17_COMPARED_LYSQ = 1 then
	if F4L18_CHECKBOX_HIGH = "" then
		getErrorMsg("A. No selected type of operation. Please select type of operation.");
	endif;

	savepartial();
endif;

PROC F4L18_CHECKBOX_LOW

preproc
	ask if F4L17_COMPARED_LYSQ = 2;
postproc

    if ischecked ("A",$) = 1 then F4L188_LOW_DEMAND       =  8;endif;
	if ischecked ("B",$) = 1 then F4L189_OUTBREAK         =  9;endif;
	if ischecked ("C",$) = 1 then F4L1810_DEC_PASTURE     = 10;endif;
	if ischecked ("D",$) = 1 then F4L1811_IMPLEMENT_BAN   = 11;endif;
	if ischecked ("E",$) = 1 then F4L1812_ANIMAL_KEPT     = 12;endif;
	if ischecked ("F",$) = 1 then F4L1813_LOW_PRICE_OFFER = 13;endif;
	if ischecked ("G",$) = 1 then F4L1814L_OLOW_REASON    = 14;endif;


	if poschar("ABCDEFG", $) = 0 then
		getErrorMsg("No selected code!");
	ENDIF;

	savepartial();

PROC F4L1814HSPECIFY

preproc
	ask if ischecked("H", F4L18_CHECKBOX_HIGH) and F4L17_COMPARED_LYSQ = 1;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified.");
	endif;
	
	savepartial();
PROC F4L1814LSPECIFY

preproc
	ask if ischecked("G", F4L18_CHECKBOX_LOW) and F4L17_COMPARED_LYSQ = 2;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified.");
	endif;
	
	savepartial();
PROC F4L19_COMPARED_FG

postproc
if F4L19_COMPARED_FG = 1 then
	myReason = "Higher";
elseif F4L19_COMPARED_FG = 2 then
	myReason = "Lower";
endif;

	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	savepartial();
PROC FL20_REASON_FG

preproc
	ask if F4L19_COMPARED_FG in 1:2;
	
postproc
numeric showw1,showw2,showw3,showw;
	if strip($) = "" then
		getErrorMsg("A. Indicate the reason for increase/decrease in farmgate price");
	endif;
	
		if F4L13L15HEAD_TOTAL_M1 >= 0 then
			showw1 = F4L13L15HEAD_TOTAL_M1;
		else
			showw1 = 0;
		endif;
		if F4L13L15HEAD_TOTAL_M2 >= 0 then
			showw2 = F4L13L15HEAD_TOTAL_M2;
		else
			showw2 = 0;
		endif;
		if F4L13L15HEAD_TOTAL_M3 >= 0 then
			showw3 = F4L13L15HEAD_TOTAL_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to F4L21_TOTAL(1);
		else
			skip to F4L25_SOLD_OTHER_PURPOSE;
		endif;
	
	savepartial();
PROC F4L21_TOTAL

preproc
		   
	$(1) = F4L13L15HEAD_TOTAL_M1;
	$(2) = F4L13L15HEAD_TOTAL_M2;
	$(3) = F4L13L15HEAD_TOTAL_M3;

postproc
	
  
	savepartial();

PROC F4L22_WIN_PRV
postproc
if F4L22_WIN_PRV(curocc()) > F4L21_TOTAL(curocc()) then
	getErrorMsg("Sold live within the province is greater than the Total Destination");
elseif $(curocc()) = notappl then   
	getErrorMsg("Please verify the inputted code");
else
	getOutOfRangeW($(curocc()),0,999999);
endif;
  
	savepartial();
PROC F4L23_OUT_PRV
postproc
if F4L23_OUT_PRV(curocc()) > F4L21_TOTAL(curocc()) then
	getErrorMsg("Sold live outside the province is greater than the Total Destination");
elseif F4L23_OUT_PRV(curocc()) = notappl then   
	getErrorMsg("Please verify the inputted code");
else
	getOutOfRangeW($(curocc()),0,999999);
endif;

	savepartial();
PROC F4L24_UNK_PRV


preproc

	if curocc() = 1 then
		if F4L13L15HEAD_TOTAL_M1 >= 0 then
			tempF4L13L15_HEAD_TOTAL_M1M2M3 = F4L13L15HEAD_TOTAL_M1;
		else
			tempF4L13L15_HEAD_TOTAL_M1M2M3 = 0;
		endif;
	elseif curocc() = 2 then
		if F4L13L15HEAD_TOTAL_M2 >= 0 then
			tempF4L13L15_HEAD_TOTAL_M1M2M3 = F4L13L15HEAD_TOTAL_M2;
		else
			tempF4L13L15_HEAD_TOTAL_M1M2M3 = 0;
		endif;
	else
		if curocc() = 3 then
			if F4L13L15HEAD_TOTAL_M3 >= 0 then
				tempF4L13L15_HEAD_TOTAL_M1M2M3 = F4L13L15HEAD_TOTAL_M3;
			else
				tempF4L13L15_HEAD_TOTAL_M1M2M3 = 0;
			endif;
		endif;
	endif;
	
	
postproc
	
	F4L21_TOTAL(curocc()) = F4L22_WIN_PRV(curocc()) + F4L23_OUT_PRV(curocc()) + F4L24_UNK_PRV(curocc());
	
	
	if F4L21_TOTAL(curocc()) <> tempF4L13L15_HEAD_TOTAL_M1M2M3 then
		getErrorMsg( maketext("B. The total number of animals in the different areas of destination [%d] is not equal to the total sold live for slaughter in Item LN13 [%d] for the month of %s",F4L21_TOTAL(curocc()),tempF4L13L15_HEAD_TOTAL_M1M2M3,E2_QtrMonth(curocc())) );
	endif;
	// getInvtSuppDisp(curocc(),E4L21_TOTAL(curocc()),xCaStartBornAcquireM1,xCaStartBornAcquireM2,xCaStartBornAcquireM3,F4L10_HEAD_TOTAL_M1 ,xCatdispositionM2)
	
  
	savepartial();
PROC F4L25_SOLD_OTHER_PURPOSE
	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	if $ = 2 then
		skip to F4L30_DEATHS;
	endif;

	savepartial();
PROC F4FQ_L27L29

	if poschar("ABCD", $) = 0 then
		getErrorMsg("NO selected cattle sold live/disposed for other purpose!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			skip to F4L30_DEATHS;
		endif;
	endif;
	
	
	savepartial();
PROC F4L27L29_HEAD_M1

preproc
	//selection of ages
	if ischecked("A",F4FQ_L27L29) = 0 then 
		if curocc() = 1 then    
			move to F4L27L29_HEAD_M1(2); // punta heifer
		endif;
	endif;

	if ischecked("B",F4FQ_L27L29) = 0 then 
		if curocc() = 2 then    
			move to F4L27L29_HEAD_M1(3);  // punta others
		endif;
	endif;

	if ischecked("C",F4FQ_L27L29) = 0 then 
		if curocc() = 3 then    
			move to F4L27L29_HEAD_M2(1); 
		endif;
	endif;
 
 
postproc

 
	F4L26_HEAD_TOTAL_M1 = $(1) + $(2) + $(3);
  
	if curocc() = 1 then
		if $(1) > (F2L02_TOTAL(1) + F3L07_CALVES_BORN(1) + F3L08_CATTLES_ACQUIRED(1)) then
			getErrorMsg("A. Bull sold live for other purpose is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (F2L02_TOTAL(1) +  F3L07_CALVES_BORN(1) + F3L08_CATTLES_ACQUIRED(1)) then
			getErrorMsg("A. Cow sold live for  other purpose  is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (F2L02_TOTAL(1) +  F3L07_CALVES_BORN(1) + F3L08_CATTLES_ACQUIRED(1)) then
			getErrorMsg("A. Other ages sold live for  other purpose  is greater than Total Supply");
		endif;

		if F4L13L15HEAD_TOTAL_M1 > (F2L02_TOTAL(1) + F3L07_CALVES_BORN(1) + F3L08_CATTLES_ACQUIRED(1)) then
			getErrorMsg("A. Total sold live for slaughter is greater than Total Supply");
		endif;
	endif;
	savepartial();
  
PROC F4L27L29_FARMGATE_M1

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	getOutOfRange($,8000,100000, "A. Average Farmgate price is not within the acceptable range.");
	
	if F4L27L29_HEAD_M1 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of heads but no average farmgate price.");
	endif;
	
	if $ > 0 and (F4L27L29_HEAD_M1 = notappl or F4L27L29_HEAD_M1 = 0) then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
	
	F4L26_FARMGATE_TOTAL_M1 = $(1) + $(2) + $(3);
	
	savepartial();
	
PROC F4L27L29_DESTINATION_M1	
preproc
if F4L27L29_HEAD_M1(curocc()) in 0, notappl then
	if $(curocc()) in 0, notappl then
		skip to next;
	endif;
endif;

postproc
	if not F4L27L29_DESTINATION_M1(curocc()) in 1:3 then   
		getWarningMsg("Missing Entry");
	endif;
	
	if F4L27L29_HEAD_M1(curocc()) > 0 and not $(curocc()) in 1:3 then
		if curocc() = 1 then
			getErrorMsg("A. Caracalf/Yearling has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("A. Caraheifer has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("A. Others has entry but no specified destination was selected");
		endif;
	endif;
	
if $(curocc()) in 1:3 then
	if F4L27L29_HEAD_M1(curocc()) in 0, notappl then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
endif;


  
	// E4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
  
	savepartial();
	


	
PROC F4L27L29_HEAD_M2

preproc
	//selection of ages
	if ischecked("A",F4FQ_L27L29) = 0 then 
		if curocc() = 1 then    
			move to F4L27L29_HEAD_M2(2); // punta heifer
		endif;
	endif;

	if ischecked("B",F4FQ_L27L29) = 0 then 
		if curocc() = 2 then    
			move to F4L27L29_HEAD_M2(3);  // punta others
		endif;
	endif;

	if ischecked("C",F4FQ_L27L29) = 0 then 
		if curocc() = 3 then    
			move to F4L27L29_HEAD_M3(1); 
		endif;
	endif;
 
 
postproc

	 
	F4L26_HEAD_TOTAL_M2 = $(1) + $(2) + $(3);
  
	
	if curocc() = 1 then
		if $(1) > (F2L02_TOTAL(1) + F3L07_CALVES_BORN(2) + F3L08_CATTLES_ACQUIRED(2)) then
			getErrorMsg("A. Bull sold live for other purpose is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (F2L02_TOTAL(1) +  F3L07_CALVES_BORN(2) + F3L08_CATTLES_ACQUIRED(2)) then
			getErrorMsg("A. Cow sold live for  other purpose  is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (F2L02_TOTAL(1) +  F3L07_CALVES_BORN(2) + F3L08_CATTLES_ACQUIRED(2)) then
			getErrorMsg("A. Other ages sold live for  other purpose  is greater than Total Supply");
		endif;

		if F4L13L15HEAD_TOTAL_M1 > (F2L02_TOTAL(1) + F3L07_CALVES_BORN(2) + F3L08_CATTLES_ACQUIRED(2)) then
			getErrorMsg("A. Total sold live for slaughter is greater than Total Supply");
		endif;
	endif;
	savepartial();
  

  
PROC F4L27L29_FARMGATE_M2
	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	getOutOfRange($,8000,100000, "A. Average Farmgate price is not within the acceptable range.");
	
	if F4L27L29_HEAD_M2 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of heads but no average farmgate price.");
	endif;
	
	if $ > 0 and (F4L27L29_HEAD_M2 = notappl or F4L27L29_HEAD_M2 = 0) then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
	
	F4L26_FARMGATE_TOTAL_M2 = $(1) + $(2) + $(3);
	
	savepartial();
	
PROC F4L27L29_DESTINATION_M2

preproc
if F4L27L29_HEAD_M2(curocc()) in 0, notappl then
	if $(curocc()) in 0, notappl then
		skip to next;
	endif;
endif;

postproc
	if not F4L27L29_DESTINATION_M2(curocc()) in 1:3 then   
		getWarningMsg("Missing Entry");
	endif;
	
	if F4L27L29_HEAD_M2(curocc()) > 0 and not $(curocc()) in 1:3 then
		if curocc() = 1 then
			getErrorMsg("A. Caracalf/Yearling has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("A. Caraheifer has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("A. Others has entry but no specified destination was selected");
		endif;
	endif;
	
if $(curocc()) in 1:3 then
	if F4L27L29_HEAD_M2(curocc()) in 0, notappl then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
endif;


  
	// E4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
  
	savepartial();
	


	


PROC F4L27L29_HEAD_M3

preproc
	//selection of ages
	if ischecked("A",F4FQ_L27L29) = 0 then 
		if curocc() = 1 then    
			move to F4L27L29_HEAD_M3(2); // punta heifer
		endif;
	endif;

	if ischecked("B",F4FQ_L27L29) = 0 then 
		if curocc() = 2 then    
			move to F4L27L29_HEAD_M3(3);  // punta others
		endif;
	endif;

	if ischecked("C",F4FQ_L27L29) = 0 then 
		if curocc() = 3 then    
			move to F4L30_DEATHS;
		endif;
	endif;
 
 
postproc

	 
	F4L26_HEAD_TOTAL_M3 = $(1) + $(2) + $(3);
  
	
	if curocc() = 1 then
		if $(1) > (F2L02_TOTAL(1) + F3L07_CALVES_BORN(3) + F3L08_CATTLES_ACQUIRED(3)) then
			getErrorMsg("A. Bull sold live for other purpose is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (F2L02_TOTAL(1) +  F3L07_CALVES_BORN(3) + F3L08_CATTLES_ACQUIRED(3)) then
			getErrorMsg("A. Cow sold live for  other purpose  is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (F2L02_TOTAL(1) +  F3L07_CALVES_BORN(3) + F3L08_CATTLES_ACQUIRED(3)) then
			getErrorMsg("A. Other ages sold live for  other purpose  is greater than Total Supply");
		endif;

		if F4L13L15HEAD_TOTAL_M1 > (F2L02_TOTAL(1) + F3L07_CALVES_BORN(3) + F3L08_CATTLES_ACQUIRED(3)) then
			getErrorMsg("A. Total sold live for slaughter is greater than Total Supply");
		endif;
	endif;
	savepartial();
  
  
PROC F4L27L29_FARMGATE_M3
	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	getOutOfRange($,8000,100000, "A. Average Farmgate price is not within the acceptable range.");
	
	if F4L27L29_HEAD_M3 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of heads but no average farmgate price.");
	endif;
	
	if $ > 0 and (F4L27L29_HEAD_M3 = notappl or F4L27L29_HEAD_M3 = 0) then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
	
	F4L26_FARMGATE_TOTAL_M3 = $(1) + $(2) + $(3);
	
	
	savepartial();
	
	
PROC F4L27L29_DESTINATION_M3

		if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if F4L27L29_HEAD_M3 > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("C. Calf/Yearling has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("C. Heifer has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("C. Others has entry but no specified destination was selected");
		endif;
	endif;
	
if $(curocc()) in 1:3 then
	if F4L27L29_HEAD_M3(curocc()) in 0, notappl then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
endif;


	
	// F4L26_DESTINATION_TOTAL_M2 = $(1) + $(2) + $(3);
  
	
	if F4L27L29_HEAD_M1(curocc()) = notappl and F4L27L29_FARMGATE_M1(curocc()) = notappl and F4L27L29_DESTINATION_M1(curocc()) = notappl and
	   F4L27L29_HEAD_M2(curocc()) = notappl and F4L27L29_FARMGATE_M2(curocc()) = notappl and F4L27L29_DESTINATION_M2(curocc()) = notappl and
	   F4L27L29_HEAD_M3(curocc()) = notappl and F4L27L29_FARMGATE_M3(curocc()) = notappl and F4L27L29_DESTINATION_M3(curocc()) = notappl then
		if curocc() = 1 then
			if ischecked("A", F4FQ_L27L29) = 1 then
				getErrorMsg("D. calf/yearling is selected but no entries"); 
			endif;
		elseif curocc() = 2 then
			if ischecked("B", F4FQ_L27L29) = 1 then
				getErrorMsg("E. heifer is selected but no entries"); 
			endif;
		elseif curocc() = 3 then
			if ischecked("C", F4FQ_L27L29) = 1 then
				getErrorMsg("F. others is selected but missing entries in number of heads and average farmgate price"); 
			endif;
		endif;
	endif;

  

	savepartial();
	
PROC F4L30_DEATHS

	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	if $ = 2 then
		skip to F5L33_COW_MILKLINE(1);
	endif;

	savepartial();
	
PROC F4FQ_L31L32
preproc
	ask if F4L30_DEATHS = 1;

postproc
	if poschar("AB", $) = 0 then
		getErrorMsg("NO selected cause of death!");
	endif;
	
	savepartial();
	
PROC RTF4_DC000

postproc
	if ischecked("AB",F4FQ_L31L32) > 0 then
		if strip(FD_CATTLE_DISEASE) = "" and strip(FCA_SPECIFY) = "" then
			getErrorMsg("C. Deaths/losses is code 1 but disease and other causes is empty.");
		endif;
	endif;

PROC FD_CATTLE_DISEASE

preproc
	ask if ischecked("A",F4FQ_L31L32);
	string xDa, xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq,xDr,xDs;
	numeric cc = curocc();
	
postproc

	if soccurs(RTF4_L31L32) = 0 then INSERT(RTF4_L31L32(1)); endif;
	if soccurs(RTF4_L31L32) = 1 then INSERT(RTF4_L31L32(2)); endif;

	if ischecked("A",$ ) = 1 then xDa = "Antrax (Bacterial) "; 						endif;
	if ischecked("B",$ ) = 1 then xDb = "Black Leg Disease (Bacterial) ";  			endif;
	if ischecked("C",$ ) = 1 then xDc = "Blue Tongue (Viral) ";  					    endif;
	if ischecked("D",$ ) = 1 then xDd = "Botulism (Bacterial) ";                      endif;
	if ischecked("E",$ ) = 1 then xDe = "Bovine Rhinotracheitis (Viral/Bacterial) "; 	endif;
	if ischecked("F",$ ) = 1 then xDf = "Brucellosis (Bacterial) ";  					endif;
	if ischecked("G",$ ) = 1 then xDg = "Colds "; 									endif;
	if ischecked("H",$ ) = 1 then xDh = "Diarrhea "; 									endif;
	if ischecked("I",$ ) = 1 then xDi = "Enteritis (Bacterial/Viral) ";  				endif;
	if ischecked("J",$ ) = 1 then xDj = "Foot And Mouth Disease (Viral) ";  			endif;
	if ischecked("K",$ ) = 1 then xDk = "Leptospirosis (Bacterial) ";  				endif;
	if ischecked("L",$ ) = 1 then xDl = "Paralysis";  								endif;
	if ischecked("M",$ ) = 1 then xDm = "Pneumonia (Bacterial/Viral/Fungal)  ";  		endif;
	if ischecked("N",$ ) = 1 then xDn = "Rabies (Viral) ";  							endif;
	if ischecked("O",$ ) = 1 then xDo = "Rinderpest (Viral) ";  						endif;
	if ischecked("P",$ ) = 1 then xDp = "Tetanus (Bacterial)  ";  					endif;
	if ischecked("Q",$ ) = 1 then xDq = "Tick Fever (Bacterial)";  					endif;
	if ischecked("R",$ ) = 1 then xDr = "Vibriosis (Bacterial) ";  					endif;
	if ischecked("S",$ ) = 1 then xDs = FDS_SPECIFY(cc); 								endif;

 
if curocc() = 1 then  
	F4L31L32_SPECIFY_M1(1) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq,xDr,xDs); 
elseif curocc() = 2 then
	F4L31L32_SPECIFY_M2(1) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq,xDr,xDs); 
elseif curocc() = 3 then
	F4L31L32_SPECIFY_M3(1) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq,xDr,xDs); 
endif;
	
if curocc() = 3 then
	if poschar("ABCDEFGHIJKLMNOPQRS", FD_CATTLE_DISEASE(1)) = 0 then
		if poschar("ABCDEFGHIJKLMNOPQRS", FD_CATTLE_DISEASE(2)) = 0 then	
			if poschar("ABCDEFGHIJKLMNOPQRS", FD_CATTLE_DISEASE(3)) = 0 then
				getErrorMsg("No selected code!");
			endif;
		endif;
	endif;
endif;

savepartial();
PROC FDA_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("A",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) in 0,notappl then     
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDB_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("B",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDC_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("C",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDD_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("D",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDE_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("E",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDF_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("F",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDG_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("G",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDH_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("H",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDI_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("I",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDJ_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("J",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDK_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("K",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDL_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("L",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDM_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("M",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDN_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("N",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDO_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("O",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDP_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("P",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDQ_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("Q",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDR_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("R",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FDS_SPECIFY

preproc
	ask if ischecked("A",F4FQ_L31L32) and ischecked("S",FD_CATTLE_DISEASE);
	
postproc

	if strip($) = "" then
		getErrorMsg("C. Please specify the cause of death due to other disease.");
	endif;
	
	savepartial();
	
	
PROC FDS_HC

preproc 
	ask if ischecked("A",F4FQ_L31L32) and ischecked("S",FD_CATTLE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC FCA_SPECIFY
preproc
	ask if ischecked("B",F4FQ_L31L32);

postproc

	 
    if curocc() = 1 then  F4L31L32_SPECIFY_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  F4L31L32_SPECIFY_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  F4L31L32_SPECIFY_M3(2) = $(curocc());
	endif;
	
	savepartial();
	
PROC FCA_SP_HC

preproc
	ask if ischecked("B",F4FQ_L31L32) and strip(FCA_SPECIFY) <> "";

postproc
     if  FCA_SP_HC(curocc()) > 0 and strip(FCA_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	endif;
   
	if FCA_SP_HC(curocc()) = notappl and curocc() = 3 then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");


    if curocc() = 1 then  F4L31L32_NUMBER_OF_HEADS_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  F4L31L32_NUMBER_OF_HEADS_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  F4L31L32_NUMBER_OF_HEADS_M3(2) = $(curocc());
	endif;	
	
	savepartial();
PROC FCB_SPECIFY
preproc
	ask if ischecked("B",F4FQ_L31L32);
postproc

	// if strip($) = "" and curocc()  = 3 then
		// getErrorMsg("D. Please specify the cause of death due to other causes.");
	// endif;
	
    if curocc() = 1 then  F4L31L32_SPECIFY_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  F4L31L32_SPECIFY_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  F4L31L32_SPECIFY_M3(2) = $(curocc());
	endif;
	
	savepartial();
	
PROC FCB_SP_HC

preproc
	ask if ischecked("B",F4FQ_L31L32) and strip(FCB_SPECIFY) <> "";
postproc
	if  FCB_SP_HC(curocc()) > 0 and strip(FCB_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	endif;
	if FCB_SP_HC(curocc()) = notappl and curocc() = 3 then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");


    if curocc() = 1 then  F4L31L32_NUMBER_OF_HEADS_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  F4L31L32_NUMBER_OF_HEADS_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  F4L31L32_NUMBER_OF_HEADS_M3(2) = $(curocc());
	endif;	
	
	savepartial();
PROC FCC_SPECIFY
preproc
	ask if ischecked("B",F4FQ_L31L32);
postproc

	// if strip($) = "" and curocc()  = 3 then
		// getErrorMsg("D. Please specify the cause of death due to other causes.");
	// endif;
	
    if curocc() = 1 then  F4L31L32_SPECIFY_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  F4L31L32_SPECIFY_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  F4L31L32_SPECIFY_M3(2) = $(curocc());
	endif;
	
	if curocc() = 3 then    	
		if  strip(FCA_SPECIFY(1)) = "" and strip(FCA_SPECIFY(2)) = "" and strip(FCA_SPECIFY(3)) = "" and
			strip(FCB_SPECIFY(1)) = "" and strip(FCB_SPECIFY(2)) = "" and strip(FCB_SPECIFY(3)) = "" and 
			strip($(1)) = "" and strip($(2)) = "" and strip($(3)) = "" then
				getErrorMsg("D. Please specify the cause of death due to other causes.");
		endif;
	endif;
	savepartial();
	

	
PROC FCC_SP_HC

preproc
	ask if ischecked("B",F4FQ_L31L32) and strip(FCC_SPECIFY) <> "";
postproc
	if  FCC_SP_HC(curocc()) > 0 and strip(FCC_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	endif;
	if FCC_SP_HC(curocc()) = notappl and curocc() = 3 then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");


    if curocc() = 1 then  F4L31L32_NUMBER_OF_HEADS_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  F4L31L32_NUMBER_OF_HEADS_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  F4L31L32_NUMBER_OF_HEADS_M3(2) = $(curocc());
	endif;	
	
	savepartial();
PROC RTF5_L33L44000
preproc
if F1L01_TYPE_OF_OPERATION in 3,5,6,7 then
	oks=1;
else
	skip to remarks;
endif;
PROC F5L33_COW_MILKLINE

preproc
	if !(F1L01_TYPE_OF_OPERATION in 3,5,6,7) then
		skip to Remarks;
	endif;
	
postproc

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
  
	getOutOfRangeW($(curocc()),0,99999);
	
	// If number of cows in the milkline is > than the beggining inventory of cow + Other Ages +Acquired
	tempBI  = F2L04_COW(1) + F2L05_OTHER_AGES(1) + F3L08_CATTLES_ACQUIRED(1);
	if $ > tempBI then
		getErrorMsg("Number of cows in the milkline exceeds the inventory of cow, Other Ages, and Acquired");
	endif;
	
	savepartial();

PROC F5L34_AVE_MILK_DAY

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	if curocc() = 1 then
		if $ > refdays1 then
			getErrorMsg(maketext("Average number of milking days is higher than the total number of days for the month of %s.",E2_QtrMonth(curocc())));
		endif;
	elseif curocc() = 2 then
		if $ > refdays2 then
			getErrorMsg(maketext("Average number of milking days is higher than the total number of days for the month of %s.",E2_QtrMonth(curocc())));
		endif;
	elseif curocc() = 3 then
		if $ > refdays3 then
			getErrorMsg(maketext("Average number of milking days is higher than the total number of days for the month of %s.",E2_QtrMonth(curocc())));
		endif;
	endif;
  
	savepartial();
  
PROC F5L35_AVE_MILK_PROD

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
  
	getOutOfRange($,1,10.00, "Average milk production (in liter) per day is not within the acceptable range.");
  
	savepartial();

PROC F5L36_TOTAL_MILK_PROD

	savepartial();
	
PROC F5L37_CONSUMED_HOME
preproc
	ask if F5L33_COW_MILKLINE(curocc()) <> 0 and F5L34_AVE_MILK_DAY(curocc()) <> 0 and F5L35_AVE_MILK_PROD(curocc()) <> 0;
postproc
	if $(curocc()) = notappl then   
		getErrorMsg("Please verify the inputted code");
	endif;
  
	getOutOfRange($,1,100.00, "A. Entered value is greater than 100 percent. Verify inputed data");
  
	savepartial();
  
PROC F5L38_FED_CALVES
preproc
	ask if F5L33_COW_MILKLINE(curocc()) <> 0 and F5L34_AVE_MILK_DAY(curocc()) <> 0 and F5L35_AVE_MILK_PROD(curocc()) <> 0 ;
postproc
	if $(curocc()) = notappl then   
		getErrorMsg("Please verify the inputted code");
	endif;
  
	getOutOfRange($,1,100.00, "A. Entered value is greater than 100 percent. Verify inputed data");
  
	savepartial();
  
PROC F5L39_WASTAGE
preproc
	ask if F5L33_COW_MILKLINE(curocc()) <> 0 and F5L34_AVE_MILK_DAY(curocc()) <> 0 and F5L35_AVE_MILK_PROD(curocc()) <> 0 ;
postproc
	if $(curocc()) = notappl then   
		getErrorMsg("Please verify the inputted code");
	endif;
  
	getOutOfRange($,1,100.00, "A. Entered value is greater than 100 percent. Verify inputed data");
  
	savepartial();
  
PROC F5L40_FRESH_MILK

postproc

	F5L36_TOTAL_MILK_PROD(curocc()) = F5L37_CONSUMED_HOME(curocc()) + F5L38_FED_CALVES(curocc()) + F5L39_WASTAGE(curocc()) + F5L40_FRESH_MILK(curocc());

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
  
	getOutOfRange($,1,100.00, "A. Entered value is greater than 100 percent. Verify inputed data");
	
	if $ > 0 then
		if F5L36_TOTAL_MILK_PROD(curocc()) in 0, notappl then
			getErrorMsg("B.sold as raw milk is greater than zero but computed milk production is zero. Please verify the milk disposition or milk production.");
		endif;
	else
		// if $ = 0 then
			// skip to F5L33_COW_MILKLINE(2);
		// endif;
	endif;
	
	if F5L36_TOTAL_MILK_PROD(curocc()) < 100 and F5L36_TOTAL_MILK_PROD(curocc()) <> 0 then
		getErrorMsg("C. sum of 1:4 is less than 100%. Verify the inputted data");
	endif;
	
	if F5L37_CONSUMED_HOME(curocc()) in 0, notappl and F5L38_FED_CALVES(curocc()) in 0, notappl and F5L39_WASTAGE(curocc()) in 0, notappl and F5L40_FRESH_MILK(curocc()) in 0, notappl and F5L35_AVE_MILK_PROD(curocc()) > 0 then
		getErrorMsg("F. With entry in Total milk produced (in liters) but without entry in any items of consumed /processed at home,  fed to caracalves, wastage, and sold as raw milk");
	endif;
	
	if F5L36_TOTAL_MILK_PROD(curocc()) > 0 and F5L33_COW_MILKLINE(curocc()) in 0, notappl and F5L34_AVE_MILK_DAY(curocc()) in 0, notappl and F5L35_AVE_MILK_PROD(curocc()) in 0, notappl then
		getErrorMsg("G. Milk production indicator has no entry but milk disposition has entry");
	endif;
	
	// for total not in edit specs
	if F5L36_TOTAL_MILK_PROD(curocc()) > 100 then
		getErrorMsg("Entered value is greater than 100 percent. Verify inputed data");
	endif;
	
F5L41_TOTAL_M1(curocc()) = F5L33_COW_MILKLINE(curocc()) * F5L34_AVE_MILK_DAY(curocc()) * F5L35_AVE_MILK_PROD(curocc()) * (visualvalue(F5L40_FRESH_MILK(curocc())) / 100);
	
	savepartial();
PROC BLOCK001F4_L41L44
	
preproc

	ask if F5L40_FRESH_MILK(curocc()) > 0;
	

PROC F5L41_TOTAL_M1

postproc

	savepartial();
	
PROC F5L42_SOLD_VOL_PCC

postproc
	
	if not $(curocc()) in 0:999999.99 then
		getWarningMsg("Entry(PCC Volume) is not in acceptable range");
	endif; 
  
	savepartial();
  

  
PROC F5L42_MILK_FG_PCC
	
	if not $(curocc()) in 0,25.00:70.00 then
		getWarningMsg("Entry(PCC Ave. Farmgate Price) is not in acceptable range");
	endif; 
	
	if F5L42_SOLD_VOL_PCC(curocc()) > 0 then
		if ($(curocc()) in 0,notappl) then
			getErrorMsg("a. Missing entry in average farmgate");
		endif;
	else
		if F5L42_SOLD_VOL_PCC(curocc()) = 0 then
			if $(curocc()) > 0 then
				getErrorMsg("b. Missing entry in Volume/Number (in liter)");
			endif;
		endif;
	endif;
	savepartial();
PROC F5L43_SOLD_VOL_NDA


postproc

	if not $(curocc()) in 0:999999.99 then
		getWarningMsg("Entry(NDA Volume) is not in acceptable range");
	endif; 
	
	savepartial();
  
PROC F5L43_MILK_FG_NDA

	if not $(curocc()) in 0,25.00:70.00 then
		getWarningMsg("Entry(NDA Ave. Farmgate Price) is not in acceptable range");
	endif; 
	
	
	if F5L43_SOLD_VOL_NDA(curocc()) > 0 then
		if ($(curocc()) in 0,notappl) then
			getErrorMsg("a. Missing entry in average farmgate");
		endif;
	else
		if F5L43_SOLD_VOL_NDA(curocc()) = 0 then
			if $(curocc()) > 0 then
				getErrorMsg("b. Missing entry in Volume/Number (in liter)");
			endif;
		endif;
	endif;
	
	savepartial();
	
	
PROC F5L44_SOLD_VOL_OTHER

postproc

	if not $(curocc()) in 0:999999.99 then
		getWarningMsg("Entry(Other Volume) is not in acceptable range");
	endif; 
	
	savepartial();
PROC F5L44_MILK_FG_OTHER

postproc

	if not $(curocc()) in 0,25.00:70.00 then
		getWarningMsg("Entry(Other Ave. Farmgate Price) is not in acceptable range");
	endif; 
	
	
	if curocc() = 1 then
		xblockE4_m1 = F5L42_SOLD_VOL_PCC(1) + F5L43_SOLD_VOL_NDA(1) + F5L44_SOLD_VOL_OTHER(1);
	elseif curocc() = 2 then
		xblockE4_m2 = F5L42_SOLD_VOL_PCC(2) + F5L43_SOLD_VOL_NDA(2) + F5L44_SOLD_VOL_OTHER(2);
	elseif curocc() = 3 then
		xblockE4_m3 = F5L42_SOLD_VOL_PCC(3) + F5L43_SOLD_VOL_NDA(3) + F5L44_SOLD_VOL_OTHER(3);
	endif;
	
	if F5L44_SOLD_VOL_OTHER(curocc()) > 0 then
		if ($(curocc()) in 0,notappl) then
			getErrorMsg("a. Missing entry in average farmgate");
		endif;
	else
		if F5L44_SOLD_VOL_OTHER(curocc()) = 0 then
			if $(curocc()) > 0 then
				getErrorMsg("b. Missing entry in Volume/Number (in liter)");
			endif;
		endif;
	endif;
	
	
	tempTotal = ((F5L40_FRESH_MILK(curocc())/100) * (F5L33_COW_MILKLINE(curocc()) * F5L34_AVE_MILK_DAY(curocc()) * F5L35_AVE_MILK_PROD(curocc())));
	
	if F5L41_TOTAL_M1(curocc()) <> tempTotal then
		errmsg("Total sold as fresh milk %10.2f is not equal to %10.2f. (Sum of sold to PCC, NDA, and Other than PCC/NDA is less than or greater than LN 41 x Total Milk Produced)",F5L41_TOTAL_M1(curocc()),tempTotal)
		select("Milk Production",F5L33_COW_MILKLINE(curocc()),"Sold as Fresh Milk",F5L40_FRESH_MILK(curocc()),"Milk Destination",F5L42_SOLD_VOL_PCC(curocc()));
	endif;
    
savepartial();


PROC F5L44_OTHER_MTH
preproc
	ask if F5L44_SOLD_VOL_OTHER(curocc()) > 0 and F5L44_MILK_FG_OTHER(curocc()) > 0 ;
	
postproc
	if F5L44_SOLD_VOL_OTHER(1) > 0 or F5L44_SOLD_VOL_OTHER(2) > 0 or F5L44_SOLD_VOL_OTHER(3) > 0 or
		F5L44_MILK_FG_OTHER(1) > 0 or F5L44_MILK_FG_OTHER(2) > 0 or F5L44_MILK_FG_OTHER(3) > 0 then
		if strip($) = "" then
			getErrorMsg("Missing entry in specify! Please specify other destination!");
		endif;
	endif;

	if F5L44_SOLD_VOL_OTHER(1) in 0, notappl and F5L44_SOLD_VOL_OTHER(2) in 0, notappl and F5L44_SOLD_VOL_OTHER(3) in 0, notappl and
		F5L44_MILK_FG_OTHER(1) in 0, notappl and F5L44_MILK_FG_OTHER(2) in 0, notappl and F5L44_MILK_FG_OTHER(3) in 0, notappl then
		if !(strip($) = "") then
			getErrorMsg("Item specify should be blank!");
		endif;
	endif; 


	savepartial();
PROC GROUP003_SWINE
preproc
if D2L12_SWINE = 3 then
	ok = 1
else
	skip to REMARKS;
endif;
PROC G1L01_TYPE_OF_OPERATION
postproc

	if not $ in 1:3 then
		getErrorMsg("A. No selected type of operation. Please select type of operation.");
	endif;
	
	if $ = 1 then
		oks = 1;
	else
		skip to G1L03_CONTRACT_GROWING;
	endif;
	
	savepartial();
PROC G1L02B1_NUCLEUS_FARM

	

	savepartial();
	
	
PROC G1L02B2_MULTIPLIER_FARM



	savepartial();
	
	
PROC G1L02B3_OTHERS_BREED

	if G1L01_TYPE_OF_OPERATION in 1,3 then
		if G1L02B1_NUCLEUS_FARM = notappl and G1L02B2_MULTIPLIER_FARM = notappl and G1L02B3_OTHERS_BREED = notappl then
			getErrorMsg("A. Item G.1.1 (Type of operation/s) is breeding but breeding classification was not selected. Please enter a valid code.");
		endif;
	
	else
		if G1L02B1_NUCLEUS_FARM <> notappl or G1L02B2_MULTIPLIER_FARM <> notappl or G1L02B3_OTHERS_BREED <> notappl then
			getErrorMsg("C. Item G.1.2 (Breeding classification) did not match the allowed combinations with G.1.1 (Type of operation/s).");
		endif;
		
	endif;

	savepartial();
	
	
PROC G1L03_CONTRACT_GROWING
	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	savepartial();
	
	
PROC G2L04_TOTAL

postproc
if CHANGE_FARM_CAP > 0 then
	if G2L04_TOTAL(2) > CHANGE_FARM_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;

else
	if G2L04_TOTAL(2) > MAX_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;
endif;

	savepartial();
PROC G2L05_BOAR

	if $(curocc()) > G2L04_TOTAL(curocc())  then
		getErrorMsg("A. Inventory of Boar is greater than the total inventory ");
	endif;
	
	savepartial();
PROC G2L06_SOW

	if $(curocc()) > G2L04_TOTAL(curocc())  then
		getErrorMsg("B. Inventory of Sow is greater than the total inventory ");
	endif;
	
	savepartial();
PROC G2L07_FATTENER

	if $(curocc()) > G2L04_TOTAL(curocc())  then
		getErrorMsg("C. Inventory of Fattener/Finisher/Grower is greater than the total inventory ");
	endif;
	
	savepartial();
PROC G2L08_OTHER_AGES

	numeric xE2TotInventory = G2L05_BOAR(curocc()) + G2L06_SOW(curocc()) + G2L07_FATTENER(curocc()) + G2L08_OTHER_AGES(curocc());

	if $(curocc()) > G2L04_TOTAL(curocc())  then
		getErrorMsg("D. Inventory of Other Ages is greater than the total inventory.");
	endif;
	
	if xE2TotInventory <> G2L04_TOTAL then
		getErrorMsg("The total inventory of swine is not equal to the breakdown.");
	endif;
	
	savepartial();
	
PROC G3L09_SOWS_BIRTH

	savepartial();
	
PROC G3L10_AVE_LTTR_SIZE


	if $(curocc()) > 0 and G3L09_SOWS_BIRTH(curocc()) = 0 then
		getErrorMsg("A. With entry in average litersize but zero in sow that gave birth.");
	endif;
	
	if $(curocc()) > 15 and G3L09_SOWS_BIRTH(curocc()) > 0 then
		getWarningMsg("B. Item G.3.2 is greater than the acceptable range. A sow that gave birth may have at most 15 piglets in one farrowing.");
	endif;
	
	if $(curocc()) = 0 and G3L09_SOWS_BIRTH(curocc()) > 0 then
		getErrorMsg("C. With entry in sow that gave birth but zero in average litersize.");
	endif;
	

	savepartial();


PROC G3L11_SOWS_ACQUIRED

numeric total_birth,beg_invt,end_invt,sum_gaveB;
	total_birth = 0;
	beg_invt    = 0;
	end_invt    = 0;
	sum_gaveB   = 0;

	
	total_birth = $(1) + $(2) + $(3);
               // caracow                                             other                    acquired
	beg_invt  = visualvalue(G2L06_SOW(1))        + visualvalue(G2L08_OTHER_AGES(1))     +  G3L11_SOWS_ACQUIRED(1);
	end_invt  = visualvalue(G2L06_SOW(2))        + visualvalue(G2L08_OTHER_AGES(2))     +  G3L11_SOWS_ACQUIRED(1) + G3L11_SOWS_ACQUIRED(2) + G3L11_SOWS_ACQUIRED(3) ;
	sum_gaveB = visualvalue(G3L09_SOWS_BIRTH(1)) + visualvalue(G3L09_SOWS_BIRTH(2)) +  visualvalue(G3L09_SOWS_BIRTH(3));
	// end_invt  = G2L06_SOW(2)        + G2L08_OTHER_AGES(2)     +  G3L11_SOWS_ACQUIRED(1) + G3L11_SOWS_ACQUIRED(2) + G3L11_SOWS_ACQUIRED(3) ;
	
	  G3L09L11_TOT_SUPPLY(curocc()) = G2L04_TOTAL(2) + (G3L09_SOWS_BIRTH(curocc()) * G3L10_AVE_LTTR_SIZE(curocc())) + G3L11_SOWS_ACQUIRED(curocc());
   
	if curocc() = 1 then
		if visualvalue(G3L09_SOWS_BIRTH(1)) > beg_invt   then
			getErrorMsg("B. sows that gavebirth is > beginning inventory of sow + beginning inventory of other ages + acquired");
		endif;
	elseif curocc() = 2 then
		if visualvalue(G3L09_SOWS_BIRTH(2)) > ((beg_invt + ($(2)) - visualvalue(G3L09_SOWS_BIRTH(1))))  then
			 getErrorMsg("C. sows that gavebirth is > beginning inventory of sow + beginning inventory of other ages + acquired");
		endif;
	elseif curocc() = 3 then
		if visualvalue(G3L09_SOWS_BIRTH(3)) > (end_invt  - (visualvalue(G3L09_SOWS_BIRTH(1)) + visualvalue(G3L09_SOWS_BIRTH(2))))  then
			getErrorMsg("D. sows that gave birth is > ending inventory of sow + ending inventory of other ages + acquired");
		endif;
		if sum_gaveB > (beg_invt + $(2) + $(3) + G2L08_OTHER_AGES(2)) then
		  getErrorMsg("E. Total number of sow that gave birth during the quarter exceeds the beginning inventory of sow and other ages, and acquired. ");
		endif;
	endif;

	savepartial();
PROC G4L12_SOLD_SLAUGHTER

	if $ in 1:2 then
		if $ = 2 then
			skip to G4L28SOLD_OTHER_PURPOSE;
		endif;
	else
		getNoAcceptCode();
	endif;
	
	savepartial();
PROC G4FQ_L13L15

	if poschar("ABCD", $) = 0 then
		getErrorMsg("NO selected ages of swine slaughtered in the establishment!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			skip to G4FQ_L16L18;
		endif;
	endif;
	
	savepartial();
	
PROC G4L13L15_HEAD_M1

preproc
	//selection of ages
	if ischecked("A",G4FQ_L13L15) = 0 then 
		if curocc() = 1 then    
			move to G4L13L15_HEAD_M1(2); // punta culled breeder
		endif;		
	endif;

	if ischecked("B",G4FQ_L13L15) = 0 then 
		if curocc() = 2 then    
			move to G4L13L15_HEAD_M1(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",G4FQ_L13L15) = 0 then 
		if curocc() = 3 then    
			move to G4L13L15_HEAD_M2(1); 
		endif;
	endif;
 
 
postproc

	 G4L13L15_HEAD_TOTAL_M1 = $(1) + $(2) + $(3);	 
	 
	if curocc() = 1 then
		if $(1) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(1) + G3L11_SOWS_ACQUIRED(1)) then
			getErrorMsg("A. Fattener/Finisher/Grower slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(1) +G3L11_SOWS_ACQUIRED(1)) then
			getErrorMsg("A. Culled Breeder slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(1) + G3L11_SOWS_ACQUIRED(1)) then
			getErrorMsg("A. Other Ages slaughtered on establishment is greater than Total Supply");
		endif;

		if G4L13L15_HEAD_TOTAL_M1 > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(1) + G3L11_SOWS_ACQUIRED(1)) then
			getErrorMsg("A. Total slaughtered on establishment is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  
PROC G4L13L15_LIVEWEIGHT_M1
postproc
	if G4L13L15_HEAD_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15,140,"A. Average liveweight is not within the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,50,260,"A. Average liveweight is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,7,260,"A. Average liveweight is not within the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Please verify the inputted code in either number of heads or average liveweight");
		endif;
	else
		if G4L13L15_HEAD_M1(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Please verify the inputted code in either number of heads or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", G4FQ_L13L15) = 1 then
						getErrorMsg("F. Fattener/Finisher/Grower is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", G4FQ_L13L15) = 1 then
						getErrorMsg("F. Culled Breeder is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", G4FQ_L13L15) = 1 then
						getErrorMsg("F. Other ages is selected but missing entries in number of heads and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;
	
	savepartial();
PROC G4L13L15_FARMGATE_M1
postproc
	if G4L13L15_HEAD_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,6000.00,30000.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,6000.00,50000.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,2000.00,30000.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if G4L13L15_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif G4L13L15_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif G4L13L15_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if G4L13L15_HEAD_M1(curocc()) in 0,notappl then
			if G4L13L15_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif G4L13L15_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif G4L13L15_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
			
			if G4L13L15_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", G4FQ_L13L15) = 1 then
						getErrorMsg("J. Fattener/Finisher/Grower is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", G4FQ_L13L15) = 1 then
						getErrorMsg("J. Culled Breeder is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", G4FQ_L13L15) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
		endif;
	endif;

	savepartial();
	
PROC G4L13L15_HEAD_M2

preproc
	//selection of ages
	if ischecked("A",G4FQ_L13L15) = 0 then 
		if curocc() = 1 then    
			move to G4L13L15_HEAD_M2(2); // punta culled breeder
		endif;		
	endif;

	if ischecked("B",G4FQ_L13L15) = 0 then 
		if curocc() = 2 then    
			move to G4L13L15_HEAD_M2(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",G4FQ_L13L15) = 0 then 
		if curocc() = 3 then    
			move to G4L13L15_HEAD_M3(1); 
		endif;
	endif;
 
 
postproc


	xblockE1_m2 = $(1) + $(2) + $(3);
	G4L13L15_HEAD_TOTAL_M2 = xblockE1_m2;	 
	
	
	if curocc() = 1 then
		if $(1) > (G2L04_TOTAL(1) + G3L11_SOWS_ACQUIRED(1) + G3L11_SOWS_ACQUIRED(2)) then
			getErrorMsg("B. Fattener/Finisher/Grower slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (G2L04_TOTAL(1) + G3L11_SOWS_ACQUIRED(1) + G3L11_SOWS_ACQUIRED(2)) then
			getErrorMsg("B. Culled Breeder slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (G2L04_TOTAL(1) + G3L11_SOWS_ACQUIRED(1) + G3L11_SOWS_ACQUIRED(2)) then
			getErrorMsg("B. Other Ages slaughtered on establishment is greater than Total Supply");
		endif;

		if G4L13L15_HEAD_TOTAL_M2 > (G2L04_TOTAL(1) + G3L11_SOWS_ACQUIRED(1) + G3L11_SOWS_ACQUIRED(2)) then
			getErrorMsg("B. Total slaughtered on establishment is greater than Total Supply");
				
		endif;
	endif;
	
	
	savepartial();
  
PROC G4L13L15_LIVEWEIGHT_M2
postproc
	if G4L13L15_HEAD_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15,140,"B. Average liveweight is not within the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,50,260,"B. Average liveweight is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,7,260,"B. Average liveweight is not within the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Please verify the inputted code in either number of heads or average liveweight");
		endif;
	else
		if G4L13L15_HEAD_M2(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Please verify the inputted code in either number of heads or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", G4FQ_L13L15) = 1 then
						getErrorMsg("F. Fattener/Finisher/Grower is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", G4FQ_L13L15) = 1 then
						getErrorMsg("F. Culled breeder is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", G4FQ_L13L15) = 1 then
						getErrorMsg("F. Other ages is selected but missing entries in number of heads and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;
	
	savepartial();

	
		
PROC G4L13L15_FARMGATE_M2
postproc
	if G4L13L15_HEAD_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,6000.00,30000.00,"B. Average Farmgate is not within the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,6000.00,50000.00,"B. Average Farmgate is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,2000.00,30000.00,"B. Average Farmgate is not within the acceptable range.");
		endif;
		
		if G4L13L15_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
		elseif G4L13L15_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
		elseif G4L13L15_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if G4L13L15_HEAD_M2(curocc()) in 0, notappl then
			if G4L13L15_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			elseif G4L13L15_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			elseif G4L13L15_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			endif;	
				
			if G4L13L15_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", G4FQ_L13L15) = 1 then
						getErrorMsg("J. Fattener/Finisher/Grower is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", G4FQ_L13L15) = 1 then
						getErrorMsg("J. Culled Breeder is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", G4FQ_L13L15) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;

	savepartial();
	
PROC G4L13L15_HEAD_M3

preproc
	//selection of ages
	if ischecked("A",G4FQ_L13L15) = 0 then 
		if curocc() = 1 then    
			move to G4L13L15_HEAD_M3(2); // punta culled breeder
		endif;		
	endif;

	if ischecked("B",G4FQ_L13L15) = 0 then 
		if curocc() = 2 then    
			move to G4L13L15_HEAD_M3(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",G4FQ_L13L15) = 0 then 
		if curocc() = 3 then    
			move to G4FQ_L16L18; 
		endif;
	endif;
 
 
postproc

	xblockE1_m3 = $(1) + $(2) + $(3);
	G4L13L15_HEAD_TOTAL_M3 = xblockE1_m3;
	
	
	if curocc() = 1 then
		if $(1) > (G2L04_TOTAL(1) + G3L11_SOWS_ACQUIRED(1) + G3L11_SOWS_ACQUIRED(2) + G3L11_SOWS_ACQUIRED(3)) then
			getErrorMsg("C. Fattener/Finisher/Grower slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (G2L04_TOTAL(1) + G3L11_SOWS_ACQUIRED(1) + G3L11_SOWS_ACQUIRED(2) + G3L11_SOWS_ACQUIRED(3)) then
			getErrorMsg("C. Culled Breeder slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (G2L04_TOTAL(1) + G3L11_SOWS_ACQUIRED(1) + G3L11_SOWS_ACQUIRED(2) + G3L11_SOWS_ACQUIRED(3)) then
			getErrorMsg("C. Other Ages slaughtered on establishment is greater than Total Supply");
		endif;

		if G4L13L15_HEAD_TOTAL_M3 > (G2L04_TOTAL(2) + G3L11_SOWS_ACQUIRED(1) + G3L11_SOWS_ACQUIRED(2) + G3L11_SOWS_ACQUIRED(3)) then
		
			getErrorMsg("C. Total slaughtered on establishment is greater than Total Supply");
	
		endif;
	endif;
	
	
	if G4L13L15_HEAD_M1(curocc()) = notappl and G4L13L15_HEAD_M2(curocc()) = notappl and G4L13L15_HEAD_M3(curocc()) = notappl then
		if curocc() = 1 then
			if ischecked("A", G4FQ_L13L15) = 1 then
				getErrorMsg("D. Fattener/Finisher/Grower is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 2 then
			if ischecked("B", G4FQ_L13L15) = 1 then
				getErrorMsg("E. Culled Breeder is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 3 then
			if ischecked("C", G4FQ_L13L15) = 1 then
				getErrorMsg("F. Other ages is selected but no entry for M1, M2, and M3");
			endif;
		endif;
	endif;
	
	savepartial();
  
PROC G4L13L15_LIVEWEIGHT_M3
postproc
	if G4L13L15_HEAD_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15,140,"C. Average liveweight is not within the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,50,260,"C. Average liveweight is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,7,260,"C. Average liveweight is not within the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Please verify the inputted code in either number of heads or average liveweight");
		endif;
	else
		if G4L13L15_HEAD_M3(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Please verify the inputted code in either number of heads or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", G4FQ_L13L15) = 1 then
						getErrorMsg("F. Fattener/Finisher/Grower is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", G4FQ_L13L15) = 1 then
						getErrorMsg("F. Culled breeder is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", G4FQ_L13L15) = 1 then
						getErrorMsg("F. Other ages is selected but missing entries in number of heads and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;
	
	savepartial();

	
		
PROC G4L13L15_FARMGATE_M3
postproc

	if G4L13L15_HEAD_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,6000.00,30000.00,"C. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,6000.00,50000.00,"C. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,2000.00,30000.00,"C. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if G4L13L15_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif G4L13L15_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif G4L13L15_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if G4L13L15_HEAD_M3(curocc()) in 0,notappl then
			if G4L13L15_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif G4L13L15_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif G4L13L15_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
			
		endif;
	endif;
	
	if G4L13L15_HEAD_M1(curocc()) in 0, notappl and G4L13L15_LIVEWEIGHT_M1(curocc()) in 0, notappl and G4L13L15_FARMGATE_M1(curocc()) in 0, notappl and
	   G4L13L15_HEAD_M2(curocc()) in 0, notappl and G4L13L15_LIVEWEIGHT_M2(curocc()) in 0, notappl and G4L13L15_FARMGATE_M2(curocc()) in 0, notappl and
	   G4L13L15_HEAD_M3(curocc()) in 0, notappl and G4L13L15_LIVEWEIGHT_M3(curocc()) in 0, notappl and G4L13L15_FARMGATE_M3(curocc()) in 0, notappl then
		if curocc() = 1 then
			if ischecked("A", G4FQ_L13L15) = 1 then
				getErrorMsg("J. Fattener/Finisher/Grower is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 2 then
			if ischecked("B", G4FQ_L13L15) = 1 then
				getErrorMsg("J. Culled Breeder is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 3 then
			if ischecked("C", G4FQ_L13L15) = 1 then
				getErrorMsg("J. Other ages is selected but no entry for M1, M2, and M3"); 
			endif;
		endif;
	endif;

	savepartial();
	
PROC G4FQ_L16L18
postproc
	if  poschar("D", $) > 0 and poschar("D",G4FQ_L13L15) > 0 and G4L12_SOLD_SLAUGHTER = 1 then
	    getErrorMsg("Disposed/sell swine for slaughter is code 1. Verify the inputted code.");
	endif;
	
	if poschar("ABCD", $) = 0 then
		getErrorMsg("NO selected swine sold live for slaughter!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			skip to G4L19_DISPOSE_SELL_SLAUGHTER;
		endif;
	endif;
	

savepartial();
PROC G4L16L18_HEAD_M1
preproc
	//selection of ages
	if ischecked("A",G4FQ_L16L18) = 0 then 
		if curocc() = 1 then    
			move to G4L16L18_HEAD_M1(2); // punta culled breeder
		endif;		
	endif;

	if ischecked("B",G4FQ_L16L18) = 0 then 
		if curocc() = 2 then    
			move to G4L16L18_HEAD_M1(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",G4FQ_L16L18) = 0 then 
		if curocc() = 3 then    
			move to G4L16L18_HEAD_M2(1); 
		endif;
	endif;
 
 
postproc

	 
	G4L16L18_HEAD_TOTAL_M1 =$(1) + $(2) + $(3);
	
	if curocc() = 1 then
		if $(1) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(1) + G3L11_SOWS_ACQUIRED(1)) then
			getErrorMsg("A. Fattener/Finisher/Grower sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(1) + G3L11_SOWS_ACQUIRED(1)) then
			getErrorMsg("A. Culled Breeder sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(1) + G3L11_SOWS_ACQUIRED(1)) then
			getErrorMsg("A. Other sold live for slaughter is greater than Total Supply");
		endif;

		if G4L16L18_HEAD_TOTAL_M1 > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(1) + G3L11_SOWS_ACQUIRED(1)) then
			getErrorMsg("A. Total sold live for slaughter is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  
PROC G4L16L18_LIVEWEIGHT_M1

	if G4L16L18_HEAD_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15,140,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,50,260,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,7,260,"A. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if G4L16L18_HEAD_M1(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of heads or average liveweight");
			endif;		
		endif;
	endif;
  
	savepartial();
	
PROC G4L16L18_FARMGATE_M1

	G4L16L18_HEAD_TOTAL_M1 = G4L16L18_HEAD_M1(1) + G4L16L18_HEAD_M1(2) + G4L16L18_HEAD_M1(3);

	if G4L16L18_HEAD_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,6000.00,30000.00,"A. Average Farmgate price is not within the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,6000.00,50000.00,"A. Average Farmgate price is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,2000.00,30000.00,"A. Average Farmgate price is not within the acceptable range.");
		endif;
		
		if G4L16L18_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
		elseif G4L16L18_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
		elseif G4L16L18_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if G4L16L18_HEAD_M1(curocc()) in 0, notappl then
			if G4L16L18_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			elseif G4L16L18_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			elseif G4L16L18_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			endif;	
				
			if G4L16L18_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", G4FQ_L16L18) = 1 then
						getErrorMsg("J. Fattener/Finisher/Grower is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", G4FQ_L16L18) = 1 then
						getErrorMsg("J. Culled Breeder is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", G4FQ_L16L18) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;


	savepartial();
	
PROC G4L16L18_HEAD_M2

preproc
	//selection of ages
	if ischecked("A",G4FQ_L16L18) = 0 then 
		if curocc() = 1 then    
			move to G4L16L18_HEAD_M2(2); // punta culled breeder
		endif;		
	endif;

	if ischecked("B",G4FQ_L16L18) = 0 then 
		if curocc() = 2 then    
			move to G4L16L18_HEAD_M2(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",G4FQ_L16L18) = 0 then 
		if curocc() = 3 then    
			move to G4L16L18_HEAD_M3(1); 
		endif;
	endif;
 
 
postproc

	 
	G4L16L18_HEAD_TOTAL_M2 = $(1) + $(2) + $(3);	
	
	if curocc() = 1 then
		if $(1) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(2) + G3L11_SOWS_ACQUIRED(2)) then
			getErrorMsg("B. Fattener/Finisher/Grower sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(2) + G3L11_SOWS_ACQUIRED(2)) then
			getErrorMsg("B. Culled Breeder sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(2)  + G3L11_SOWS_ACQUIRED(2)) then
			getErrorMsg("B. Other sold live for slaughter is greater than Total Supply");
		endif;

		if G4L16L18_HEAD_TOTAL_M2 > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(2) + G3L11_SOWS_ACQUIRED(2)) then
			getErrorMsg("B. Total sold live for slaughter is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  
PROC G4L16L18_LIVEWEIGHT_M2

	if G4L16L18_HEAD_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15,140,"B. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,50,260,"B. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,7,260,"B. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if G4L16L18_HEAD_M2(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of heads or average liveweight");
			endif;		
		endif;
	endif;
  
	savepartial();
	
PROC G4L16L18_FARMGATE_M2

	G4L16L18_HEAD_TOTAL_M2 = G4L16L18_HEAD_M2(1) + G4L16L18_HEAD_M2(2) + G4L16L18_HEAD_M2(3);

	if G4L16L18_HEAD_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,6000.00,30000.00,"B. Average Farmgate price is not within the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,6000.00,50000.00,"B. Average Farmgate price is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,2000.00,30000.00,"B. Average Farmgate price is not within the acceptable range.");
		endif;
		
		if G4L16L18_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
		elseif G4L16L18_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
		elseif G4L16L18_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if G4L16L18_HEAD_M2(curocc()) in 0, notappl then
			if G4L16L18_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			elseif G4L16L18_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			elseif G4L16L18_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			endif;	
				
			if G4L16L18_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", G4FQ_L16L18) = 1 then
						getErrorMsg("J. Fattener/Finisher/Grower is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", G4FQ_L16L18) = 1 then
						getErrorMsg("J. Culled Breeder is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", G4FQ_L16L18) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;


	savepartial();
	
PROC G4L16L18_HEAD_M3

preproc
	//selection of ages
	if ischecked("A",G4FQ_L16L18) = 0 then 
		if curocc() = 1 then    
			move to G4L16L18_HEAD_M3(2); // punta culled breeder
		endif;		
	endif;

	if ischecked("B",G4FQ_L16L18) = 0 then 
		if curocc() = 2 then    
			move to G4L16L18_HEAD_M3(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",G4FQ_L16L18) = 0 then 
		if curocc() = 3 then    
			move to G4L19_DISPOSE_SELL_SLAUGHTER; 
		endif;
	endif;
 
 
postproc


	G4L16L18_HEAD_TOTAL_M3 = $(1) + $(2) + $(3);	
	
	if curocc() = 1 then
		if $(1) > (G2L04_TOTAL(1) + G3L11_SOWS_ACQUIRED(1) + G3L11_SOWS_ACQUIRED(2) + G3L11_SOWS_ACQUIRED(3)) then
			getErrorMsg("C. Fattener/Finisher/Grower sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (G2L04_TOTAL(1) + G3L11_SOWS_ACQUIRED(1) + G3L11_SOWS_ACQUIRED(2) + G3L11_SOWS_ACQUIRED(3)) then
			getErrorMsg("C. Culled Breeder sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (G2L04_TOTAL(1) + G3L11_SOWS_ACQUIRED(1) + G3L11_SOWS_ACQUIRED(2) + G3L11_SOWS_ACQUIRED(3)) then
			getErrorMsg("C. Other sold live for slaughter is greater than Total Supply");
		endif;

		if G4L16L18_HEAD_TOTAL_M3 > (G2L04_TOTAL(2) + G3L11_SOWS_ACQUIRED(1) + G3L11_SOWS_ACQUIRED(2) + G3L11_SOWS_ACQUIRED(3)) then
		
			getErrorMsg("C. Total sold live for slaughter is greater than Total Supply");
		endif;
	endif;
	
	
	if G4L16L18_HEAD_M1(curocc()) = notappl and G4L16L18_HEAD_M2(curocc()) = notappl and G4L16L18_HEAD_M3(curocc()) = notappl then
		if curocc() = 1 then
			if ischecked("A", G4FQ_L16L18) = 1 then
				getErrorMsg("D. Fattener/Finisher/Grower is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 2 then
			if ischecked("B", G4FQ_L16L18) = 1 then
				getErrorMsg("E. Culled Breeder is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 3 then
			if ischecked("C", G4FQ_L16L18) = 1 then
				getErrorMsg("F. Other ages is selected but no entry for M1, M2, and M3");
			endif;
		endif;
	endif;

	
	savepartial();
  
PROC G4L16L18_LIVEWEIGHT_M3

	if G4L16L18_HEAD_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,15,140,"C. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,50,260,"C. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,7,260,"C. Average liveweight is not within the the acceptable range.");
		endif;
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if G4L16L18_HEAD_M3(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of heads or average liveweight");
			endif;		
		endif;
	endif;
  
	savepartial();
	
PROC G4L16L18_FARMGATE_M3

	G4L16L18_HEAD_TOTAL_M3 = G4L16L18_HEAD_M3(1) + G4L16L18_HEAD_M3(2) + G4L16L18_HEAD_M3(3);

	if G4L16L18_HEAD_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,6000.00,30000.00,"C. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,6000.00,50000.00,"C. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,2000.00,30000.00,"C. Average Farmgate price is not within the the acceptable range.");
		endif;
		
		if G4L16L18_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif G4L16L18_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif G4L16L18_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if G4L16L18_HEAD_M3(curocc()) in 0,notappl then
			if G4L16L18_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif G4L16L18_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif G4L16L18_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	

			
		endif;
	endif;

	
	if G4L16L18_HEAD_M1(curocc()) in 0, notappl and G4L16L18_LIVEWEIGHT_M1(curocc()) in 0, notappl and G4L16L18_FARMGATE_M1(curocc()) in 0, notappl and
	   G4L16L18_HEAD_M2(curocc()) in 0, notappl and G4L16L18_LIVEWEIGHT_M2(curocc()) in 0, notappl and G4L16L18_FARMGATE_M2(curocc()) in 0, notappl and
	   G4L16L18_HEAD_M3(curocc()) in 0, notappl and G4L16L18_LIVEWEIGHT_M3(curocc()) in 0, notappl and G4L16L18_FARMGATE_M3(curocc()) in 0, notappl then
		if curocc() = 1 then
			if ischecked("A", G4FQ_L16L18) = 1 then
				getErrorMsg("J. Fattener/Finisher/Grower is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 2 then
			if ischecked("B", G4FQ_L16L18) = 1 then
				getErrorMsg("J. Culled Breeder is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 3 then
			if ischecked("C", G4FQ_L16L18) = 1 then
				getErrorMsg("J. Other ages is selected but no entry for M1, M2, and M3"); 
			endif;
		endif;
	endif;
	

	savepartial();
	
PROC G4L19_DISPOSE_SELL_SLAUGHTER
numeric showw1,showw2,showw3,showw;
	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 2 then
		if G4L16L18_HEAD_TOTAL_M1 >= 0 then
			showw1 = G4L16L18_HEAD_TOTAL_M1;
		else
			showw1 = 0;
		endif;
		if G4L16L18_HEAD_TOTAL_M2 >= 0 then
			showw2 = G4L16L18_HEAD_TOTAL_M2;
		else
			showw2 = 0;
		endif;
		if G4L16L18_HEAD_TOTAL_M3 >= 0 then
			showw3 = G4L16L18_HEAD_TOTAL_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to G4L24_TOTAL(1);
		else
			skip to G4L28SOLD_OTHER_PURPOSE;
		endif;
	endif;
	
	savepartial();
PROC G4L20_COMPARED_LYSQ

	if $ = 3 then
		skip to GL22_COMPARED_FG;
	endif;

	savepartial();
PROC G4L21_CHECKBOX_HIGH

preproc
	ask if G4L20_COMPARED_LYSQ = 1;

postproc

    if ischecked ("A",$) = 1 then G4L211_HIGH_DEMAND        =  1;endif;
	if ischecked ("B",$) = 1 then G4L212_NO_OUTBREAK        =  2;endif;
	if ischecked ("C",$) = 1 then G4L213_HIGH_PRICE_OFFER   =  3;endif;
	if ischecked ("D",$) = 1 then G4L214_FINANCIAL_NEED     =  4;endif;
	if ischecked ("E",$) = 1 then G4L215_AVLBLTY_PRICE      =  5;endif;
	if ischecked ("F",$) = 1 then G4L216_AVLBLTY_PIGLETS    =  6;endif;
	if ischecked ("G",$) = 1 then G4L217_GOV_INTRVN         =  7;endif;
	if ischecked ("H",$) = 1 then G4L2114_HIGH_REASON       =  14;endif;


	if poschar("ABCDEFGH", $) = 0 then
		getErrorMsg("No selected code!");
	endif;

	savepartial();
PROC G4L21_CHECKBOX_LOW

preproc
	ask if G4L20_COMPARED_LYSQ = 2;

postproc

    if ischecked ("A",$) = 1 then G4L218_LOWER_DEMAND      =  8;endif;
	if ischecked ("B",$) = 1 then G4L219_OUTBREAK          =  9;endif;
	if ischecked ("C",$) = 1 then G4L2110_LOW_PRICE_OFFER  = 10;endif;
	if ischecked ("D",$) = 1 then G4L2111_HIGH_COST        = 11;endif;
	if ischecked ("E",$) = 1 then G4L2112_UAVLBLTY_PIGLETS = 12;endif;
	if ischecked ("F",$) = 1 then G4L2113_GOV_RGLTN        = 13;endif;
	if ischecked ("G",$) = 1 then G4L2114_LOW_REASON       = 14;endif;


	if poschar("ABCDEFG", $) = 0 then
		getErrorMsg("No selected code!");
	ENDIF;

	savepartial();

PROC G4L2114_HIGH_SPECIFY

preproc
	ask if ischecked("H", G4L21_CHECKBOX_HIGH) and G4L20_COMPARED_LYSQ = 1;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified in Item LN21");
	endif;
	
	savepartial();
PROC G4L2114_LOW_SPECIFY

preproc
	ask if ischecked("G", G4L21_CHECKBOX_LOW) and G4L20_COMPARED_LYSQ = 2;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified in Item LN21");
	endif;
	
	savepartial();
PROC GL22_COMPARED_FG

postproc

	savepartial();
PROC GL23_REASON_FG

preproc
	ask if GL22_COMPARED_FG in 1:2;
	
postproc
numeric showw1,showw2,showw3,showw;
	if strip($) = "" then
		getErrorMsg("A. Indicate the reason for increase/decrease in farmgate price");
	endif;
	
		if G4L16L18_HEAD_TOTAL_M1 >= 0 then
			showw1 = G4L16L18_HEAD_TOTAL_M1;
		else
			showw1 = 0;
		endif;
		if G4L16L18_HEAD_TOTAL_M2 >= 0 then
			showw2 = G4L16L18_HEAD_TOTAL_M2;
		else
			showw2 = 0;
		endif;
		if G4L16L18_HEAD_TOTAL_M3 >= 0 then
			showw3 = G4L16L18_HEAD_TOTAL_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to G4L24_TOTAL(1);
		else
			skip to G4L28SOLD_OTHER_PURPOSE;
		endif;
	savepartial();
PROC G4L24_TOTAL

preproc
		   
	$(1) = G4L16L18_HEAD_TOTAL_M1;
	$(2) = G4L16L18_HEAD_TOTAL_M2;
	$(3) = G4L16L18_HEAD_TOTAL_M3;

postproc
	
  
	savepartial();
PROC G4L25_WIN_PRV



preproc
//G4L24_TOTAL(1)	= totDistination_Swine1;
//G4L24_TOTAL(2)	= totDistination_Swine2;
//G4L24_TOTAL(3)	= totDistination_Swine3;

// silas
if visualvalue(G4L16L18_HEAD_M1(1)) >= 0 or visualvalue(G4L16L18_HEAD_M1(2)) >= 0 or visualvalue(G4L16L18_HEAD_M1(3)) >= 0 then
	totDistination_SwineL161 = visualvalue(G4L16L18_HEAD_M1(1)) + visualvalue(G4L16L18_HEAD_M1(2)) + visualvalue(G4L16L18_HEAD_M1(3));			
	G4L24_TOTAL(1)	= totDistination_SwineL161;	
	//errmsg("test = %d",G4L24_TOTAL(1) );
	//errmsg("total areas (month 1) = %v",totDistination_SwineL161);
endif;
if visualvalue(G4L16L18_HEAD_M2(1)) >= 0 or visualvalue(G4L16L18_HEAD_M2(2)) >= 0 or visualvalue(G4L16L18_HEAD_M2(3)) >= 0 then
	totDistination_SwineL161 = visualvalue(G4L16L18_HEAD_M2(1)) + visualvalue(G4L16L18_HEAD_M2(2)) + visualvalue(G4L16L18_HEAD_M2(3));			
	G4L24_TOTAL(2)	= totDistination_SwineL161;	
	//errmsg("test = %d",G4L24_TOTAL(2) );
	//errmsg("total areas (month 2) = %v",totDistination_SwineL161);
endif;
if visualvalue(G4L16L18_HEAD_M3(1)) >= 0 or visualvalue(G4L16L18_HEAD_M3(2)) >= 0 or visualvalue(G4L16L18_HEAD_M3(3)) >= 0 then
	totDistination_SwineL161 = visualvalue(G4L16L18_HEAD_M3(1)) + visualvalue(G4L16L18_HEAD_M3(2)) + visualvalue(G4L16L18_HEAD_M3(3));			
	G4L24_TOTAL(3)	= totDistination_SwineL161;	
	//errmsg("test = %d",G4L24_TOTAL(3) );
	//errmsg("total areas (month 3) = %v",totDistination_SwineL161);
endif;



postproc

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;

	getOutOfRangeW($(curocc()),0,99999);
  
	savepartial();
PROC G4L26_OUT_PRV
postproc
if G4L26_OUT_PRV(curocc()) > G4L24_TOTAL(curocc()) then
	getErrorMsg("Sold live outside the province is greater than the Total Destination.");
else
	getOutOfRangeW($(curocc()),0,99999);
endif;

  
	savepartial();
PROC G4L27_UNK_PRV

preproc

	if curocc() = 1 then	
		if G4L16L18_HEAD_TOTAL_M1 >= 0 then
			tempG4L16L18_HEAD_TOTAL_M1M2M3 = G4L16L18_HEAD_TOTAL_M1;
		else
			tempG4L16L18_HEAD_TOTAL_M1M2M3 = 0;
		endif;
	elseif curocc() = 2 then
		if G4L16L18_HEAD_TOTAL_M2 >= 0 then
			tempG4L16L18_HEAD_TOTAL_M1M2M3 = G4L16L18_HEAD_TOTAL_M2;
		else
			tempG4L16L18_HEAD_TOTAL_M1M2M3 = 0;
		endif;
	else
		if curocc() = 3 then
			if G4L16L18_HEAD_TOTAL_M3 >= 0 then
				tempG4L16L18_HEAD_TOTAL_M1M2M3 = G4L16L18_HEAD_TOTAL_M3;
			else
				tempG4L16L18_HEAD_TOTAL_M1M2M3 = 0;
			endif;
		endif;
	endif;
	
	
postproc
	
	G4L24_TOTAL(curocc()) = G4L25_WIN_PRV(curocc()) + G4L26_OUT_PRV(curocc()) + G4L27_UNK_PRV(curocc());
	
	
	if G4L24_TOTAL(curocc()) <> tempG4L16L18_HEAD_TOTAL_M1M2M3 then
		getErrorMsg( maketext("B. The total number of animals in the different areas of destination [%d] is not equal to the total sold live for slaughter in Item LN16 [%d] for the month of %s",G4L24_TOTAL(curocc()),tempG4L16L18_HEAD_TOTAL_M1M2M3,E2_QtrMonth(curocc())) );
	endif;
	// getInvtSuppDisp(curocc(),E4L21_TOTAL(curocc()),xCaStartBornAcquireM1,xCaStartBornAcquireM2,xCaStartBornAcquireM3,F4L10_HEAD_TOTAL_M1 ,xCatdispositionM2)
	
	

  
	savepartial();
PROC G4L28SOLD_OTHER_PURPOSE
	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 2 then
		skip to G4L34_DEATHS;
	endif;

	savepartial();
PROC G4FQ_L29L33

	if poschar("ABCDE", $) = 0 then
		getErrorMsg("NO selected swine sold live/disposed for other purpose!");
	elseif poschar("E", $) > 0 and poschar("ABCD", $) > 0 then
		getErrorMsg("Selection not allowed! 'E - None' cannot be selected with other choices!");
	else
		if poschar("E", $) > 0 and poschar("ABCD", $) = 0 then
			skip to G4L34_DEATHS;
		endif;
	endif;
	
	
	savepartial();
PROC G4L30L33_HEAD_M1

preproc
	//selection of ages
	if ischecked("A",G4FQ_L29L33) = 0 then 
		if curocc() = 1 then    
			move to G4L30L33_HEAD_M1(2); // punta weanling
		endif;
	endif;

	if ischecked("B",G4FQ_L29L33) = 0 then 
		if curocc() = 2 then    
			move to G4L30L33_HEAD_M1(3);  // punta gilt
		endif;
	endif;

	if ischecked("C",G4FQ_L29L33) = 0 then 
		if curocc() = 3 then    
			move to G4L30L33_HEAD_M1(4); // punta others
		endif;
	endif;
	
	if ischecked("D",G4FQ_L29L33) = 0 then 
		if curocc() = 4 then    
			move to G4L30L33_HEAD_M2(1); 
		endif;
	endif;
 
 
postproc

 
	G4L29_HEAD_TOTAL_M1 = $(1) + $(2) + $(3);
  
	if curocc() = 1 then
		if $(1) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(1) + G3L11_SOWS_ACQUIRED(1)) then
			getErrorMsg("A. Fattener/Finisher/Grower sold live for other purpose is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(1) + G3L11_SOWS_ACQUIRED(1)) then
			getErrorMsg("A. Culled Breeder sold live for other purpose is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(1) + G3L11_SOWS_ACQUIRED(1)) then
			getErrorMsg("A. Other sold live for other purpose is greater than Total Supply");
		endif;

		if G4L16L18_HEAD_TOTAL_M1 > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(1) + G3L11_SOWS_ACQUIRED(1)) then
			getErrorMsg("A. Total sold live for other purpose is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  
PROC G4L30L33_FARMGATE_M1
	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	getOutOfRange($,2000.00,58000.00, "A. Average Farmgate price is not within the acceptable range.");
	
	if G4L30L33_HEAD_M1 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of heads but no average farmgate price.");
	endif;
	
	if $ > 0 and (G4L30L33_HEAD_M1 = notappl or G4L30L33_HEAD_M1 = 0) then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
	
	G4L29_FARMGATE_TOTAL_M1 = $(1) + $(2) + $(3);
	
	savepartial();
	
PROC G4L30L33_DESTINATION_M1

preproc
if G4L30L33_HEAD_M1(curocc()) in 0, notappl and G4L30L33_FARMGATE_M1(curocc()) in 0, notappl then
	skip to next;
endif;

postproc
	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if G4L30L33_HEAD_M1 > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("A. Piglet has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("A. Weanling has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("A. Gilt has entry but no specified destination was selected");
		elseif curocc() = 4 then
			getErrorMsg("A. Others has entry but no specified destination was selected");
		endif;
	endif;
  
	// F4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
  
	savepartial();
	

PROC G4L30L33_HEAD_M2

preproc
	//selection of ages
	if ischecked("A",G4FQ_L29L33) = 0 then 
		if curocc() = 1 then    
			move to G4L30L33_HEAD_M2(2); // punta weanling
		endif;
	endif;

	if ischecked("B",G4FQ_L29L33) = 0 then 
		if curocc() = 2 then    
			move to G4L30L33_HEAD_M2(3);  // punta gilt
		endif;
	endif;

	if ischecked("C",G4FQ_L29L33) = 0 then 
		if curocc() = 3 then    
			move to G4L30L33_HEAD_M2(4); // punta others
		endif;
	endif;
	
	if ischecked("D",G4FQ_L29L33) = 0 then 
		if curocc() = 4 then    
			move to G4L30L33_HEAD_M3(1); 
		endif;
	endif;
 
 
postproc

	 G4L29_HEAD_TOTAL_M2 = $(1) + $(2) + $(3);
  
	if curocc() = 1 then
		if $(1) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(2) + G3L11_SOWS_ACQUIRED(2)) then
			getErrorMsg("A. Fattener/Finisher/Grower sold live for other purpose is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(2) + G3L11_SOWS_ACQUIRED(2)) then
			getErrorMsg("A. Culled Breeder sold live for other purpose is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(2) + G3L11_SOWS_ACQUIRED(2)) then
			getErrorMsg("A. Other sold live for other purpose is greater than Total Supply");
		endif;

		if G4L16L18_HEAD_TOTAL_M1 > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(2) + G3L11_SOWS_ACQUIRED(2)) then
			getErrorMsg("A. Total sold live for other purpose is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  

PROC G4L30L33_FARMGATE_M2


	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	getOutOfRange($,2000.00,58000.00, "A. Average Farmgate price is not within the acceptable range.");
	
	if G4L30L33_HEAD_M2 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of heads but no average farmgate price.");
	endif;
	
	if $ > 0 and (G4L30L33_HEAD_M2 = notappl or G4L30L33_HEAD_M2 = 0) then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
	
	G4L29_FARMGATE_TOTAL_M2 = $(1) + $(2) + $(3);
	
	savepartial();
	

PROC G4L30L33_DESTINATION_M2
preproc
if G4L30L33_HEAD_M2(curocc()) in 0, notappl and G4L30L33_FARMGATE_M2(curocc()) in 0, notappl then
	skip to next;
endif;

postproc
	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if G4L30L33_HEAD_M2 > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("B. Piglet has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("B. Weanling has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("B. Gilt has entry but no specified destination was selected");
		elseif curocc() = 4 then
			getErrorMsg("B. Others has entry but no specified destination was selected");
		endif;
	endif;
  
	// F4L26_DESTINATION_TOTAL_M2 = $(1) + $(2) + $(3);
  
	savepartial();
PROC G4L30L33_HEAD_M3

preproc
	//selection of ages
	if ischecked("A",G4FQ_L29L33) = 0 then
		if curocc() = 1 then    
			move to G4L30L33_HEAD_M3(2); // punta weanling
		endif;
	endif;

	if ischecked("B",G4FQ_L29L33) = 0 then
		if curocc() = 2 then    
			move to G4L30L33_HEAD_M3(3);  // punta gilt
		endif;
	endif;

	if ischecked("C",G4FQ_L29L33) = 0 then
		if curocc() = 3 then    
			move to G4L30L33_HEAD_M3(4); // punta others
		endif;
	endif;
	
	if ischecked("D",G4FQ_L29L33) = 0 then
		if curocc() = 4 then    
			move to G4L34_DEATHS; 
		endif;
	endif;
 
 
postproc

	 G4L29_HEAD_TOTAL_M3 = $(1) + $(2) + $(3);
  
	if curocc() = 1 then
		if $(1) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(3) + G3L11_SOWS_ACQUIRED(3)) then
			getErrorMsg("A. Fattener/Finisher/Grower sold live for other purpose is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(3) + G3L11_SOWS_ACQUIRED(3)) then
			getErrorMsg("A. Culled Breeder sold live for other purpose is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(3) + G3L11_SOWS_ACQUIRED(3)) then
			getErrorMsg("A. Other sold live for other purpose is greater than Total Supply");
		endif;

		if G4L16L18_HEAD_TOTAL_M1 > (G2L04_TOTAL(1) + G3L10_AVE_LTTR_SIZE(3) + G3L11_SOWS_ACQUIRED(3)) then
			getErrorMsg("A. Total sold live for other purpose is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  


  
PROC G4L30L33_FARMGATE_M3


	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	getOutOfRange($,2000.00,58000.00, "A. Average Farmgate price is not within the acceptable range.");
	
	if G4L30L33_HEAD_M3 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of heads but no average farmgate price.");
	endif;
	
	if $ > 0 and (G4L30L33_HEAD_M3 = notappl or G4L30L33_HEAD_M3 = 0) then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
	
	G4L29_FARMGATE_TOTAL_M3 = $(1) + $(2) + $(3);
	
	savepartial();
	

PROC G4L30L33_DESTINATION_M3

preproc
if G4L30L33_HEAD_M3(curocc()) in 0, notappl and G4L30L33_FARMGATE_M3(curocc()) in 0, notappl then
	if G4L30L33_HEAD_M1(curocc()) in 0, notappl and G4L30L33_FARMGATE_M1(curocc()) in 0, notappl then
		if G4L30L33_HEAD_M2(curocc()) in 0, notappl and G4L30L33_FARMGATE_M2(curocc()) in 0, notappl then
			getErrorMsg("All months are empty. Please verify input.");
		endif;
	endif;
else
	skip to next;
endif;

postproc
	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if G4L30L33_HEAD_M3 > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("C. Piglet has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("C. Weanling has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("C. Gilt has entry but no specified destination was selected");
		elseif curocc() = 4 then
			getErrorMsg("C. Others has entry but no specified destination was selected");
		endif;
	endif;

  
	// F4L26_DESTINATION_TOTAL_M3 = $(1) + $(2) + $(3);
	
	if G4L30L33_HEAD_M1(curocc()) = notappl and G4L30L33_FARMGATE_M1(curocc()) = notappl and G4L30L33_DESTINATION_M1(curocc()) = notappl and
	   G4L30L33_HEAD_M2(curocc()) = notappl and G4L30L33_FARMGATE_M2(curocc()) = notappl and G4L30L33_DESTINATION_M2(curocc()) = notappl and
	   G4L30L33_HEAD_M3(curocc()) = notappl and G4L30L33_FARMGATE_M3(curocc()) = notappl and G4L30L33_DESTINATION_M3(curocc()) = notappl then
		if curocc() = 1 then
			if ischecked("A", G4FQ_L29L33) = 1 then
				getErrorMsg("D. Piglet is selected but no entries"); 
			endif;
		elseif curocc() = 2 then
			if ischecked("B", G4FQ_L29L33) = 1 then
				getErrorMsg("E. Weanling is selected but no entries"); 
			endif;
		elseif curocc() = 3 then
			if ischecked("C", G4FQ_L29L33) = 1 then
				getErrorMsg("F. Gilt is selected but no entries"); 
			endif;
		elseif curocc() = 4 then
			if ischecked("D", G4FQ_L29L33) = 1 then
				getErrorMsg("G. others is selected but missing entries in number of heads and average farmgate price"); 
			endif;
		endif;
	endif;

  
	savepartial();
	
PROC G4L34_DEATHS

	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 2 then
		skip to REMARKS;//H1L01_TYPE_OF_OPERATION;
	endif;

	savepartial();
	
	
PROC G4FQ_L35L37

preproc
	ask if G4L34_DEATHS = 1;

postproc
	if poschar("ABC", $) = 0 then
		getErrorMsg("C. G.4.3 is code 1 but causes of death is not selected!");
	endif;
	
	savepartial();
PROC GA_ASF_HC

preproc 
	ask if ischecked("A",G4FQ_L35L37);

postproc

	if $(curocc()) = notappl then   
		getErrorMsg("African swine fever is selected but no entries!");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
   if curocc() = 1 then  G5L35L37_HEADS_M1(1) = $(curocc()); 
	elseif curocc() = 2 then  G5L35L37_HEADS_M2(1) = $(curocc()); 
	elseif curocc() = 3 then  G5L35L37_HEADS_M3(1) = $(curocc());
	endif;	
	
	savepartial();
PROC GD_SWINE_DISEASE

preproc
	ask if ischecked("B",G4FQ_L35L37);
	
	string xDa, xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq ;
	numeric cc = curocc();
	
postproc

	if soccurs(RTG4_L35L37) = 0 then INSERT(RTG4_L35L37(1)); endif;
	if soccurs(RTG4_L35L37) = 1 then INSERT(RTG4_L35L37(2)); endif;

	if ischecked("A",$ ) = 1 then xDa = "Actinobacillosis "; 						endif;
	if ischecked("B",$ ) = 1 then xDb = "Anemia ";  								endif;
	if ischecked("C",$ ) = 1 then xDc = "Ascaris ";  					    		endif;
	if ischecked("D",$ ) = 1 then xDd = "Brucellosis (Bacterial) ";               endif;
	if ischecked("E",$ ) = 1 then xDe = "Coccidiosis "; 							endif;
	if ischecked("F",$ ) = 1 then xDf = "Colds And Fever ";  						endif;
	if ischecked("G",$ ) = 1 then xDg = "Cystitis/Pyelonephritis "; 				endif;
	if ischecked("H",$ ) = 1 then xDh = "Diarrhea "; 								endif;
	if ischecked("I",$ ) = 1 then xDi = "Enteritis (Bacterial/Viral) ";  			endif;
	if ischecked("J",$ ) = 1 then xDj = " Fever ";  								endif;
	if ischecked("K",$ ) = 1 then xDk = "Foot And Mouth Disease (Viral)";  		endif;
	if ischecked("L",$ ) = 1 then xDl = " Leptospirosis (Bacterial) ";  			endif;
	if ischecked("M",$ ) = 1 then xDm = "Pneumonia (Bacterial/Viral/Fungal)  ";  	endif;
	if ischecked("N",$ ) = 1 then xDn = "Scouring";  								endif;
	if ischecked("O",$ ) = 1 then xDo = "Skin Problem ";  						endif;
	if ischecked("P",$ ) = 1 then xDp = "Swine Cholera/CSF (Bacterial) ";  		endif;
	if ischecked("Q",$ ) = 1 then xDq = GDQ_SPECIFY(cc); 							endif;

 
	if curocc() = 1 then  G5L35L37_SPECIFY_M1(2) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq ); 
	elseif curocc() = 2 then  G5L35L37_SPECIFY_M2(2) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq ); 
	elseif curocc() = 3 then  G5L35L37_SPECIFY_M3(2) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq ); 
	endif;

if curocc() = 3 then
	if poschar("ABCDEFGHIJKLMNOPQ", GD_SWINE_DISEASE(1)) in 0, notappl then
		if poschar("ABCDEFGHIJKLMNOPQ", GD_SWINE_DISEASE(2)) in 0, notappl then
			if poschar("ABCDEFGHIJKLMNOPQ", GD_SWINE_DISEASE(3)) in 0, notappl then
				getErrorMsg(" Please specify the cause of death due to other disease.");
			endif;
		endif;
	endif;
endif;


	savepartial();
PROC GDA_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("A",GD_SWINE_DISEASE);

postproc
	if $(curocc()) in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC GDB_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("B",GD_SWINE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDC_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("C",GD_SWINE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDD_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("D",GD_SWINE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
	
	// if curocc() = 3 then
		// if ischecked("B", G4FQ_L35L37) then
			// if GDD_HC > 0 then
				// skip to GD_SWINE_DISEASE;
			// else
				// errmsg("selected item D but no entry in number of heads");
				// reenter
			// endif;
		// endif;
	// endif;
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDE_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("E",GD_SWINE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDF_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("F",GD_SWINE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDG_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("G",GD_SWINE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDH_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("H",GD_SWINE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDI_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("I",GD_SWINE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDJ_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("J",GD_SWINE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDK_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("K",GD_SWINE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDL_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("L",GD_SWINE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDM_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("M",GD_SWINE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDN_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("N",GD_SWINE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDO_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("O",GD_SWINE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDP_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("P",GD_SWINE_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDQ_SPECIFY

preproc
	ask if ischecked("B",G4FQ_L35L37) and ischecked("Q",GD_SWINE_DISEASE);
	
postproc

	if strip($) = "" then
		getErrorMsg("C. Please specify the cause of death due to other disease.");
	endif;
	
	savepartial();
	
	
	// if curocc() = 3 then
		// if $ <> "" then
			// skip to REMARKS
		// endif;
	// endif;
PROC GDQ_HC

preproc 
	ask if ischecked("B",G4FQ_L35L37) and ischecked("Q",GD_SWINE_DISEASE);

postproc
	if $(curocc()) > 0 and strip(GDQ_SPECIFY (curocc())) = ""    then
		getErrorMsg("There is no specified disease/s of deaths but with entries in number of deaths");
	elseif not $(curocc()) > 0 and not strip(GDQ_SPECIFY (curocc())) = ""    then
		getErrorMsg("There is entry in number of deaths but no specified disease/s."); 
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
  
  
	savepartial();

	// if curocc() = 3 then
		// if $ > 0 then
			// skip to REMARKS
		// endif;
	// endif;
PROC GCA_SPECIFY

preproc
	ask if ischecked("C",G4FQ_L35L37);

postproc



    if curocc() = 1 then  G5L35L37_SPECIFY_M1(3) = $(curocc()); 
		elseif curocc() = 2 then  G5L35L37_SPECIFY_M2(3) = $(curocc()); 
		elseif curocc() = 3 then  G5L35L37_SPECIFY_M3(3) = $(curocc());
	endif;
	
	
	savepartial();
	
	
PROC GCA_SP_HC


preproc 
	ask if ischecked("C",G4FQ_L35L37) and strip(GCA_SPECIFY) <> "";

postproc
  if  $(curocc()) > 0 and strip(GCA_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	elseif not strip(GCA_SPECIFY(curocc())) = "" and not GCA_SP_HC(curocc()) > 0 then
		getErrorMsg("With entry in the reason for death but no corresponding number of deaths.");
	else
		getOutOfRange($,0,9999, "B. Verify inputed values.");
	endif;
  

    if curocc() = 1 then  G5L35L37_HEADS_M1(3) = $(curocc()); 
	elseif curocc() = 2 then  G5L35L37_HEADS_M2(3) = $(curocc()); 
	elseif curocc() = 3 then  G5L35L37_HEADS_M3(3) = $(curocc());
	endif;	
	
	savepartial();
PROC GCB_SPECIFY
preproc
	ask if ischecked("C",G4FQ_L35L37);
postproc

 

    if curocc() = 1 then  G5L35L37_SPECIFY_M1(3) = $(curocc()); 
		elseif curocc() = 2 then  G5L35L37_SPECIFY_M2(3) = $(curocc()); 
		elseif curocc() = 3 then  G5L35L37_SPECIFY_M3(3) = $(curocc());
	endif;
	
	
	savepartial();
	
PROC GCB_SP_HC
preproc 
	ask if ischecked("C",G4FQ_L35L37) and strip(GCB_SPECIFY) <> "";
postproc
if  $(curocc()) > 0 and strip(GCB_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	elseif not strip(GCB_SPECIFY(curocc())) = "" and not GCB_SP_HC(curocc()) > 0 then
		getErrorMsg("With entry in the reason for death but no corresponding number of deaths.");
	else
		getOutOfRange($,0,9999, "B. Verify inputed values.");
	endif;
  

    if curocc() = 1 then  G5L35L37_HEADS_M1(3) = $(curocc()); 
	elseif curocc() = 2 then  G5L35L37_HEADS_M2(3) = $(curocc()); 
	elseif curocc() = 3 then  G5L35L37_HEADS_M3(3) = $(curocc());
	endif;	
	
	if  $(curocc()) > 0 and strip(GCB_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	endif;
	
	savepartial();
PROC GCC_SPECIFY
preproc
	ask if ischecked("C",G4FQ_L35L37);
postproc

 

    if curocc() = 1 then  G5L35L37_SPECIFY_M1(3) = $(curocc()); 
		elseif curocc() = 2 then  G5L35L37_SPECIFY_M2(3) = $(curocc()); 
		elseif curocc() = 3 then  G5L35L37_SPECIFY_M3(3) = $(curocc());
	endif;
	
	if curocc() = 3 then    	
		if  strip(GCA_SPECIFY(1)) = "" and strip(GCA_SPECIFY(2)) = "" and strip(GCA_SPECIFY(3)) = "" and
			strip(GCB_SPECIFY(1)) = "" and strip(GCB_SPECIFY(2)) = "" and strip(GCB_SPECIFY(3)) = "" and 
			strip($(1)) = "" and strip($(2)) = "" and strip($(3)) = "" then
				getErrorMsg("D. Please specify the cause of death due to other causes.");
		endif;
	endif;
	savepartial();
	

PROC GCC_SP_HC
preproc 
	ask if ischecked("C",G4FQ_L35L37) and strip(GCC_SPECIFY) <> "";
postproc
 if  $(curocc()) > 0 and strip(GCC_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	elseif not strip(GCC_SPECIFY(curocc())) = "" and not GCC_SP_HC(curocc()) > 0 then
		getErrorMsg("With entry in the reason for death but no corresponding number of deaths.");
	else
			getOutOfRange($,0,9999, "B. Verify inputed values.");
	endif;
  

    if curocc() = 1 then  G5L35L37_HEADS_M1(3) = $(curocc()); 
	elseif curocc() = 2 then  G5L35L37_HEADS_M2(3) = $(curocc()); 
	elseif curocc() = 3 then  G5L35L37_HEADS_M3(3) = $(curocc());
	endif;	
	
	if  $(curocc()) > 0 and strip(GCC_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	endif;
	
	savepartial();
PROC GROUP004_GOAT
preproc
if D2L12_GOAT = 4 then
	ok = 1
else
	skip to REMARKS;
endif;
PROC H1L01_TYPE_OF_OPERATION
postproc
	if not $ in 1:7 then
		getErrorMsg("A. No selected type of operation. Please select type of operation.");
	endif;
	
	savepartial();
PROC H2L02_TOTAL

postproc
if CHANGE_FARM_CAP > 0 then
	if H2L02_TOTAL(2) > CHANGE_FARM_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;

else
	if H2L02_TOTAL(2) > MAX_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;
endif;


	savepartial();
PROC H2L03_BUCK


	if $(curocc()) > H2L02_TOTAL(curocc())  then
		getErrorMsg("A. Inventory of Buck is greater than the total inventory ");
	endif;
	
	savepartial();
PROC H2L04_DOE

	if $(curocc()) > H2L02_TOTAL(curocc())  then
		getErrorMsg("B. Inventory of Doe is greater than the total inventory.");
	endif;
	
	savepartial();
PROC H2L05_OTHER_AGES

	numeric xE2TotInventory = H2L03_BUCK(curocc()) + H2L04_DOE(curocc()) + H2L05_OTHER_AGES(curocc());

	if $(curocc()) > H2L02_TOTAL(curocc())  then
		getErrorMsg("A. Inventory of Other Ages is greater than the total inventory.");
	endif;
	
	if xE2TotInventory <> H2L02_TOTAL then
		getErrorMsg("The total inventory of goat is not equal to the breakdown.");
	endif;
	
	savepartial();
	
PROC H3L06_DOES_BIRTH
	 getOutOfRangeW($,0,999999);
	savepartial();
PROC H3L07_KIDS_BORN

	if $(curocc()) > 0 and H3L06_DOES_BIRTH(curocc()) = 0 then
		getErrorMsg("A. With entry in born live but zero in doe that gave birth.");
	endif;
	
	if $(curocc()) > (H3L06_DOES_BIRTH(curocc()) * 3) then
		getWarningMsg("B. Born live is greater than the acceptable range. A doe that gave birth may have at most 3 kids in one kidding.");
	endif;
	
	
	// 10-17-2023 silas
	if H3L06_DOES_BIRTH(curocc()) > 0 then
		if H3L07_KIDS_BORN(curocc()) in 0, notappl then
			errmsg("Warning! zero in born live but with entry in cows that gave birth. Please check")
			select("Update number who gave birth",H3L06_DOES_BIRTH(curocc()), "Update born alive",H3L07_KIDS_BORN(curocc()), "Proceed", next);
		endif;
	endif;

	savepartial();
PROC H3L08_GOATS_ACQUIRED

numeric total_birth,beg_invt,end_invt,sum_gaveB;
	total_birth = 0;
	beg_invt    = 0;
	end_invt    = 0;
	sum_gaveB   = 0;

	
	total_birth = $(1) + $(2) + $(3);
               // caracow                                             other                    acquired
	beg_invt  = visualvalue(H2L04_DOE(1))        + visualvalue(H2L05_OTHER_AGES(1))     +  H3L08_GOATS_ACQUIRED(1);
	end_invt  = visualvalue(H2L04_DOE(2))        + visualvalue(H2L05_OTHER_AGES(2))     +  H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2) + H3L08_GOATS_ACQUIRED(3) ;
	sum_gaveB = visualvalue(H3L06_DOES_BIRTH(1)) + visualvalue(H3L06_DOES_BIRTH(2)) +  visualvalue(H3L06_DOES_BIRTH(3));
	
	if curocc() = 1 then
		if visualvalue(H3L06_DOES_BIRTH(1)) > beg_invt   then
			getErrorMsg("B. does that gavebirth is > beginning inventory of doe + beginning inventory of other ages + acquired");
		endif;
	elseif curocc() = 2 then
		if visualvalue(H3L06_DOES_BIRTH(2)) > ((beg_invt + ($(2)) - visualvalue(H3L06_DOES_BIRTH(1))))  then
			 getErrorMsg("C. does that gavebirth is > beginning inventory of doe + beginning inventory of other ages + acquired");
		endif;
	elseif curocc() = 3 then
		if visualvalue(H3L06_DOES_BIRTH(3)) > (end_invt  - (visualvalue(H3L06_DOES_BIRTH(1)) + visualvalue(H3L06_DOES_BIRTH(2))))  then
			getErrorMsg("D.  does that  gave birth is > ending inventory of doe + ending inventory of other ages + acquired");
		endif;
		
		if sum_gaveB > (beg_invt + $(2) + $(3) + H2L05_OTHER_AGES(2)) then
		  getErrorMsg("E. Total number of doe that gave birth during the quarter exceeds the beginning inventory of doe and other ages, and acquired. ");
		endif;
	endif;





	
	// if H3L06_DOES_BIRTH(curocc()) > 0 then
		// if H3L07_KIDS_BORN(curocc()) in 0, notappl and H3L08_GOATS_ACQUIRED(curocc()) in 0, notappl then
			// errmsg("zero in born live and goats aquired but with entry in cows that gave birth. Please check")
			// select("Update number who gave birth",H3L06_DOES_BIRTH(curocc()), "Update born alive",H3L07_KIDS_BORN(curocc()), "Update number of goats aquired",H3L08_GOATS_ACQUIRED(curocc()));
		// endif;
	// endif;
	
	
	// end




	savepartial();

PROC H4L09_ANY_SOLD_SLAUGHTER
	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	 if $ = 2 then
			skip to H4L25_SOLD_OTHER_PURPOSE;
	endif;
	savepartial();
PROC H4FQ_L10L12

	if poschar("ABCD", $) = 0 then
		getErrorMsg("NO selected ages of goat slaughtered in the household farm!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			skip to H4FQ_L13L15;
		endif;
	endif;
	
	savepartial();
	
PROC H4L10L12_HEAD_M1

preproc
	//selection of ages
	if ischecked("A",H4FQ_L10L12) = 0 then 
		if curocc() = 1 then    
			move to H4L10L12_HEAD_M1(2); // punta doe
		endif;		
	endif;

	if ischecked("B",H4FQ_L10L12) = 0 then 
		if curocc() = 2 then    
			move to H4L10L12_HEAD_M1(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",H4FQ_L10L12) = 0 then 
		if curocc() = 3 then    
			move to H4L10L12_HEAD_M2(1); 
		endif;
	endif;
 
 
postproc


	xblockE1_m1 = $(1) + $(2) + $(3);
	H4L10L12_HEAD_TOTAL_M1 = xblockE1_m1;	 
	
	
	if curocc() = 1 then
		if $(1) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Buck slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Doe slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Other Ages slaughtered on establishment is greater than Total Supply");
		endif;

		if H4L10L12_HEAD_TOTAL_M1 > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Total slaughtered on establishment is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  
PROC H4L10L12_LIVEWEIGHT_M1

	if H4L10L12_HEAD_M1(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,15,50,"A. Average liveweight is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,5,50,"A. Average liveweight is not within the acceptable range.");
		endif;
		
		if $(curocc()) = notappl then
			getErrorMsg("D. Please verify the inputted code in either number of heads or average liveweight");
		endif;
	else
		if H4L10L12_HEAD_M1(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Please verify the inputted code in either number of heads or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", H4FQ_L10L12) = 1 then
						getErrorMsg("F. Buck is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", H4FQ_L10L12) = 1 then
						getErrorMsg("F. Doe is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", H4FQ_L10L12) = 1 then
						getErrorMsg("F. Other ages is selected but missing entries in number of heads and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;
	
	savepartial();

	
		
PROC H4L10L12_FARMGATE_M1

	if H4L10L12_HEAD_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,1000.00,10000.00,"A. Average Farmgate is not within the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,1500.00,12000.00,"A. Average Farmgate is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,700.00,8000.00,"A. Average Farmgate is not within the acceptable range.");
		endif;
		
		if H4L10L12_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
		elseif H4L10L12_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
		elseif H4L10L12_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if H4L10L12_HEAD_M1(curocc()) in 0, notappl then
			if H4L10L12_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			elseif H4L10L12_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			elseif H4L10L12_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			endif;	
				
			if H4L10L12_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", H4FQ_L10L12) = 1 then
						getErrorMsg("J. Buck is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", H4FQ_L10L12) = 1 then
						getErrorMsg("J. Doe is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", H4FQ_L10L12) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;

	savepartial();
	
PROC H4L10L12_HEAD_M2

preproc
	//selection of ages
	if ischecked("A",H4FQ_L10L12) = 0 then 
		if curocc() = 1 then    
			move to H4L10L12_HEAD_M2(2); // punta doe
		endif;		
	endif;

	if ischecked("B",H4FQ_L10L12) = 0 then 
		if curocc() = 2 then    
			move to H4L10L12_HEAD_M2(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",H4FQ_L10L12) = 0 then 
		if curocc() = 3 then    
			move to H4L10L12_HEAD_M3(1); 
		endif;
	endif;
 
 
postproc


	xblockE1_m2 = $(1) + $(2) + $(3);
	H4L10L12_HEAD_TOTAL_M2 = xblockE1_m2;
	
	
	if curocc() = 1 then
		if $(1) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("B. Buck slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("B. Doe slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("B. Other Ages slaughtered on establishment is greater than Total Supply");
		endif;

		if H4L10L12_HEAD_TOTAL_M2 > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("B. Total slaughtered on establishment is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  
PROC H4L10L12_LIVEWEIGHT_M2

	if H4L10L12_HEAD_M2(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,15,50,"B. Average liveweight is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,5,50,"B. Average liveweight is not within the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Please verify the inputted code in either number of heads or average liveweight");
		endif;
	else
		if H4L10L12_HEAD_M2(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Please verify the inputted code in either number of heads or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", H4FQ_L10L12) = 1 then
						getErrorMsg("F. Buck is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", H4FQ_L10L12) = 1 then
						getErrorMsg("F. Doe is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", H4FQ_L10L12) = 1 then
						getErrorMsg("F. Other ages is selected but missing entries in number of heads and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;
	
	savepartial();

	
PROC H4L10L12_FARMGATE_M2

	if H4L10L12_HEAD_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,1000.00,10000.00,"B. Average Farmgate is not within the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,1500.00,12000.00,"B. Average Farmgate is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,700.00,8000.00,"B. Average Farmgate is not within the acceptable range.");
		endif;
		
		if H4L10L12_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
		elseif H4L10L12_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
		elseif H4L10L12_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if H4L10L12_HEAD_M2(curocc()) in 0, notappl then
			if H4L10L12_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			elseif H4L10L12_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			elseif H4L10L12_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Please verify the inputted code in either number of heads, average liveweight and/or average farmgate price");
			endif;	
				
			if H4L10L12_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", H4FQ_L10L12) = 1 then
						getErrorMsg("J. Buck is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", H4FQ_L10L12) = 1 then
						getErrorMsg("J. Doe is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", H4FQ_L10L12) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;

	savepartial();
	
PROC H4L10L12_HEAD_M3

preproc
	//selection of ages
	if ischecked("A",H4FQ_L10L12) = 0 then 
		if curocc() = 1 then    
			move to H4L10L12_HEAD_M3(2); // punta doe
		endif;		
	endif;

	if ischecked("B",H4FQ_L10L12) = 0 then 
		if curocc() = 2 then    
			move to H4L10L12_HEAD_M3(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",H4FQ_L10L12) = 0 then 
		if curocc() = 3 then    
			move to H4FQ_L13L15; 
		endif;
	endif;
 
 
postproc


	xblockE1_m3 = $(1) + $(2) + $(3);
	H4L10L12_HEAD_TOTAL_M3 = xblockE1_m3;
	
	
	if curocc() = 1 then
		if $(1) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2) + H3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("C. Buck slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2) + H3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("C. Doe slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2) + H3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("C. Other Ages slaughtered on establishment is greater than Total Supply");
		endif;

		if H4L10L12_HEAD_TOTAL_M3 > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2) + H3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("C. Total slaughtered on establishment is greater than Total Supply");
		endif;
	endif;
	
	
	if H4L10L12_HEAD_M1(curocc()) = notappl and H4L10L12_HEAD_M2(curocc()) = notappl and H4L10L12_HEAD_M3(curocc()) = notappl then
		if curocc() = 1 then
			if ischecked("A", H4FQ_L10L12) = 1 then
				getErrorMsg("D. Buck is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 2 then
			if ischecked("B", H4FQ_L10L12) = 1 then
				getErrorMsg("E. Doe is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 3 then
			if ischecked("C", H4FQ_L10L12) = 1 then
				getErrorMsg("F. Other ages is selected but no entry for M1, M2, and M3");
			endif;
		endif;
	endif;
	
	
	savepartial();
  
PROC H4L10L12_LIVEWEIGHT_M3

	if H4L10L12_HEAD_M3(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,15,50,"C. Average liveweight is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,5,50,"C. Average liveweight is not within the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Please verify the inputted code in either number of heads or average liveweight");
		endif;
	else
		if H4L10L12_HEAD_M3(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Please verify the inputted code in either number of heads or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", H4FQ_L10L12) = 1 then
						getErrorMsg("F. Buck is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", H4FQ_L10L12) = 1 then
						getErrorMsg("F. Doe is selected but missing entries in number of heads and average liveweight"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", H4FQ_L10L12) = 1 then
						getErrorMsg("F. Other ages is selected but missing entries in number of heads and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;
	
	savepartial();

	
PROC H4L10L12_FARMGATE_M3


	if H4L10L12_HEAD_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,1000.00,10000.00,"C. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,1500.00,12000.00,"C. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,700.00,8000.00,"C. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if H4L10L12_LIVEWEIGHT_M3(curocc()) = notappl and $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif H4L10L12_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) = notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif H4L10L12_LIVEWEIGHT_M3(curocc()) = notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if H4L10L12_HEAD_M3(curocc()) = notappl then
			if H4L10L12_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) = notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif H4L10L12_LIVEWEIGHT_M3(curocc()) = notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif H4L10L12_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
				
			
		endif;
	endif;
	
	if H4L10L12_HEAD_M1(curocc()) in 0, notappl and H4L10L12_LIVEWEIGHT_M1(curocc()) in 0, notappl and H4L10L12_FARMGATE_M1(curocc()) in 0, notappl and
	   H4L10L12_HEAD_M2(curocc()) in 0, notappl and H4L10L12_LIVEWEIGHT_M2(curocc()) in 0, notappl and H4L10L12_FARMGATE_M2(curocc()) in 0, notappl and
	   H4L10L12_HEAD_M3(curocc()) in 0, notappl and H4L10L12_LIVEWEIGHT_M3(curocc()) in 0, notappl and H4L10L12_FARMGATE_M3(curocc()) in 0, notappl then
		if curocc() = 1 then
			if ischecked("A", H4FQ_L10L12) = 1 then
				getErrorMsg("J. Buck is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 2 then
			if ischecked("B", H4FQ_L10L12) = 1 then
				getErrorMsg("J. Doe is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 3 then
			if ischecked("C", H4FQ_L10L12) = 1 then
				getErrorMsg("J. Other ages is selected but no entry for M1, M2, and M3"); 
			endif;
		endif;
	endif;
	


	savepartial();
	
PROC H4FQ_L13L15
	if  poschar("D", $) > 0 and poschar("D",H4FQ_L10L12) > 0 and H4L09_ANY_SOLD_SLAUGHTER = 1 then
	    getErrorMsg("Dispose/sell is code 1-“Yes” but slaughtered in the HH/Farm and sold live for slaughter is code 4-“None”. ");
	endif;
	
	if poschar("ABCD", $) = 0 then
		getErrorMsg("NO selected goat sold live for slaughter!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			skip to H4L16_DISPOSE_SELL_SLAUGHTER;
		endif;
	endif;
	
	
savepartial();
PROC H4L13L15_HEAD_M1

preproc
	//selection of ages
	if ischecked("A",H4FQ_L13L15) = 0 then 
		if curocc() = 1 then    
			move to H4L13L15_HEAD_M1(2); // punta doe
		endif;		
	endif;

	if ischecked("B",H4FQ_L13L15) = 0 then 
		if curocc() = 2 then    
			move to H4L13L15_HEAD_M1(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",H4FQ_L13L15) = 0 then 
		if curocc() = 3 then    
			move to H4L13L15_HEAD_M2(1); 
		endif;
	endif;
 
 
postproc


	xblockE2_m1 = $(1) + $(2) + $(3);
	H4L13L15_HEAD_TOTAL_M1 = xblockE2_m1;
	
	if curocc() = 1 then
		if $(1) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Buck sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Doe sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Other sold live for slaughter is greater than Total Supply");
		endif;

		if H4L13L15_HEAD_TOTAL_M1 > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Total sold live for slaughter is greater than Total Supply");
		endif;
	endif;
	
		// 10-17-2023 silas
		//if curocc() = 3 then
			if visualvalue(H4L13L15_HEAD_M1(1)) >= 0 or visualvalue(H4L13L15_HEAD_M1(2)) >= 0 or visualvalue(H4L13L15_HEAD_M1(3)) >= 0 then
				numeric totDistination_Goat1 = visualvalue(H4L13L15_HEAD_M1(1)) + visualvalue(H4L13L15_HEAD_M1(2)) + visualvalue(H4L13L15_HEAD_M1(3));			
				H4L21_TOTAL(1)	= totDistination_Goat1;						
				//errmsg("total areas (col-1) = %v",totDistination_Goat1);
			endif;
		//endif;
		//end
	
		
	
	savepartial();
  
PROC H4L13L15_LIVEWEIGHT_M1

	if H4L13L15_HEAD_M1(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,15,50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,5,50,"A. Average liveweight is not within the the acceptable range.");
		endif;
				if $(curocc()) in 0,notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if H4L13L15_HEAD_M1(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of heads or average liveweight");
			endif;		
		endif;
	endif;
  
	savepartial();
	
PROC H4L13L15_FARMGATE_M1

		H4L13L15_HEAD_TOTAL_M1 = H4L13L15_HEAD_M1(1) + H4L13L15_HEAD_M1(2) + H4L13L15_HEAD_M1(3);

	if H4L13L15_HEAD_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,1000.00,10000.00,"A. Average Farmgate price is not within the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,1500.00,12000.00,"A. Average Farmgate price is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,700.00,8000.00,"A. Average Farmgate price is not within the acceptable range.");
		endif;
		
		if H4L13L15_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif H4L13L15_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif H4L13L15_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if H4L13L15_HEAD_M1(curocc()) in 0, notappl then
			if H4L13L15_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif H4L13L15_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif H4L13L15_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
			
			if H4L13L15_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", H4FQ_L13L15) = 1 then
						getErrorMsg("J. Buck is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", H4FQ_L13L15) = 1 then
						getErrorMsg("J. Doe is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", H4FQ_L13L15) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;


	savepartial();
	
PROC H4L13L15_HEAD_M2

preproc
	//selection of ages
	if ischecked("A",H4FQ_L13L15) = 0 then 
		if curocc() = 1 then    
			move to H4L13L15_HEAD_M2(2); // punta doe
		endif;		
	endif;

	if ischecked("B",H4FQ_L13L15) = 0 then 
		if curocc() = 2 then    
			move to H4L13L15_HEAD_M2(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",H4FQ_L13L15) = 0 then 
		if curocc() = 3 then    
			move to H4L13L15_HEAD_M3(1); 
		endif;
	endif;
 
 
postproc


	xblockE2_m2 = $(1) + $(2) + $(3);
	H4L13L15_HEAD_TOTAL_M2 = xblockE2_m2;
	
	if curocc() = 1 then
		if $(1) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("B. Buck sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("B. Doe sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("B. Other sold live for slaughter is greater than Total Supply");
		endif;

		if H4L13L15_HEAD_TOTAL_M2 > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("B. Total sold live for slaughter is greater than Total Supply");
		endif;
	endif;
	
	
		// 10-17-2023 silas
		//if curocc() = 3 then
			if visualvalue(H4L13L15_HEAD_M2(1)) >= 0 or visualvalue(H4L13L15_HEAD_M2(2)) >= 0 or visualvalue(H4L13L15_HEAD_M2(3)) >= 0 then
				numeric totDistination_Goat2 = visualvalue(H4L13L15_HEAD_M2(1)) + visualvalue(H4L13L15_HEAD_M2(2)) + visualvalue(H4L13L15_HEAD_M2(3));			
				H4L21_TOTAL(2)	= totDistination_Goat2;						
				//errmsg("total areas (col-1) = %v",totDistination_Goat2);
			endif;
		//endif;
		//end
	
	savepartial();
  
PROC H4L13L15_LIVEWEIGHT_M2

	if H4L13L15_HEAD_M2(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,15,50,"B. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,5,50,"B. Average liveweight is not within the the acceptable range.");
		endif;
		if $(curocc()) in 0,notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if H4L13L15_HEAD_M1(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of heads or average liveweight");
			endif;		
		endif;
	endif;
	savepartial();
	
PROC H4L13L15_FARMGATE_M2


	H4L13L15_HEAD_TOTAL_M2 = H4L13L15_HEAD_M2(1) + H4L13L15_HEAD_M2(2) + H4L13L15_HEAD_M2(3);

	// 10-17-2023
	if H4L13L15_HEAD_M2(curocc()) > 0 then
		if curocc() = 1 then //buck
			getOutOfRange($,2000.00,10000.00,"B. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 2 then  // doe
			getOutOfRange($,3000.00,20000.00,"B. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 3 then  // other
			getOutOfRange($,1500.00,15000.00,"B. Average Farmgate price is not within the the acceptable range.");
		endif;
		
		if H4L13L15_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif H4L13L15_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif H4L13L15_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if H4L13L15_HEAD_M2(curocc()) in 0, notappl then
			if H4L13L15_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif H4L13L15_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif H4L13L15_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
			
			if H4L13L15_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", H4FQ_L13L15) = 1 then
						getErrorMsg("J. Buck is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", H4FQ_L13L15) = 1 then
						getErrorMsg("J. Doe is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", H4FQ_L13L15) = 1 then
						getErrorMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;
	//end




	savepartial();
	
PROC H4L13L15_HEAD_M3

preproc
	//selection of ages
	if ischecked("A",H4FQ_L13L15) = 0 then 
		if curocc() = 1 then    
			move to H4L13L15_HEAD_M3(2); // punta doe
		endif;		
	endif;

	if ischecked("B",H4FQ_L13L15) = 0 then 
		if curocc() = 2 then    
			move to H4L13L15_HEAD_M3(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",H4FQ_L13L15) = 0 then 
		if curocc() = 3 then    
			move to H4L16_DISPOSE_SELL_SLAUGHTER; 
		endif;
	endif;
 
 
postproc


	xblockE2_m3 = $(1) + $(2) + $(3);
	H4L13L15_HEAD_TOTAL_M3 = xblockE2_m3;
	
	if curocc() = 1 then
		if $(1) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2) + H3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("C. Buck sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2) + H3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("C. Doe sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2) + H3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("C. Other sold live for slaughter is greater than Total Supply");
		endif;

		if H4L13L15_HEAD_TOTAL_M3 > (H2L02_TOTAL(1) + H3L08_GOATS_ACQUIRED(1) + H3L08_GOATS_ACQUIRED(2) + H3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("C. Total sold live for slaughter is greater than Total Supply");
		endif;
	endif;
	
	
	if H4L13L15_HEAD_M1(curocc()) = notappl and H4L13L15_HEAD_M2(curocc()) = notappl and H4L13L15_HEAD_M3(curocc()) = notappl then
		if curocc() = 1 then
			if ischecked("A", H4FQ_L13L15) = 1 then
				getErrorMsg("D. Buck is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 2 then
			if ischecked("B", H4FQ_L13L15) = 1 then
				getErrorMsg("E. Doe is selected but no entry for M1, M2, and M3");
			endif;
		elseif curocc() = 3 then
			if ischecked("C", H4FQ_L13L15) = 1 then
				getErrorMsg("F. Other ages is selected but no entry for M1, M2, and M3");
			endif;
		endif;
	endif;
	
	
		// 10-17-2023 silas
		//if curocc() = 3 then
			if visualvalue(H4L13L15_HEAD_M3(1)) >= 0 or visualvalue(H4L13L15_HEAD_M3(2)) >= 0 or visualvalue(H4L13L15_HEAD_M3(3)) >= 0 then
				numeric totDistination_Goat3 = visualvalue(H4L13L15_HEAD_M3(1)) + visualvalue(H4L13L15_HEAD_M3(2)) + visualvalue(H4L13L15_HEAD_M3(3));			
				H4L21_TOTAL(3)	= totDistination_Goat3;						
				//errmsg("total areas (col-1) = %v",totDistination_Goat3);
			endif;
		//endif;
		//end	
	
	
	
	savepartial();
  
PROC H4L13L15_LIVEWEIGHT_M3

	if H4L13L15_HEAD_M3(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,15,50,"C. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,5,50,"C. Average liveweight is not within the the acceptable range.");
		endif;
	if $(curocc()) in 0,notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if H4L13L15_HEAD_M1(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of heads or average liveweight");
			endif;		
		endif;
	endif;
  
	savepartial();
	
PROC H4L13L15_FARMGATE_M3


	H4L13L15_HEAD_TOTAL_M3 = H4L13L15_HEAD_M3(1) + H4L13L15_HEAD_M3(2) + H4L13L15_HEAD_M3(3);

	if H4L13L15_HEAD_M3(curocc()) > 0 then
		if curocc() = 1 then // buck
			getOutOfRange($,2000.00,10000.00,"C. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 2 then  // doe
			getOutOfRange($,3000.00,20000.00,"C. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 3 then  // other
			getOutOfRange($,1500.00,15000.00,"C. Average Farmgate price is not within the the acceptable range.");
		endif;
		
		if H4L13L15_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif H4L13L15_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif H4L13L15_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if H4L13L15_HEAD_M3(curocc()) in 0, notappl then
			if H4L13L15_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif H4L13L15_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif H4L13L15_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	

			
		endif;
	endif;
	
	
	if H4L13L15_HEAD_M1(curocc()) in 0, notappl and H4L13L15_LIVEWEIGHT_M1(curocc()) in 0, notappl and H4L13L15_FARMGATE_M1(curocc()) in 0, notappl and
	   H4L13L15_HEAD_M2(curocc()) in 0, notappl and H4L13L15_LIVEWEIGHT_M2(curocc()) in 0, notappl and H4L13L15_FARMGATE_M2(curocc()) in 0, notappl and
	   H4L13L15_HEAD_M3(curocc()) in 0, notappl and H4L13L15_LIVEWEIGHT_M3(curocc()) in 0, notappl and H4L13L15_FARMGATE_M3(curocc()) in 0, notappl then
		if curocc() = 1 then
			if ischecked("A", H4FQ_L13L15) = 1 then
				getErrorMsg("J. Buck is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 2 then
			if ischecked("B", H4FQ_L13L15) = 1 then
				getErrorMsg("J. Doe is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 3 then
			if ischecked("C", H4FQ_L13L15) = 1 then
				getErrorMsg("J. Other ages is selected but no entry for M1, M2, and M3"); 
			endif;
		endif;
	endif;
	


	


	savepartial();
	
PROC H4L16_DISPOSE_SELL_SLAUGHTER
numeric showw1,showw2,showw3,showw;
	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 2 then
		if H4L13L15_HEAD_TOTAL_M1 >= 0 then
			showw1 = H4L13L15_HEAD_TOTAL_M1;
		else
			showw1 = 0;
		endif;
		if H4L13L15_HEAD_TOTAL_M2 >= 0 then
			showw2 = H4L13L15_HEAD_TOTAL_M2;
		else
			showw2 = 0;
		endif;
		if H4L13L15_HEAD_TOTAL_M3 >= 0 then
			showw3 = H4L13L15_HEAD_TOTAL_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to H4L21_TOTAL(1);
		else
			skip to H4L25_SOLD_OTHER_PURPOSE;
		endif;
	endif;
	
	savepartial();
PROC H4L17_COMPARED_LYSQ
	if not $ in 1:3 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 3 then
		skip to H4L19_COMPARED_FG;
	endif;

	savepartial();
PROC H4L18_CHECKBOX_HIGH

preproc
	ask if H4L17_COMPARED_LYSQ = 1;

postproc

    if ischecked ("A",$) = 1 then H4L181_HIGH_DEMAND        =  1;endif;
	if ischecked ("B",$) = 1 then H4L182_NO_OUTBREAK        =  2;endif;
	if ischecked ("C",$) = 1 then H4L183_INC_PASTURE        =  3;endif;
	if ischecked ("D",$) = 1 then H4L184_HIGHER_PRICE_OFFER =  4;endif;
	if ischecked ("E",$) = 1 then H4L185_FINANCIAL_NEED     =  5;endif;
	if ischecked ("F",$) = 1 then H4L1811_HIGH_REASON       =  11;endif;

	if poschar("ABCDEF", $) = 0 then
		getErrorMsg("No selected code");
	ENDIF;

savepartial();
PROC H4L18_CHECKBOX_LOW

preproc
	ask if H4L17_COMPARED_LYSQ = 2;

postproc

    if ischecked ("A",$) = 1 then H4L186_LOW_DEMAND      =  6;endif;
	if ischecked ("B",$) = 1 then H4L187_OUTBREAK        =  7;endif;
	if ischecked ("C",$) = 1 then H4L188_DEC_PASTURE     =  8;endif;
	if ischecked ("D",$) = 1 then H4L189_LOW_PRICE_OFFER =  9;endif;
	if ischecked ("E",$) = 1 then H4L1810_ANIMAL_KEPT    = 10;endif;
	if ischecked ("F",$) = 1 then H4L1811_LOW_REASON     = 11;endif;
	
	if poschar("ABCDEF", $) = 0 then
		getErrorMsg("No selected code ");
	ENDIF;

	savepartial();

PROC H4L1811_HIGH_SPECIFY

preproc
	ask if ischecked("F", H4L18_CHECKBOX_HIGH) and H4L17_COMPARED_LYSQ = 1;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified in Item LN18");
	endif;
	
	savepartial();
PROC H4L1811_LOW_SPECIFY

preproc
	ask if ischecked("F", H4L18_CHECKBOX_LOW) and H4L17_COMPARED_LYSQ = 2;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified in Item LN18");
	endif;
	
	savepartial();
PROC H4L19_COMPARED_FG

postproc
if H4L19_COMPARED_FG = 1 then
	myReason = "Higher";
elseif H4L19_COMPARED_FG = 2 then
	myReason = "Lower";
endif;

	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	savepartial();
PROC H4L20_REASON_FG

preproc
	ask if H4L19_COMPARED_FG in 1:2;
	
postproc
numeric showw1,showw2,showw3,showw;
	if strip($) = "" then
		getErrorMsg("A. Indicate the reason for increase/decrease in farmgate price");
	endif;
	
		if H4L13L15_HEAD_TOTAL_M1 >= 0 then
			showw1 = H4L13L15_HEAD_TOTAL_M1;
		else
			showw1 = 0;
		endif;
		if H4L13L15_HEAD_TOTAL_M2 >= 0 then
			showw2 = H4L13L15_HEAD_TOTAL_M2;
		else
			showw2 = 0;
		endif;
		if H4L13L15_HEAD_TOTAL_M3 >= 0 then
			showw3 = H4L13L15_HEAD_TOTAL_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to H4L21_TOTAL(1);
		else
			skip to H4L25_SOLD_OTHER_PURPOSE;
		endif;
	
	
	
	savepartial();
PROC H4L21_TOTAL

preproc
	$(1) = H4L13L15_HEAD_TOTAL_M1;
	$(2) = H4L13L15_HEAD_TOTAL_M2;
	$(3) = H4L13L15_HEAD_TOTAL_M3;


postproc
	
  
	savepartial();
	
PROC H4L22_WIN_PRV

	if $(curocc()) = notappl then   
		getErrorMsg("Please verify the inputted code");
	elseif H4L22_WIN_PRV(curocc()) > H4L21_TOTAL(curocc()) then
		getErrorMsg("Sold live within the province is greater than the Total Destination.");
	else
		getOutOfRangeW($(curocc()),0,999999);
	endif;

	savepartial();
PROC H4L23_OUT_PRV

	if $(curocc()) = notappl then   
		getErrorMsg("Please verify the inputted code");
	elseif H4L23_OUT_PRV(curocc()) > H4L21_TOTAL(curocc()) then
		getErrorMsg("Sold live outside the province is greater than the Total Destination.");
	else
		getOutOfRangeW($(curocc()),0,999999);
	endif;
 
	savepartial();
PROC H4L24_UNK_PRV

preproc

	if curocc() = 1 then	
		if H4L13L15_HEAD_TOTAL_M1 >= 0 then
			tempH4L13L15_HEAD_TOTAL_M1M2M3 = H4L13L15_HEAD_TOTAL_M1;
		else
			tempH4L13L15_HEAD_TOTAL_M1M2M3 = 0;
		endif;
	elseif curocc() = 2 then
		if H4L13L15_HEAD_TOTAL_M2 >= 0 then
			tempH4L13L15_HEAD_TOTAL_M1M2M3 = H4L13L15_HEAD_TOTAL_M2;
		else
			tempH4L13L15_HEAD_TOTAL_M1M2M3 = 0;
		endif;
	else
		if curocc() = 3 then
			if H4L13L15_HEAD_TOTAL_M3 >= 0 then
				tempH4L13L15_HEAD_TOTAL_M1M2M3 = H4L13L15_HEAD_TOTAL_M3;
			else
				tempH4L13L15_HEAD_TOTAL_M1M2M3 = 0;
			endif;
		endif;
	endif;
	
	
postproc
	
	H4L21_TOTAL(curocc()) = H4L22_WIN_PRV(curocc()) + H4L23_OUT_PRV(curocc()) + H4L24_UNK_PRV(curocc());
	
	
	if H4L21_TOTAL(curocc()) <> tempH4L13L15_HEAD_TOTAL_M1M2M3 then
		getErrorMsg( maketext("B. The total number of animals in the different areas of destination [%d] is not equal to the total sold live for slaughter in Item LN13 [%d] for the month of %s",H4L21_TOTAL(curocc()),tempH4L13L15_HEAD_TOTAL_M1M2M3,E2_QtrMonth(curocc())) );
	endif;
	// getInvtSuppDisp(curocc(),E4L21_TOTAL(curocc()),xCaStartBornAcquireM1,xCaStartBornAcquireM2,xCaStartBornAcquireM3,H4L10_HEAD_TOTAL_M1 ,xCatdispositionM2)
	
  
	savepartial();
PROC H4L25_SOLD_OTHER_PURPOSE

	if H4L25_SOLD_OTHER_PURPOSE = 2 then
		skip to H4L30_DEATHS;
	elseif not H4L25_SOLD_OTHER_PURPOSE in 1:2 then
		getErrorMsg("No selected code. Please select a valid code.");
	endif;

	savepartial();
PROC H4FQ_L26L29

	if poschar("ABCD", $) = 0 then
		getErrorMsg("NO selected goaat sold live/disposed for other purpose!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			skip to H4L30_DEATHS;
		endif;
	endif;
	
	
	savepartial();
PROC H4L27L29_HEAD_M1

preproc
	//selection of ages
	if ischecked("A",H4FQ_L26L29) = 0 then 
		if curocc() = 1 then    
			move to H4L27L29_HEAD_M1(2); // punta doeling
		endif;
	endif;

	if ischecked("B",H4FQ_L26L29) = 0 then 
		if curocc() = 2 then    
			move to H4L27L29_HEAD_M1(3);  // punta others
		endif;
	endif;

	if ischecked("C",H4FQ_L26L29) = 0 then 
		if curocc() = 3 then    
			move to H4L27L29_HEAD_M2(1); 
		endif;
	endif;
 
 
postproc

	xblockE3_m1 = $(1) + $(2) + $(3);
	H4L26_HEAD_TOTAL_M1 = xblockE3_m1;
	
	if curocc() = 1 then
		if $(1) > (H2L02_TOTAL(1) + H3L07_KIDS_BORN(1) + H3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Kid sold live for other purpose is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (H2L02_TOTAL(1) + H3L07_KIDS_BORN(1) + H3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Doeling sold live for other purpose  is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (H2L02_TOTAL(1) + H3L07_KIDS_BORN(1) + H3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Other sold live forother purpose  is greater than Total Supply");
		endif;

		if H4L13L15_HEAD_TOTAL_M1 > (H2L02_TOTAL(1) + H3L07_KIDS_BORN(1) + H3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Total sold live for other purpose  is greater than Total Supply");
		endif;
	endif;
  
	savepartial();
  
PROC H4L27L29_FARMGATE_M1

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	getOutOfRange($,1000,20000, "A. Average Farmgate price is not within the the acceptable range.");
	
	if H4L27L29_HEAD_M1 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of heads but no average farmgate price.");
	endif;
	
	if $ > 0 and (H4L27L29_HEAD_M1 = notappl or H4L27L29_HEAD_M1 = 0) then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
	
	H4L26_FARMGATE_TOTAL_M1 = $(1) + $(2) + $(3);
	
	savepartial();
	

PROC H4L27L29_DESTINATION_M1

	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if H4L27L29_HEAD_M1 > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("A. Kid has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("A. Doeling has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("A. Others has entry but no specified destination was selected");
		endif;
	endif;
	
	
  
	// H4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
  
	savepartial();
	
PROC H4L27L29_HEAD_M2

preproc
	//selection of ages
	if ischecked("A",H4FQ_L26L29) = 0 then 
		if curocc() = 1 then    
			move to H4L27L29_HEAD_M2(2); // punta doeling
		endif;
	endif;

	if ischecked("B",H4FQ_L26L29) = 0 then 
		if curocc() = 2 then    
			move to H4L27L29_HEAD_M2(3);  // punta others
		endif;
	endif;

	if ischecked("C",H4FQ_L26L29) = 0 then 
		if curocc() = 3 then    
			move to H4L27L29_HEAD_M3(1); 
		endif;
	endif;
 
 
postproc

	xblockE3_m2 = $(1) + $(2) + $(3);
	H4L26_HEAD_TOTAL_M2 = xblockE3_m2;
  
  if curocc() = 1 then
		if $(1) > (H2L02_TOTAL(1) + H3L07_KIDS_BORN(2) + H3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("A. Kid sold live for other purpose is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (H2L02_TOTAL(1) + H3L07_KIDS_BORN(2) + H3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("A. Doeling sold live for other purpose  is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (H2L02_TOTAL(1) + H3L07_KIDS_BORN(2) + H3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("A. Other sold live forother purpose  is greater than Total Supply");
		endif;

		if H4L13L15_HEAD_TOTAL_M1 > (H2L02_TOTAL(2) + H3L07_KIDS_BORN(2) + H3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("A. Total sold live for other purpose  is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  
PROC H4L27L29_FARMGATE_M2

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	getOutOfRange($,1000,20000, "A. Average Farmgate price is not within the the acceptable range.");
	
	if H4L27L29_HEAD_M2 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of heads but no average farmgate price.");
	endif;
	
	if $ > 0 and (H4L27L29_HEAD_M2 = notappl or H4L27L29_HEAD_M2 = 0) then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
	
	H4L26_FARMGATE_TOTAL_M2 = $(1) + $(2) + $(3);
	
	savepartial();
	

PROC H4L27L29_DESTINATION_M2

	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if H4L27L29_HEAD_M2 > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("B. Kid has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("B. Doeling has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("B. Others has entry but no specified destination was selected");
		endif;
	endif;
	
	
  
	// H4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
  
	savepartial();
	
PROC H4L27L29_HEAD_M3

preproc
	//selection of ages
	if ischecked("A",H4FQ_L26L29) = 0 then 
		if curocc() = 1 then    
			move to H4L27L29_HEAD_M3(2); // punta doeling
		endif;
	endif;

	if ischecked("B",H4FQ_L26L29) = 0 then 
		if curocc() = 2 then    
			move to H4L27L29_HEAD_M3(3);  // punta others
		endif;
	endif;

	if ischecked("C",H4FQ_L26L29) = 0 then 
		if curocc() = 3 then    
			move to H4L30_DEATHS; 
		endif;
	endif;
 
 
postproc

	xblockE3_m3 = $(1) + $(2) + $(3);
	H4L26_HEAD_TOTAL_M3 = xblockE3_m3;
  
	if curocc() = 1 then
		if $(1) > (H2L02_TOTAL(1) + H3L07_KIDS_BORN(3) + H3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("A. Kid sold live for other purpose is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (H2L02_TOTAL(1) + H3L07_KIDS_BORN(3) + H3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("A. Doeling sold live for other purpose  is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (H2L02_TOTAL(1) + H3L07_KIDS_BORN(3) + H3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("A. Other sold live forother purpose  is greater than Total Supply");
		endif;

		if H4L13L15_HEAD_TOTAL_M1 > (H2L02_TOTAL(2) + H3L07_KIDS_BORN(3) + H3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("A. Total sold live for other purpose  is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  
PROC H4L27L29_FARMGATE_M3

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	getOutOfRange($,1000,20000, "A. Average Farmgate price is not within the the acceptable range.");
	
	if H4L27L29_HEAD_M3 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of heads but no average farmgate price.");
	endif;
	
	if $ > 0 and (H4L27L29_HEAD_M3 = notappl or H4L27L29_HEAD_M3 = 0) then
		getErrorMsg("C. Without entry in number of heads but with farmgate price.");
	endif;
	
	H4L26_FARMGATE_TOTAL_M3 = $(1) + $(2) + $(3);
	
	savepartial();
	

PROC H4L27L29_DESTINATION_M3

	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if H4L27L29_HEAD_M3 > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("C. Kid has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("C. Doeling has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("C. Others has entry but no specified destination was selected");
		endif;
	endif;
	
  
	// H4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
	
	
	if H4L27L29_HEAD_M1(curocc()) = notappl and H4L27L29_FARMGATE_M1(curocc()) = notappl and H4L27L29_DESTINATION_M1(curocc()) = notappl and
	   H4L27L29_HEAD_M2(curocc()) = notappl and H4L27L29_FARMGATE_M2(curocc()) = notappl and H4L27L29_DESTINATION_M2(curocc()) = notappl and
	   H4L27L29_HEAD_M3(curocc()) = notappl and H4L27L29_FARMGATE_M3(curocc()) = notappl and H4L27L29_DESTINATION_M3(curocc()) = notappl then
		if curocc() = 1 then
			if ischecked("A", H4FQ_L26L29) = 1 then
				getErrorMsg("D. kid is selected but no entries"); 
			endif;
		elseif curocc() = 2 then
			if ischecked("B", H4FQ_L26L29) = 1 then
				getErrorMsg("E. doeling is selected but no entries"); 
			endif;
		elseif curocc() = 3 then
			if ischecked("C", H4FQ_L26L29) = 1 then
				getErrorMsg("F. others is selected but missing entries in number of heads and average farmgate price"); 
			endif;
		endif;
	endif;
  
	savepartial();
	
PROC H4L30_DEATHS

	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 2 then
		skip to H5L33_DOE_MILKLINE(1);
	endif;

	savepartial();
	
	
PROC H4FQ_L31L32
preproc
	ask if H4L30_DEATHS = 1;

postproc
	if poschar("AB", $) = 0 then
		getErrorMsg("C. H.4.3 is code 1 but causes of death is not selected!");
	endif;
	
	savepartial();
	
	
	
PROC RTH4_DC000

postproc
	if ischecked("AB",H4FQ_L31L32) > 0 then
		if strip(HD_GOAT_DISEASE) = "" and strip(HCA_SPECIFY) = "" then
			getErrorMsg("C. Deaths/losses is code 1 but disease and other causes is empty.");
		endif;
	endif;


PROC HD_GOAT_DISEASE

preproc
	ask if ischecked("A",H4FQ_L31L32);
	
	string xDa, xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp ;
	numeric cc = curocc();
	
postproc

	if soccurs(RTH4_L31L32) = 0 then INSERT(RTH4_L31L32(1)); endif;
	if soccurs(RTH4_L31L32) = 1 then INSERT(RTH4_L31L32(2)); endif;

	if ischecked("A",$ ) = 1 then xDa = "Antrax (Bacterial) "; 						endif;
	if ischecked("B",$ ) = 1 then xDb = "Black Leg Disease (Bacterial) ";  			endif;
	if ischecked("C",$ ) = 1 then xDc = "Blue Tongue (Viral) ";  					    endif;
	if ischecked("D",$ ) = 1 then xDd = "Botulism (Bacterial) ";                      endif;
	if ischecked("E",$ ) = 1 then xDe = "Brucellosis (Bacterial)  "; 					endif;
	if ischecked("F",$ ) = 1 then xDf = "Caprine Arthritis Encephalitis (Viral)"; 	endif;
	if ischecked("G",$ ) = 1 then xDg = "Colds "; 									endif;
	if ischecked("H",$ ) = 1 then xDh = "Diarrhea "; 									endif;
	if ischecked("I",$ ) = 1 then xDi = "Enteritis (Bacterial/Viral) ";  				endif;
	if ischecked("J",$ ) = 1 then xDj = "Enterotoxemia ";  							endif;
	if ischecked("K",$ ) = 1 then xDk = "Leptospirosis (Bacterial) ";  				endif;
	if ischecked("L",$ ) = 1 then xDl = "Pneumonia";  								endif;
	if ischecked("M",$ ) = 1 then xDm = "Rabies (Viral) ";  							endif;
	if ischecked("N",$ ) = 1 then xDn = "Tetanus (Bacterial)  ";  					endif;
	if ischecked("O",$ ) = 1 then xDo = "Vibriosis (Bacterial)  ";  					endif;
	if ischecked("P",$ ) = 1 then xDp = HDP_SPECIFY(cc); 								endif;

 

if curocc() = 3 then
	if poschar("ABCDEFGHIJKLMNOP", HD_GOAT_DISEASE(1)) in 0, notappl then
		if poschar("ABCDEFGHIJKLMNOP", HD_GOAT_DISEASE(2)) in 0, notappl then
			if poschar("ABCDEFGHIJKLMNOP", HD_GOAT_DISEASE(3)) in 0, notappl then
				getErrorMsg(" Please specify the cause of death due to other disease.");
			endif;
		endif;
	endif;
endif;

	if curocc() = 1 then  H4L31L32_SPECIFY_M1(1) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp ); 
	elseif curocc() = 2 then  H4L31L32_SPECIFY_M2(1) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp ); 
	elseif curocc() = 3 then  H4L31L32_SPECIFY_M3(1) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp ); 
	endif;

	savepartial();
PROC HDA_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("A",HD_GOAT_DISEASE);

postproc
	if $(curocc()) in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HDB_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("B",HD_GOAT_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HDC_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("C",HD_GOAT_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HDD_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("D",HD_GOAT_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HDE_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("E",HD_GOAT_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HDF_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("F",HD_GOAT_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HDG_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("G",HD_GOAT_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HDH_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("H",HD_GOAT_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HDI_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("I",HD_GOAT_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HDJ_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("J",HD_GOAT_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HDK_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("K",HD_GOAT_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HDL_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("L",HD_GOAT_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HDM_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("M",HD_GOAT_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HDN_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("N",HD_GOAT_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HDO_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("O",HD_GOAT_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HDP_SPECIFY

preproc
	ask if ischecked("A",H4FQ_L31L32) and ischecked("P",HD_GOAT_DISEASE);
	
postproc

	if strip($) = "" then
		getErrorMsg("C. Please specify the cause of death due to other disease.");
	endif;
	
	savepartial();
PROC HDP_HC

preproc 
	ask if ischecked("A",H4FQ_L31L32) and ischecked("P",HD_GOAT_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC HCA_SPECIFY


preproc
	ask if ischecked("B",H4FQ_L31L32);

postproc

	

    if curocc() = 1 then  H4L31L32_SPECIFY_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  H4L31L32_SPECIFY_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  H4L31L32_SPECIFY_M3(2) = $(curocc());
	endif;
	
	savepartial();
	
	
PROC HCA_SP_HC

preproc
	ask if ischecked("B",H4FQ_L31L32) and strip(HCA_SPECIFY) <> "";

postproc
	if  $(curocc()) > 0 and strip(HCA_SPECIFY(curocc())) = "" then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	elseif not HCA_SP_HC(curocc()) > 0 and not strip(HCA_SPECIFY(curocc())) = "" then
		getErrorMsg("With entry in the reason for death but no corresponding number of deaths");
	else
		getOutOfRange($,0,9999, "B. Verify inputed values.");
	endif;

	
    if curocc() = 1 then  H4L31L32_HEADS_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  H4L31L32_HEADS_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  H4L31L32_HEADS_M3(2) = $(curocc());
	endif;	

	if  $(curocc()) > 0 and strip(HCA_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	endif;
	
	savepartial();
PROC HCB_SPECIFY
preproc
	ask if ischecked("B",H4FQ_L31L32);
postproc

 

    if curocc() = 1 then  H4L31L32_SPECIFY_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  H4L31L32_SPECIFY_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  H4L31L32_SPECIFY_M3(2) = $(curocc());
	endif;
	
	savepartial();
	
PROC HCB_SP_HC
preproc
	ask if ischecked("B",H4FQ_L31L32) and strip(HCB_SPECIFY) <> "";
postproc

if  $(curocc()) > 0 and strip(HCB_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	elseif not HCB_SP_HC(curocc()) > 0 and not strip(HCB_SPECIFY(curocc())) = "" then
		getErrorMsg("With entry in the reason for death but no corresponding number of deaths");
	else
		getOutOfRange($,0,9999, "B. Verify inputed values.");
	endif;

	
    if curocc() = 1 then  H4L31L32_HEADS_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  H4L31L32_HEADS_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  H4L31L32_HEADS_M3(2) = $(curocc());
	endif;	

	if  $(curocc()) > 0 and strip(HCB_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	endif;
	
	savepartial();
PROC HCC_SPECIFY
preproc
	ask if ischecked("B",H4FQ_L31L32);
postproc

	if curocc() = 1 then  H4L31L32_SPECIFY_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  H4L31L32_SPECIFY_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  H4L31L32_SPECIFY_M3(2) = $(curocc());
	endif;
	
	if curocc() = 3 then    	
		if  strip(HCA_SPECIFY(1)) = "" and strip(HCA_SPECIFY(2)) = "" and strip(HCA_SPECIFY(3)) = "" and
			strip(HCB_SPECIFY(1)) = "" and strip(HCB_SPECIFY(2)) = "" and strip(HCB_SPECIFY(3)) = "" and 
			strip($(1)) = "" and strip($(2)) = "" and strip($(3)) = "" then
				getErrorMsg("D. Please specify the cause of death due to other causes.");
		endif;
	endif;
	savepartial();
	
PROC HCC_SP_HC
preproc
	ask if ischecked("B",H4FQ_L31L32) and strip(HCC_SPECIFY) <> "";
postproc

	if  $(curocc()) > 0 and strip(HCC_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	elseif not HCC_SP_HC(curocc()) > 0 and not strip(HCC_SPECIFY(curocc())) = "" then
		getErrorMsg("With entry in the reason for death but no corresponding number of deaths");
	else
		getOutOfRange($,0,9999, "B. Verify inputed values.");
	endif;

	
    if curocc() = 1 then  H4L31L32_HEADS_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  H4L31L32_HEADS_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  H4L31L32_HEADS_M3(2) = $(curocc());
	endif;	

	if  $(curocc()) > 0 and strip(HCC_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	endif;
	
	savepartial();
PROC RTH5_L33L44000
preproc
if H1L01_TYPE_OF_OPERATION in 3,5,6,7 then
	oks=1;
else
	skip to remarks;
endif;
PROC H5L33_DOE_MILKLINE
preproc
	if !(H1L01_TYPE_OF_OPERATION in 3,5,6,7) then
		skip to REMARKS;
	endif;
	
postproc

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
  
	getOutOfRangeW($(curocc()),0,99999);
	
	// If number of does in the milkline is > than the beggining inventory of doe + Other Ages + Acquired
	tempBI  = H2L04_DOE(1) + H2L05_OTHER_AGES(1) + H3L08_GOATS_ACQUIRED(1);
	if $ > tempBI then
		getErrorMsg("Number of does in the milkline exceeds the inventory of doe, Other Ages, and Acquired");
	endif;
	
	savepartial();
PROC H5L34_AVE_MILK_DAY

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	if curocc() = 1 then
		if $ > refdays1 then
			getErrorMsg(maketext("Average number of milking days is higher than the total number of days for the month of %s.",E2_QtrMonth(curocc())));
		endif;
	elseif curocc() = 2 then
		if $ > refdays2 then
			getErrorMsg(maketext("Average number of milking days is higher than the total number of days for the month of %s.",E2_QtrMonth(curocc())));
		endif;
	elseif curocc() = 3 then
		if $ > refdays3 then
			getErrorMsg(maketext("Average number of milking days is higher than the total number of days for the month of %s.",E2_QtrMonth(curocc())));
		endif;
	endif;
  
	savepartial();
  

PROC H5L35_AVE_MILK_PROD
	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
  
	getOutOfRange($,0.5,5.00, "Average milk production (in liter) per day is not within the acceptable range.");
  
	savepartial();



PROC H5L36_TOTAL_MILK_PROD

savepartial();
	
PROC H5L37_CONSUMED_HOME


	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
  
	getOutOfRange($,1,100.00, "A. Entered value is greater than 100 percent. Verify inputed data");
  
	savepartial();
  
PROC H5L38_FED_CALVES

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
  
	getOutOfRange($,1,100.00, "A. Entered value is greater than 100 percent. Verify inputed data");
  
	savepartial();
  
PROC H5L39_WASTAGE

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
  
	getOutOfRange($,1,100.00, "A. Entered value is greater than 100 percent. Verify inputed data");
  
	savepartial();
  
PROC H5L40_FRESH_MILK

postproc

	H5L36_TOTAL_MILK_PROD(curocc()) = H5L37_CONSUMED_HOME(curocc()) + H5L38_FED_CALVES(curocc()) + H5L39_WASTAGE(curocc()) + H5L40_FRESH_MILK(curocc());

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
  
	getOutOfRange($,1,100.00, "A. Entered value is greater than 100 percent. Verify inputed data");
	
	if $ > 0 then
		if H5L36_TOTAL_MILK_PROD(curocc()) = 0 then
			getErrorMsg("B.sold as raw milk is greater than zero but computed milk production is zero. Please verify the milk disposition or milk production.");
		endif;
	else
		// if $ = 0 then
			// skip to H5L33_DOE_MILKLINE(2);
		// endif;
	endif;
	
	if H5L36_TOTAL_MILK_PROD(curocc()) < 100 and H5L36_TOTAL_MILK_PROD(curocc()) <> 0 then
		getErrorMsg("C. sum of 1:4 is less than 100%. Verify the inputted data");
	endif;
	
	if H5L37_CONSUMED_HOME(curocc()) = 0 and H5L38_FED_CALVES(curocc()) = 0 and H5L39_WASTAGE(curocc()) = 0 and H5L40_FRESH_MILK(curocc()) = 0 and H5L35_AVE_MILK_PROD(curocc()) > 0 then
		getErrorMsg("F. With entry in Total milk produced (in liters) but without entry in any items of consumed /processed at home,  fed to caracalves, wastage, and sold as raw milk");
	endif;
	
	if H5L36_TOTAL_MILK_PROD(curocc()) > 0 and H5L33_DOE_MILKLINE(curocc()) = 0 and H5L34_AVE_MILK_DAY(curocc()) = 0 and H5L35_AVE_MILK_PROD(curocc()) = 0 then
		getErrorMsg("G. Milk production indicator has no entry but milk disposition has entry");
	endif;
	
	// for total not in edit specs
	if H5L36_TOTAL_MILK_PROD(curocc()) > 100 then
		getErrorMsg("Entered value is greater than 100 percent. Verify inputed data");
	endif;
	
	
	savepartial();
PROC BLOCK001H5_L41L44
	
preproc

	ask if H5L40_FRESH_MILK(curocc()) > 0;
	
PROC H5L41_TOTAL_M1

preproc 
  numeric x = curocc();
  
  $(x) = H5L33_DOE_MILKLINE(x) * H5L34_AVE_MILK_DAY(x) * H5L35_AVE_MILK_PROD(x) * (H5L40_FRESH_MILK(x)/100);
	
PROC H5L42_SOLD_VOL_PCC

postproc

	if not $(curocc()) in 0:999999.99 then
		getWarningMsg("Entry(PCC Volume) is not in acceptable range");
	endif; 
	
  
	savepartial();
  
  



PROC H5L42_MILK_FG_PCC
	
	
	if not $(curocc()) in 0,40.00:180.00 then
		getWarningMsg("Entry(PCC Ave. Farmgate Price) is not in acceptable range");
	endif; 
	
if H5L42_SOLD_VOL_PCC(curocc()) > 0 then
	if H5L42_MILK_FG_PCC(curocc()) = 0 then
		getWarningMsg("Verify the inputted entry. Goat's milk will only sold to NDA or Other than NDA");
	endif;
endif;
    
	savepartial();
PROC H5L43_SOLD_VOL_NDA

postproc

	if not $(curocc()) in 0:999999.99 then
		getWarningMsg("Entry(NDA Volume) is not in acceptable range");
	endif; 
	
  
	savepartial();
  
  
PROC H5L43_MILK_FG_NDA

	if not $(curocc()) in 0,40.00:180.00 then
		getWarningMsg("Entry(NDA Ave. Farmgate Price) is not in acceptable range");
	endif; 
	
	if H5L43_SOLD_VOL_NDA(curocc()) > 0 then
		if ($ = 0 or $ = notappl) then
			getErrorMsg("a. Missing entry in average farmgate");
		endif;
	else
		if H5L43_SOLD_VOL_NDA(curocc()) = 0 then
			if $ > 0 then
				getErrorMsg("b. Missing entry in Volume/Number (in liter)");
			endif;
		endif;
	endif;
	
	savepartial();
	
	
PROC H5L44_SOLD_VOL_OTHER

postproc

if not $(curocc()) in 0:999999.99 then
	getWarningMsg("Entry(Other Volume) is not in acceptable range");
endif; 


savepartial();
  
PROC H5L44_MILK_FG_OTHER
if not $(curocc()) in 0,40.00:180.00 then
		getWarningMsg("Entry(Other Ave. Farmgate Price) is not in acceptable range");
	endif; 
	
	if curocc() = 1 then
		xblockE4_m1 = H5L42_SOLD_VOL_PCC(1) + H5L43_SOLD_VOL_NDA(1) + H5L44_SOLD_VOL_OTHER(1);
		H5L41_TOTAL_M1(1) = xblockE4_m1;
	elseif curocc() = 2 then
		xblockE4_m2 = H5L42_SOLD_VOL_PCC(2) + H5L43_SOLD_VOL_NDA(2) + H5L44_SOLD_VOL_OTHER(2);
		H5L41_TOTAL_M1(2) = xblockE4_m2;
	elseif curocc() = 3 then
		xblockE4_m3 = H5L42_SOLD_VOL_PCC(3) + H5L43_SOLD_VOL_NDA(3) + H5L44_SOLD_VOL_OTHER(3);
		H5L41_TOTAL_M1(3) = xblockE4_m3;
	endif;
	
	if H5L44_SOLD_VOL_OTHER(curocc()) > 0 then
		if ($ = 0 or $ = notappl) then
			getErrorMsg("a. Missing entry in average farmgate");
		endif;
	else
		if H5L44_SOLD_VOL_OTHER(curocc()) = 0 then
			if $ > 0 then
				getErrorMsg("b. Missing entry in Volume/Number (in liter)");
			endif;
		endif;
	endif;
	
	// H5L41_TOTAL_M1(curocc()) = H5L42_SOLD_VOL_PCC(curocc()) + H5L43_SOLD_VOL_NDA(curocc()) + H5L44_SOLD_VOL_OTHERS(curocc());
	
	tempTotal = ((H5L40_FRESH_MILK(curocc())/100) * (H5L33_DOE_MILKLINE(curocc()) * H5L34_AVE_MILK_DAY(curocc()) * H5L35_AVE_MILK_PROD(curocc())));
	
	if H5L41_TOTAL_M1(curocc()) <> tempTotal then
		errmsg("Total sold as fresh milk %10.2f is not equal to %10.2f. (Sum of sold to PCC, NDA, and Other than PCC/NDA is less than or greater than LN 41 x Total Milk Produced)",H5L41_TOTAL_M1(curocc()),tempTotal)
		select("Milk Production",H5L33_DOE_MILKLINE(curocc()),"Sold as Fresh Milk",H5L40_FRESH_MILK(curocc()),"Milk Destination",H5L42_SOLD_VOL_PCC(curocc()));
	endif;
    
	savepartial();

//******* I- Sheep  *******//
	
PROC H5L44_OTHER_MTH
preproc
	ask if H5L44_SOLD_VOL_OTHER(curocc()) > 0 and H5L44_MILK_FG_OTHER(curocc()) > 0 ;
	
postproc
	if H5L44_SOLD_VOL_OTHER(curocc()) > 0 or H5L44_SOLD_VOL_OTHER(curocc()) > 0 then
		if strip($) = "" then
			getErrorMsg("Missing entry in specify! Please specify other destination!");
		endif;
	endif;

	if H5L44_SOLD_VOL_OTHER(curocc()) in 0, notappl and H5L44_SOLD_VOL_OTHER(curocc()) in 0, notappl then
		if !(strip($) = "") then
			getErrorMsg("Item specify should be blank!");
		endif;
	endif; 


	savepartial();

PROC GROUP005_SHEEP

preproc
if D2L12_SHEEP  = 5 then
	ok = 1
else
	skip to REMARKS
endif;
PROC I1L01_TYPE_OF_OPERATION
postproc
	if not $ in 1:7 then
		getErrorMsg("A. No selected type of operation. Please select type of operation.");
	endif;
	
	savepartial();
PROC I2L02_TOTAL

postproc
if CHANGE_FARM_CAP > 0 then
	if I2L02_TOTAL(2) > CHANGE_FARM_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;

else
	if I2L02_TOTAL(2) > MAX_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;
endif;
	savepartial();
PROC I2L03_RAM
postproc
		getOutOfRangeW($,0,999999);
	if $(curocc()) > I2L02_TOTAL(curocc())  then
		getErrorMsg("A. Inventory of Ram is greater than the total inventory ");
	endif;
	
	savepartial();
PROC I2L04_EWE
postproc
	 getOutOfRangeW($,0,999999);
	if $(curocc()) > I2L02_TOTAL(curocc())  then
		getErrorMsg("B. Inventory of Ewe is greater than the total inventory.");
	endif;
		
	savepartial();
PROC I2L05_OTHER_AGES
postproc
	numeric xE2TotInventory = I2L03_RAM(curocc()) + I2L04_EWE(curocc()) + I2L05_OTHER_AGES(curocc());

	if $(curocc()) > I2L02_TOTAL(curocc())  then
		getErrorMsg("A. Inventory of Other Ages is greater than the total inventory.");
	endif;
	
	if xE2TotInventory <> I2L02_TOTAL then
		getErrorMsg("The total inventory of sheep is not equal to the breakdown.");
	endif;
	
	savepartial();
PROC I3L06_EWES_BIRTH
	savepartial();
PROC I3L07_KIDS_BORN
	if $(curocc()) > 0 and I3L06_EWES_BIRTH(curocc()) = 0 then
		getErrorMsg("A. With entry in born live but zero in ewe that gave birth.");
	endif;
	
	if I3L06_EWES_BIRTH(curocc()) > 0 then
		if I3L07_KIDS_BORN(curocc()) in 0, notappl then
			getWarningMsg("With entry in ewes that gave birth but zero entry in born live.");
		endif;
	endif;
	
	if $(curocc()) > (I3L06_EWES_BIRTH(curocc()) * 3) then
		getWarningMsg("B. Born live is greater than the acceptable range. A ewe that gave birth may have at most 3 kids in one kidding.");
	endif;

	savepartial();
PROC I3L08_GOATS_ACQUIRED

numeric total_birth,beg_invt,end_invt,sum_gaveB;
	total_birth = 0;
	beg_invt    = 0;
	end_invt    = 0;
	sum_gaveB   = 0;

	
	total_birth = $(1) + $(2) + $(3);
               // caracow                                             other                    acquired
	beg_invt  = visualvalue(I2L04_EWE(1))        + visualvalue(I2L05_OTHER_AGES(1))     +  I3L08_GOATS_ACQUIRED(1);
	end_invt  = visualvalue(I2L04_EWE(2))        + visualvalue(I2L05_OTHER_AGES(2))     +  I3L08_GOATS_ACQUIRED(1) + I3L08_GOATS_ACQUIRED(2) + I3L08_GOATS_ACQUIRED(3) ;
	sum_gaveB = visualvalue(I3L06_EWES_BIRTH(1)) + visualvalue(I3L06_EWES_BIRTH(2)) +  visualvalue(I3L06_EWES_BIRTH(3));
	
	if curocc() = 1 then
		if visualvalue(I3L06_EWES_BIRTH(1)) > beg_invt   then
			getErrorMsg("B. ewes that gavebirth is > beginning inventory of ewe + beginning inventory of other ages + acquired");
		endif;
	elseif curocc() = 2 then
		if visualvalue(I3L06_EWES_BIRTH(2)) > ((beg_invt + ($(2)) - visualvalue(I3L06_EWES_BIRTH(1))))  then
			 getErrorMsg("C. ewes that gavebirth is > beginning inventory of ewe + beginning inventory of other ages + acquired");
		endif;
	elseif curocc() = 3 then
		if visualvalue(I3L06_EWES_BIRTH(3)) > (end_invt  - (visualvalue(I3L06_EWES_BIRTH(1)) + visualvalue(I3L06_EWES_BIRTH(2))))  then
			getErrorMsg("D.  ewes that  gave birth is > ending inventory of ewe + ending inventory of other ages + acquired");
			
			errmsg("D.  ewes that  gave birth is [%d] > ending inventory of ewe [%d] + ending inventory of other ages + acquired",visualvalue(I3L06_EWES_BIRTH(3)), end_invt);
			
		endif;
		
		if sum_gaveB > (beg_invt + $(2) + $(3) + I2L05_OTHER_AGES(2)) then
		  getErrorMsg("E. Total number of ewe that gave birth during the quarter exceeds the beginning inventory of ewe and other ages, and acquired. ");
		endif;
	endif;

	savepartial();
PROC I4L09_ANY_SOLD_SLAUGHTER
	if $ in 1:2 then
		if $ = 2 then
			skip to I4L25_SOLD_OTHER_PURPOSE;
		endif;
	else
		getNoAcceptCode();
	endif;
	
	savepartial();
PROC I4FQ_L10L12
postproc
	if poschar("ABCD", $) = 0 then
		getErrorMsg("NO selected ages of sheep slaughtered in the household farm!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			skip to I4FQ_L13L15;
		endif;
	endif;
	
	savepartial();
	
PROC I4L10L12_HEAD_M1

preproc
//selection of ages
if ischecked("A",I4FQ_L10L12) = 0 then 
	if curocc() = 1 then    
		move to I4L10L12_HEAD_M1(2); // punta doe
	endif;		
endif;

if ischecked("B",I4FQ_L10L12) = 0 then 
	if curocc() = 2 then    
		move to I4L10L12_HEAD_M1(3);  // punta other ages
	endif;
endif;

if ischecked("C",I4FQ_L10L12) = 0 then 
	if curocc() = 3 then    
		move to I4L10L12_HEAD_M2(1); 
	endif;
endif;

	xblockE1_m1 = $(1) + $(2) + $(3);
	I4L10L12_HEAD_TOTAL_M1 = xblockE1_m1;	 
	
	
	if curocc() = 1 then
		if $(1) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Ram slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Ewe slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Other Ages slaughtered on establishment is greater than Total Supply");
		endif;

		if I4L10L12_HEAD_TOTAL_M1 > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Total slaughtered on establishment is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  
PROC I4L10L12_LIVEWEIGHT_M1
postproc
if I4L10L12_HEAD_M1(curocc()) > 0 then
	if I4L10L12_LIVEWEIGHT_M1(curocc()) in 0, notappl then
		getErrorMsg("Missing entries in either number of heads, average liveweight and average farmgate price.");
	elseif I4L10L12_LIVEWEIGHT_M1(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,15,50,"A. Average liveweight is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,5,50,"A. Average liveweight is not within the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Please verify the inputted code in either number of heads or average liveweight");
		endif;
	endif;
elseif I4L10L12_HEAD_M1(curocc()) in 0, notappl then
		if $(curocc()) > 0 then
			getErrorMsg("E. Please verify the inputted code in either number of heads or average liveweight");
		elseif $(curocc()) in 0, notappl then
			if curocc() = 1 then 
				if ischecked("A", I4FQ_L10L12) = 1 then
					getErrorMsg("F. Ram is selected but missing entries in number of heads and average liveweight"); 
				endif;
			elseif curocc() = 2 then
				if ischecked("B", I4FQ_L10L12) = 1 then
					getErrorMsg("F. Ewe is selected but missing entries in number of heads and average liveweight"); 
				endif;
			elseif curocc() = 3 then
				if ischecked("C", I4FQ_L10L12) = 1 then
					getErrorMsg("F. Other ages is selected but missing entries in number of heads and average liveweight"); 
				endif;
			endif;
		endif;	
endif;
	
savepartial();
PROC I4L10L12_FARMGATE_M1
if I4L10L12_HEAD_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,1000.00,10000.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,1500.00,12000.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,700.00,8000.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if I4L10L12_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif I4L10L12_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) = notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif I4L10L12_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if I4L10L12_HEAD_M1(curocc()) = notappl then
			if I4L10L12_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) = notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif I4L10L12_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif I4L10L12_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
			
			if I4L10L12_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", I4FQ_L10L12) = 1 then
						getWarningMsg("J. Ram is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", I4FQ_L10L12) = 1 then
						getWarningMsg("J. Ewe is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", I4FQ_L10L12) = 1 then
						getWarningMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;	
		endif;
	endif;

	savepartial();
	
PROC I4L10L12_HEAD_M2
preproc
	//selection of ages
	if ischecked("A",I4FQ_L10L12) = 0 then 
		if curocc() = 1 then    
			move to I4L10L12_HEAD_M2(2); // punta doe
		endif;		
	endif;

	if ischecked("B",I4FQ_L10L12) = 0 then 
		if curocc() = 2 then    
			move to I4L10L12_HEAD_M2(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",I4FQ_L10L12) = 0 then 
		if curocc() = 3 then    
			move to I4L10L12_HEAD_M3(1); 
		endif;
	endif;
 
 
postproc


	xblockE1_M2 = $(1) + $(2) + $(3);
	I4L10L12_HEAD_TOTAL_M2 = xblockE1_M2;	 
	
	
	if curocc() = 1 then
		if $(1) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Ram slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Ewe slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Other Ages slaughtered on establishment is greater than Total Supply");
		endif;

		if I4L10L12_HEAD_TOTAL_M2 > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Total slaughtered on establishment is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  
PROC I4L10L12_LIVEWEIGHT_M2
postproc
if I4L10L12_HEAD_M2(curocc()) > 0 then
	if I4L10L12_LIVEWEIGHT_M2(curocc()) in 0, notappl then
		getErrorMsg("Missing entries in either number of heads, average liveweight and average farmgate price.");
	elseif I4L10L12_LIVEWEIGHT_M2(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,15,50,"B. Average liveweight is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,5,50,"B. Average liveweight is not within the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Please verify the inputted code in either number of heads or average liveweight");
		endif;
	endif;
elseif I4L10L12_HEAD_M2(curocc()) in 0, notappl then
		if $(curocc()) > 0 then
			getErrorMsg("E. Please verify the inputted code in either number of heads or average liveweight");
		elseif $(curocc()) in 0, notappl then
			if curocc() = 1 then
				if ischecked("A", I4FQ_L10L12) = 1 then
					getErrorMsg("F. Ram is selected but missing entries in number of heads and average liveweight"); 
				endif;
			elseif curocc() = 2 then
				if ischecked("B", I4FQ_L10L12) = 1 then
					getErrorMsg("F. Ewe is selected but missing entries in number of heads and average liveweight"); 
				endif;
			elseif curocc() = 3 then
				if ischecked("C", I4FQ_L10L12) = 1 then
					getErrorMsg("F. Other ages is selected but missing entries in number of heads and average liveweight"); 
				endif;
			endif;
		endif;
endif;
	
savepartial();

	
PROC I4L10L12_FARMGATE_M2
if I4L10L12_HEAD_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,1000.00,10000.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,1500.00,12000.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,700.00,8000.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if I4L10L12_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif I4L10L12_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) = notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif I4L10L12_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if I4L10L12_HEAD_M2(curocc()) = notappl then
			if I4L10L12_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) = notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif I4L10L12_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif I4L10L12_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
		if I4L10L12_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) = notappl then
			if curocc() = 1 then
				if ischecked("A", I4FQ_L10L12) = 1 then
					getWarningMsg("J. Ram is selected but missing entries in number of heads, average liveweight and farmgate price"); 
				endif;
			elseif curocc() = 2 then
				if ischecked("B", I4FQ_L10L12) = 1 then
					getWarningMsg("J. Ewe is selected but missing entries in number of heads, average liveweight and farmgate price"); 
				endif;
			elseif curocc() = 3 then
				if ischecked("C", I4FQ_L10L12) = 1 then
					getWarningMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
				endif;
			endif;
		endif;		

		endif;
	endif;

	savepartial();
	
PROC I4L10L12_HEAD_M3
preproc
	//selection of ages
	if ischecked("A",I4FQ_L10L12) = 0 then 
		if curocc() = 1 then    
			move to I4L10L12_HEAD_M3(2); // punta doe
		endif;		
	endif;

	if ischecked("B",I4FQ_L10L12) = 0 then 
		if curocc() = 2 then    
			move to I4L10L12_HEAD_M3(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",I4FQ_L10L12) = 0 then 
		if curocc() = 3 then    
			move to I4FQ_L13L15; 
		endif;
	endif;
 
postproc


	xblockE1_M3 = $(1) + $(2) + $(3);
	I4L10L12_HEAD_TOTAL_M3 = xblockE1_M3;	 
	
	
	if curocc() = 1 then
		if $(1) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Ram slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Ewe slaughtered on establishment is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Other Ages slaughtered on establishment is greater than Total Supply");
		endif;

		if I4L10L12_HEAD_TOTAL_M3 > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Total slaughtered on establishment is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  
PROC I4L10L12_LIVEWEIGHT_M3
postproc
if I4L10L12_HEAD_M3(curocc()) > 0 then
	if I4L10L12_LIVEWEIGHT_M3(curocc()) in 0, notappl then
		getErrorMsg("Missing entries in either number of heads, average liveweight and average farmgate price.");
	elseif I4L10L12_LIVEWEIGHT_M3(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,15,50,"C. Average liveweight is not within the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,5,50,"C. Average liveweight is not within the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Please verify the inputted code in either number of heads or average liveweight");
		endif;
	endif;
elseif I4L10L12_HEAD_M3(curocc()) in 0, notappl then
		if $(curocc()) > 0 then
			getErrorMsg("E. Please verify the inputted code in either number of heads or average liveweight");
		elseif $(curocc()) in 0, notappl then
			if curocc() = 1 then
				if ischecked("A", I4FQ_L10L12) = 1 then
					getErrorMsg("F. Ram is selected but missing entries in number of heads and average liveweight"); 
				endif;
			elseif curocc() = 2 then
				if ischecked("B", I4FQ_L10L12) = 1 then
					getErrorMsg("F. Ewe is selected but missing entries in number of heads and average liveweight"); 
				endif;
			elseif curocc() = 3 then
				if ischecked("C", I4FQ_L10L12) = 1 then
					getErrorMsg("F. Other ages is selected but missing entries in number of heads and average liveweight"); 
				endif;
			endif;
		endif;	

endif;
	
savepartial();

	
PROC I4L10L12_FARMGATE_M3
if I4L10L12_HEAD_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,1000.00,10000.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,1500.00,12000.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,700.00,8000.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if I4L10L12_LIVEWEIGHT_M3(curocc()) = notappl and $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif I4L10L12_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) = notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif I4L10L12_LIVEWEIGHT_M3(curocc()) = notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if I4L10L12_HEAD_M3(curocc()) = notappl then
			if I4L10L12_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) = notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif I4L10L12_LIVEWEIGHT_M3(curocc()) = notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif I4L10L12_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
			
		endif;
	endif;
	
		if I4L10L12_HEAD_M1(curocc()) in 0, notappl and I4L10L12_LIVEWEIGHT_M1(curocc()) in 0, notappl and I4L10L12_FARMGATE_M1(curocc()) in 0, notappl and
	   I4L10L12_HEAD_M3(curocc()) in 0, notappl and I4L10L12_LIVEWEIGHT_M3(curocc()) in 0, notappl and I4L10L12_FARMGATE_M3(curocc()) in 0, notappl and
	   I4L10L12_HEAD_M3(curocc()) in 0, notappl and I4L10L12_LIVEWEIGHT_M3(curocc()) in 0, notappl and I4L10L12_FARMGATE_M3(curocc()) in 0, notappl then
		if curocc() = 1 then
			if ischecked("A", I4FQ_L10L12) = 1 then
				getErrorMsg("J. Ram is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 2 then
			if ischecked("B", I4FQ_L10L12) = 1 then
				getErrorMsg("J. Ewe is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 3 then
			if ischecked("C", I4FQ_L10L12) = 1 then
				getErrorMsg("J. Other ages is selected but no entry for M1, M2, and M3"); 
			endif;
		endif;
	endif;

	savepartial();
	
PROC I4FQ_L13L15
	if poschar("ABCD", $) = 0 then
		getErrorMsg("NO selected sheep sold live for slaughter!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			skip to I4L16_DISPOSE_SELL_SLAUGHTER;
		endif;
	endif;
	
	
PROC I4L13L15_HEAD_M1
preproc
	//selection of ages
	if ischecked("A",I4FQ_L13L15) = 0 then 
		if curocc() = 1 then    
			move to I4L13L15_HEAD_M1(2); // punta doe
		endif;		
	endif;

	if ischecked("B",I4FQ_L13L15) = 0 then 
		if curocc() = 2 then    
			move to I4L13L15_HEAD_M1(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",I4FQ_L13L15) = 0 then 
		if curocc() = 3 then    
			move to I4L13L15_HEAD_M2(1); 
		endif;
	endif;
 
postproc

	xblockE2_m1 = $(1) + $(2) + $(3);
	I4L13L15_HEAD_TOTAL_M1 = xblockE2_m1;
	
	if curocc() = 1 then
		if $(1) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Ram sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Ewe sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Other sold live for slaughter is greater than Total Supply");
		endif;

		if I4L13L15_HEAD_TOTAL_M1 > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Total sold live for slaughter is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  
PROC I4L13L15_LIVEWEIGHT_M1
	if I4L13L15_HEAD_M1(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,15,50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,5,50,"A. Average liveweight is not within the the acceptable range.");
		endif;
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if I4L13L15_HEAD_M1(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of heads or average liveweight");
			endif;		
		endif;
	endif;
  
	savepartial();
	
PROC I4L13L15_FARMGATE_M1
I4L13L15_HEAD_TOTAL_M1 = I4L13L15_HEAD_M1(1) + I4L13L15_HEAD_M1(2) + I4L13L15_HEAD_M1(3);

	if I4L13L15_HEAD_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,1000.00,10000.00,"A. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,1500.00,12000.00,"A. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,700.00,8000.00,"A. Average Farmgate price is not within the the acceptable range.");
		endif;
		
		if I4L13L15_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif I4L13L15_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) = notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif I4L13L15_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if I4L13L15_HEAD_M1(curocc()) = notappl then
			if I4L13L15_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) = notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif I4L13L15_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif I4L13L15_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
				
			if I4L13L15_LIVEWEIGHT_M1(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", I4FQ_L13L15) = 1 then
						getWarningMsg("J. Ram is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", I4FQ_L13L15) = 1 then
						getWarningMsg("J. Ewe is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", I4FQ_L13L15) = 1 then
						getWarningMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;
	endif;


	savepartial();
	
PROC I4L13L15_HEAD_M2
preproc
	//selection of ages
	if ischecked("A",I4FQ_L13L15) = 0 then 
		if curocc() = 1 then    
			move to I4L13L15_HEAD_M2(2); // punta doe
		endif;		
	endif;

	if ischecked("B",I4FQ_L13L15) = 0 then 
		if curocc() = 2 then    
			move to I4L13L15_HEAD_M2(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",I4FQ_L13L15) = 0 then 
		if curocc() = 3 then    
			move to I4L13L15_HEAD_M3(1); 
		endif;
	endif;
 
 
postproc


	xblockE2_M2 = $(1) + $(2) + $(3);
	I4L13L15_HEAD_TOTAL_M2 = xblockE2_M2;
	
	if curocc() = 1 then
		if $(1) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Ram sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Ewe sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Other sold live for slaughter is greater than Total Supply");
		endif;

		if I4L13L15_HEAD_TOTAL_M2 > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Total sold live for slaughter is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  
PROC I4L13L15_LIVEWEIGHT_M2
	if I4L13L15_HEAD_M2(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,15,50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,5,50,"A. Average liveweight is not within the the acceptable range.");
		endif;
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if I4L13L15_HEAD_M1(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of heads or average liveweight");
			endif;		
		endif;
	endif;
  
	savepartial();
	
PROC I4L13L15_FARMGATE_M2
I4L13L15_HEAD_TOTAL_M2 = I4L13L15_HEAD_M2(1) + I4L13L15_HEAD_M2(2) + I4L13L15_HEAD_M2(3);

	if I4L13L15_HEAD_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,1000.00,10000.00,"A. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,1500.00,12000.00,"A. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,700.00,8000.00,"A. Average Farmgate price is not within the the acceptable range.");
		endif;
		
		if I4L13L15_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif I4L13L15_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) = notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif I4L13L15_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if I4L13L15_HEAD_M2(curocc()) = notappl then
			if I4L13L15_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) = notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif I4L13L15_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif I4L13L15_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
				
			if I4L13L15_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", I4FQ_L13L15) = 1 then
						getWarningMsg("J. Ram is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", I4FQ_L13L15) = 1 then
						getWarningMsg("J. Ewe is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 3 then
					if ischecked("C", I4FQ_L13L15) = 1 then
						getWarningMsg("J. Other ages is selected but missing entries in number of heads, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;	
		endif;
	endif;


	savepartial();
	
PROC I4L13L15_HEAD_M3
preproc
	//selection of ages
	if ischecked("A",I4FQ_L13L15) = 0 then 
		if curocc() = 1 then    
			move to I4L13L15_HEAD_M3(2); // punta doe
		endif;		
	endif;

	if ischecked("B",I4FQ_L13L15) = 0 then 
		if curocc() = 2 then    
			move to I4L13L15_HEAD_M3(3);  // punta other ages
		endif;
	endif;

	if ischecked("C",I4FQ_L13L15) = 0 then 
		if curocc() = 3 then    
			move to I4L16_DISPOSE_SELL_SLAUGHTER; 
		endif;
	endif;
	 
 
postproc


	xblockE2_M3 = $(1) + $(2) + $(3);
	I4L13L15_HEAD_TOTAL_M3 = xblockE2_M3;
	
	if curocc() = 1 then
		if $(1) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Ram sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Ewe sold live for slaughter is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Other sold live for slaughter is greater than Total Supply");
		endif;

		if I4L13L15_HEAD_TOTAL_M3 > (I2L02_TOTAL(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Total sold live for slaughter is greater than Total Supply");
		endif;
	endif;
	
	savepartial();
  
PROC I4L13L15_LIVEWEIGHT_M3
	if I4L13L15_HEAD_M3(curocc()) > 0 then
		if curocc() in 1:2 then
			getOutOfRange($,15,50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,5,50,"A. Average liveweight is not within the the acceptable range.");
		endif;
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads or average liveweight");
		endif;
	else
		if I4L13L15_HEAD_M1(curocc()) in 0, notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of heads or average liveweight");
			endif;		
		endif;
	endif;
  
	savepartial();
	
PROC I4L13L15_FARMGATE_M3
I4L13L15_HEAD_TOTAL_M3 = I4L13L15_HEAD_M3(1) + I4L13L15_HEAD_M3(2) + I4L13L15_HEAD_M3(3);

	if I4L13L15_HEAD_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,1000.00,10000.00,"A. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,1500.00,12000.00,"A. Average Farmgate price is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,700.00,8000.00,"A. Average Farmgate price is not within the the acceptable range.");
		endif;
		
		if I4L13L15_LIVEWEIGHT_M3(curocc()) = notappl and $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif I4L13L15_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) = notappl then
			getErrorMsg("G. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		elseif I4L13L15_LIVEWEIGHT_M3(curocc()) = notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of heads, average liveweight and/or average farmgate price");
		endif;
	else
		if I4L13L15_HEAD_M3(curocc()) = notappl then
			if I4L13L15_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) = notappl then
				getErrorMsg("E. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif I4L13L15_LIVEWEIGHT_M3(curocc()) = notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			elseif I4L13L15_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of heads, average liveweight and/or average farmgate price");
			endif;	
				
			
		endif;
	endif;

	if I4L13L15_HEAD_M1(curocc()) in 0, notappl and I4L13L15_LIVEWEIGHT_M1(curocc()) in 0, notappl and I4L13L15_FARMGATE_M1(curocc()) in 0, notappl and
	   I4L13L15_HEAD_M3(curocc()) in 0, notappl and I4L13L15_LIVEWEIGHT_M3(curocc()) in 0, notappl and I4L13L15_FARMGATE_M3(curocc()) in 0, notappl and
	   I4L13L15_HEAD_M3(curocc()) in 0, notappl and I4L13L15_LIVEWEIGHT_M3(curocc()) in 0, notappl and I4L13L15_FARMGATE_M3(curocc()) in 0, notappl then
		if curocc() = 1 then
			if ischecked("A", I4FQ_L13L15) = 1 then
				getErrorMsg("J. Carabull is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 2 then
			if ischecked("B", I4FQ_L13L15) = 1 then
				getErrorMsg("J. Caracow is selected but no entry for M1, M2, and M3"); 
			endif;
		elseif curocc() = 3 then
			if ischecked("C", I4FQ_L13L15) = 1 then
				getErrorMsg("J. Other ages is selected but no entry for M1, M2, and M3"); 
			endif;
		endif;
	endif;

	savepartial();
PROC I4L16_DISPOSE_SELL_SLAUGHTER
numeric showw1,showw2,showw3,showw;
	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 2 then
		if I4L13L15_HEAD_TOTAL_M1 >= 0 then
			showw1 = I4L13L15_HEAD_TOTAL_M1;
		else
			showw1 = 0;
		endif;
		if I4L13L15_HEAD_TOTAL_M2 >= 0 then
			showw2 = I4L13L15_HEAD_TOTAL_M2;
		else
			showw2 = 0;
		endif;
		if I4L13L15_HEAD_TOTAL_M3 >= 0 then
			showw3 = I4L13L15_HEAD_TOTAL_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to I4L21_TOTAL(1);
		else
			skip to I4L25_SOLD_OTHER_PURPOSE;
		endif;
	endif;
	
	savepartial();
PROC I4L17_COMPARED_LYSQ
preproc 
 ask if I4L16_DISPOSE_SELL_SLAUGHTER = 1;
 
postproc
	if not $ in 1:3 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 3 then
		skip to I4L19_COMPARED_FG;
	endif;

	savepartial();
PROC I4L18_CHECKBOX_HIGH
preproc
ask if I4L17_COMPARED_LYSQ = 1;

postproc

    if ischecked ("A",$) = 1 then I4L181_HIGH_DEMAND        =  1;endif;
	if ischecked ("B",$) = 1 then I4L182_NO_OUTBREAK        =  2;endif;
	if ischecked ("C",$) = 1 then I4L183_INC_PASTURE        =  3;endif;
	if ischecked ("D",$) = 1 then I4L184_HIGHER_PRICE_OFFER =  4;endif;
	if ischecked ("E",$) = 1 then I4L185_FINANCIAL_NEED     =  5;endif;
	if ischecked ("F",$) = 1 then I4L1811_HIGH_REASON       =  11;endif;

if poschar("ABCDEF", $) = 0 then
    errmsg("No selected code");
ENDIF;

savepartial();
PROC I4L18_CHECKBOX_LOW
preproc
ask if I4L17_COMPARED_LYSQ = 2;

postproc

    if ischecked ("A",$) = 1 then I4L186_LOW_DEMAND      =  6;endif;
	if ischecked ("B",$) = 1 then I4L187_OUTBREAK        =  7;endif;
	if ischecked ("C",$) = 1 then I4L188_DEC_PASTURE     =  8;endif;
	if ischecked ("D",$) = 1 then I4L189_LOW_PRICE_OFFER =  9;endif;
	if ischecked ("E",$) = 1 then I4L1810_ANIMAL_KEPT    = 10;endif;
	if ischecked ("F",$) = 1 then I4L1811_LOW_REASON     = 11;endif;

if poschar("ABCDEF", $) = 0 then
    errmsg("No selected code ");
ENDIF;

savepartial();
PROC I4L1811_HIGH_SPECIFY
preproc
	ask if ischecked("F", I4L18_CHECKBOX_HIGH) and I4L17_COMPARED_LYSQ = 1;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified in Item LN18");
	endif;
	
	savepartial();
PROC I4L1811_LOW_SPECIFY
preproc
	ask if ischecked("F", I4L18_CHECKBOX_LOW) and I4L17_COMPARED_LYSQ = 2;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified in Item LN18");
	endif;
	
	savepartial();
PROC I4L19_COMPARED_FG

postproc
if I4L19_COMPARED_FG = 1 then
	myReason = "Higher";
elseif I4L19_COMPARED_FG = 2 then
	myReason = "Lower";
endif;

	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	savepartial();
PROC I4L20_REASON_FG
preproc
	ask if I4L19_COMPARED_FG in 1:2;
	
postproc
numeric showw1,showw2,showw3,showw;
	if strip($) = "" then
		getErrorMsg("A. Indicate the reason for increase/decrease in farmgate price");
	endif;
	
		if I4L13L15_HEAD_TOTAL_M1 >= 0 then
			showw1 = I4L13L15_HEAD_TOTAL_M1;
		else
			showw1 = 0;
		endif;
		if I4L13L15_HEAD_TOTAL_M2 >= 0 then
			showw2 = I4L13L15_HEAD_TOTAL_M2;
		else
			showw2 = 0;
		endif;
		if I4L13L15_HEAD_TOTAL_M3 >= 0 then
			showw3 = I4L13L15_HEAD_TOTAL_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to I4L21_TOTAL(1);
		else
			skip to I4L25_SOLD_OTHER_PURPOSE;
		endif;
	
	savepartial();
PROC I4L21_TOTAL
preproc
	$(1) = I4L13L15_HEAD_TOTAL_M1;
	$(2) = I4L13L15_HEAD_TOTAL_M2;
	$(3) = I4L13L15_HEAD_TOTAL_M3;


postproc
	
  
	savepartial();
	
PROC I4L22_WIN_PRV
postproc

if I4L22_WIN_PRV(curocc()) > I4L21_TOTAL(curocc()) then
	getErrorMsg("Sold live within the province is greater than the Total Destination.");
else
	getOutOfRangeW($(curocc()),0,999999);
endif;

  
savepartial();
PROC I4L23_OUT_PRV
postproc
if I4L23_OUT_PRV(curocc()) > I4L21_TOTAL(curocc()) then
	getErrorMsg("Sold live outside the province is greater than the Total Destination.");
else
	getOutOfRangeW($(curocc()),0,999999);
endif;
  
savepartial();
PROC I4L24_UNK_PRV
preproc

	if curocc() = 1 then	
		if I4L13L15_HEAD_TOTAL_M1 >= 0 then
			tempH4L13L15_HEAD_TOTAL_M1M2M3 = I4L13L15_HEAD_TOTAL_M1;
		else
			tempH4L13L15_HEAD_TOTAL_M1M2M3 = 0;
		endif;
	elseif curocc() = 2 then
		if I4L13L15_HEAD_TOTAL_M2 >= 0 then
			tempH4L13L15_HEAD_TOTAL_M1M2M3 = I4L13L15_HEAD_TOTAL_M2;
		else
			tempH4L13L15_HEAD_TOTAL_M1M2M3 = 0;
		endif;
	else
		if curocc() = 3 then
			if I4L13L15_HEAD_TOTAL_M3 >= 0 then
				tempH4L13L15_HEAD_TOTAL_M1M2M3 = I4L13L15_HEAD_TOTAL_M3;
			else
				tempH4L13L15_HEAD_TOTAL_M1M2M3 = 0;
			endif;
		endif;
	endif;
	
	
postproc
	
	I4L21_TOTAL(curocc()) = I4L22_WIN_PRV(curocc()) + I4L23_OUT_PRV(curocc()) + I4L24_UNK_PRV(curocc());
	
	
	if I4L21_TOTAL(curocc()) <> tempH4L13L15_HEAD_TOTAL_M1M2M3 then
		getErrorMsg( maketext("B. The total number of animals in the different areas of destination [%d] is not equal to the total sold live for slaughter in Item LN13 [%d] for the month of %s",I4L21_TOTAL(curocc()),tempH4L13L15_HEAD_TOTAL_M1M2M3,E2_QtrMonth(curocc())) );
	endif;
	// getInvtSuppDisp(curocc(),E4L21_TOTAL(curocc()),xCaStartBornAcquireM1,xCaStartBornAcquireM2,xCaStartBornAcquireM3,I4L10_HEAD_TOTAL_M1 ,xCatdispositionM2)
	
  
	savepartial();
PROC I4L25_SOLD_OTHER_PURPOSE
postproc
	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 2 then
		skip to I4L30_DEATHS;
	endif;

	savepartial();
PROC I4FQ_L26L29
postproc
	if poschar("ABCD", $) = 0 then
		getErrorMsg("NO selected goaat sold live/disposed for other purpose!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			skip to I4L30_DEATHS;
		endif;
	endif;
	
	
	savepartial();
PROC I4L27L29_HEAD_M1
preproc
	//selection of ages
	if ischecked("A",I4FQ_L26L29) = 0 then 
		if curocc() = 1 then    
			move to I4L27L29_HEAD_M1(2); // punta ewe lamb
		endif;
	endif;

	if ischecked("B",I4FQ_L26L29) = 0 then 
		if curocc() = 2 then    
			move to I4L27L29_HEAD_M1(3);  // punta others
		endif;
	endif;

	if ischecked("C",I4FQ_L26L29) = 0 then 
		if curocc() = 3 then    
			move to I4L27L29_HEAD_M2(1); 
		endif;
	endif;
	 
postproc
 
	I4L26_HEAD_TOTAL_M1 = $(1) + $(2) + $(3);
 
	if curocc() = 1 then
		if $(1) > (I2L02_TOTAL(1) + I3L07_KIDS_BORN(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Ram sold live for other purpose is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (I2L02_TOTAL(1) + I3L07_KIDS_BORN(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Ewe sold live for  other purpose is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (I2L02_TOTAL(1) + I3L07_KIDS_BORN(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Other sold live for  other purpose is greater than Total Supply");
		endif;

		if I4L13L15_HEAD_TOTAL_M1 > (I2L02_TOTAL(1) + I3L07_KIDS_BORN(1) + I3L08_GOATS_ACQUIRED(1)) then
			getErrorMsg("A. Total sold live for  other purpose is greater than Total Supply");
		endif;
	endif;
			
		savepartial();
PROC I4L27L29_FARMGATE_M1
postproc
// if $(curocc()) = notappl then   
	// getErrorMsg("Missing Entry");
// endif;
	
getOutOfRange($,1000,20000, "A. Average Farmgate price is not within the acceptable range.");

if I4L27L29_HEAD_M1 > 0 and ($ = notappl or $ = 0) then
	getErrorMsg("B. With entry in number of heads but no average farmgate price.");
endif;
	
if $ > 0 and (I4L27L29_HEAD_M1 = notappl or I4L27L29_HEAD_M1 = 0) then
	getErrorMsg("C. Without entry in number of heads but with farmgate price.");
endif;
	
I4L26_FARMGATE_TOTAL_M1 = $(1) + $(2) + $(3);
	
savepartial();
PROC I4L27L29_DESTINATION_M1
preproc
if I4L27L29_HEAD_M1(curocc()) in 0, notappl and I4L27L29_FARMGATE_M1(curocc()) in 0, notappl then
	skip to next;
endif;

postproc

	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;

if I4L27L29_HEAD_M1 > 0 and $ = notappl then
	if curocc() = 1 then
		getErrorMsg("A. Lamb has entry but no specified destination was selected");
	elseif curocc() = 2 then
		getErrorMsg("A. Ewe lamb has entry but no specified destination was selected");
	elseif curocc() = 3 then
		getErrorMsg("A. Others has entry but no specified destination was selected");
	endif;
endif;
	
// I4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
  
savepartial();
	
PROC I4L27L29_HEAD_M2
preproc
	//selection of ages
	if ischecked("A",I4FQ_L26L29) = 0 then 
		if curocc() = 1 then    
			move to I4L27L29_HEAD_M2(2); // punta ewe lamb
		endif;
	endif;

	if ischecked("B",I4FQ_L26L29) = 0 then 
		if curocc() = 2 then    
			move to I4L27L29_HEAD_M2(3);  // punta others
		endif;
	endif;

	if ischecked("C",I4FQ_L26L29) = 0 then 
		if curocc() = 3 then    
			move to I4L27L29_HEAD_M3(1); 
		endif;
	endif;
	 
postproc

I4L26_HEAD_TOTAL_M2 = $(1) + $(2) + $(3);

	if curocc() = 1 then
		if $(1) > (I2L02_TOTAL(1) + I3L07_KIDS_BORN(2) + I3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("A. Ram sold live for other purpose is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (I2L02_TOTAL(1) + I3L07_KIDS_BORN(2) + I3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("A. Ewe sold live for  other purpose is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (I2L02_TOTAL(1) + I3L07_KIDS_BORN(2) + I3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("A. Other sold live for  other purpose is greater than Total Supply");
		endif;

		if I4L13L15_HEAD_TOTAL_M1 > (I2L02_TOTAL(1) + I3L07_KIDS_BORN(2) + I3L08_GOATS_ACQUIRED(2)) then
			getErrorMsg("A. Total sold live for  other purpose is greater than Total Supply");
		endif;
	endif;
			
		savepartial();

PROC I4L27L29_FARMGATE_M2
postproc
// if $(curocc()) = notappl then   
	// getErrorMsg("Missing Entry");
// endif;
	
getOutOfRange($,1000,20000, "A. Average Farmgate price is not within the acceptable range.");
	
if I4L27L29_HEAD_M2 > 0 and ($ = notappl or $ = 0) then
	getErrorMsg("B. With entry in number of heads but no average farmgate price.");
endif;
	
if $ > 0 and (I4L27L29_HEAD_M2 = notappl or I4L27L29_HEAD_M2 = 0) then
	getErrorMsg("C. Without entry in number of heads but with farmgate price.");
endif;
	
I4L26_FARMGATE_TOTAL_M2 = $(1) + $(2) + $(3);
	
savepartial();

	
PROC I4L27L29_DESTINATION_M2
preproc
if I4L27L29_HEAD_M2(curocc()) in 0, notappl and I4L27L29_FARMGATE_M2(curocc()) in 0, notappl then
	skip to next;
endif;

postproc
if $(curocc()) = notappl then   
	getWarningMsg("W: Destination Entry - Blank");
endif;
	
if I4L27L29_HEAD_M2 > 0 and $ = notappl then
	if curocc() = 1 then
		getErrorMsg("B. Lamb has entry but no specified destination was selected");
	elseif curocc() = 2 then
		getErrorMsg("B. Ewe lamb has entry but no specified destination was selected");
	elseif curocc() = 3 then
		getErrorMsg("B. Others has entry but no specified destination was selected");
	endif;
endif;
	
// I4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
  
savepartial();

	
PROC I4L27L29_HEAD_M3
preproc
	//selection of ages
	if ischecked("A",I4FQ_L26L29) = 0 then 
		if curocc() = 1 then    
			move to I4L27L29_HEAD_M3(2); // punta ewe lamb
		endif;
	endif;

	if ischecked("B",I4FQ_L26L29) = 0 then 
		if curocc() = 2 then    
			move to I4L27L29_HEAD_M3(3);  // punta others
		endif;
	endif;

	if ischecked("C",I4FQ_L26L29) = 0 then 
		if curocc() = 3 then    
			move to I4L30_DEATHS; 
		endif;
	endif;
	 
postproc
 
I4L26_HEAD_TOTAL_M3 = $(1) + $(2) + $(3);
  
savepartial();
	if curocc() = 1 then
		if $(1) > (I2L02_TOTAL(1) + I3L07_KIDS_BORN(3) + I3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("A. Ram sold live for other purpose is greater than Total Supply");
		endif;
	elseif curocc() = 2 then
		if $(2) > (I2L02_TOTAL(1) + I3L07_KIDS_BORN(3) + I3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("A. Ewe sold live for  other purpose is greater than Total Supply");
		endif;
	elseif curocc() =  3 then
		if $(3) > (I2L02_TOTAL(1) + I3L07_KIDS_BORN(3) + I3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("A. Other sold live for  other purpose is greater than Total Supply");
		endif;

		if I4L13L15_HEAD_TOTAL_M1 > (I2L02_TOTAL(1) + I3L07_KIDS_BORN(3) + I3L08_GOATS_ACQUIRED(3)) then
			getErrorMsg("A. Total sold live for  other purpose is greater than Total Supply");
		endif;
	endif;
			
		savepartial();
PROC I4L27L29_FARMGATE_M3
postproc
// if $(curocc()) = notappl then   
	// getErrorMsg("Missing Entry");
// endif;
	
getOutOfRange($,1000,20000, "A. Average Farmgate price is not within the acceptable range.");
	
if I4L27L29_HEAD_M3 > 0 and ($ = notappl or $ = 0) then
	getErrorMsg("B. With entry in number of heads but no average farmgate price.");
endif;
	
if $ > 0 and (I4L27L29_HEAD_M3 = notappl or I4L27L29_HEAD_M3 = 0) then
	getErrorMsg("C. Without entry in number of heads but with farmgate price.");
endif;
	
I4L26_FARMGATE_TOTAL_M3 = $(1) + $(2) + $(3);
	
savepartial();
PROC I4L27L29_DESTINATION_M3
preproc
if I4L27L29_HEAD_M3(curocc()) in 0, notappl and I4L27L29_FARMGATE_M3(curocc()) in 0, notappl then
	skip to next;
endif;

postproc
if $(curocc()) = notappl then   
	getWarningMsg("W: Destination Entry - Blank");
endif;
	
if I4L27L29_HEAD_M3 > 0 and $ = notappl then
	if curocc() = 1 then
		getErrorMsg("C. Kid has entry but no specified destination was selected");
	elseif curocc() = 2 then
		getErrorMsg("C. Doeling has entry but no specified destination was selected");
	elseif curocc() = 3 then
		getErrorMsg("C. Others has entry but no specified destination was selected");
	endif;
endif;
	
  
// I4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
	
	
if I4L27L29_HEAD_M1(curocc()) = notappl and I4L27L29_FARMGATE_M1(curocc()) = notappl and I4L27L29_DESTINATION_M1(curocc()) = notappl and
   I4L27L29_HEAD_M2(curocc()) = notappl and I4L27L29_FARMGATE_M2(curocc()) = notappl and I4L27L29_DESTINATION_M2(curocc()) = notappl and
   I4L27L29_HEAD_M3(curocc()) = notappl and I4L27L29_FARMGATE_M3(curocc()) = notappl and I4L27L29_DESTINATION_M3(curocc()) = notappl then
	if curocc() = 1 then
		if ischecked("A", I4FQ_L26L29) = 1 then
			getErrorMsg("D. kid is selected but no entries"); 
		endif;
	elseif curocc() = 2 then
		if ischecked("B", I4FQ_L26L29) = 1 then
			getErrorMsg("E. doeling is selected but no entries"); 
		endif;
	elseif curocc() = 3 then
		if ischecked("C", I4FQ_L26L29) = 1 then
			getErrorMsg("F. others is selected but missing entries in number of heads and average farmgate price"); 
		endif;
	endif;
endif;
  
savepartial();
PROC I4L30_DEATHS
postproc
	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 2 then
		skip to I5L33_EWE_MILKLINE(1);
	endif;

	savepartial();

PROC I4FQ_L31L32
preproc
ask if I4L30_DEATHS = 1;

postproc
	if poschar("AB", $) = 0 then
		getErrorMsg("NO selected death/causes!");
	endif;
		
	savepartial();
PROC RTI4_DC000
postproc
	if ischecked("AB",I4FQ_L31L32) > 0 then
		if strip(ID_SHEEP_DISEASE) = "" and strip(ICA_SPECIFY) = "" then
			getErrorMsg("C. Deaths/losses is code 1 but disease and other causes is empty.");
		endif;
	endif;
PROC ID_SHEEP_DISEASE
preproc
ask if ischecked("A",I4FQ_L31L32);
	string xDa, xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp ;
	numeric cc = curocc();
	
postproc

if soccurs(RTI4_L31L32) = 0 then INSERT(RTI4_L31L32(1)); endif;
if soccurs(RTI4_L31L32) = 1 then INSERT(RTI4_L31L32(2)); endif;

  if ischecked("A",$ ) = 1 then xDa = "Antrax (Bacterial) "; 						endif;
  if ischecked("B",$ ) = 1 then xDb = "Black Leg Disease (Bacterial) ";  			endif;
  if ischecked("C",$ ) = 1 then xDc = "Blue Tongue (Viral) ";  					    endif;
  if ischecked("D",$ ) = 1 then xDd = "Botulism (Bacterial) ";                      endif;
  if ischecked("E",$ ) = 1 then xDe = "Brucellosis (Bacterial)  "; 					endif;
  if ischecked("F",$ ) = 1 then xDf = "Caprine Arthritis Encephalitis (Viral)"; 	endif;
  if ischecked("G",$ ) = 1 then xDg = "Colds "; 									endif;
  if ischecked("H",$ ) = 1 then xDh = "Diarrhea "; 									endif;
  if ischecked("I",$ ) = 1 then xDi = "Enteritis (Bacterial/Viral) ";  				endif;
  if ischecked("J",$ ) = 1 then xDj = "Enterotoxemia ";  							endif;
  if ischecked("K",$ ) = 1 then xDk = "Leptospirosis (Bacterial) ";  				endif;
  if ischecked("L",$ ) = 1 then xDl = "Pneumonia";  								endif;
  if ischecked("M",$ ) = 1 then xDm = "Rabies (Viral) ";  							endif;
  if ischecked("N",$ ) = 1 then xDn = "Tetanus (Bacterial)  ";  					endif;
  if ischecked("O",$ ) = 1 then xDo = "Vibriosis (Bacterial)  ";  					endif;
  if ischecked("P",$ ) = 1 then xDp = HDP_SPECIFY(cc); 								endif;

 
if curocc() = 3 then
	if poschar("ABCDEFGHIJKLMNOP", ID_SHEEP_DISEASE(1)) in 0, notappl then
		if poschar("ABCDEFGHIJKLMNOP", ID_SHEEP_DISEASE(2)) in 0, notappl then
			if poschar("ABCDEFGHIJKLMNOP", ID_SHEEP_DISEASE(3)) in 0, notappl then
				getErrorMsg("Please specify the cause of death due to other disease.");
			endif;	
		endif;	
	endif;	
endif;

    if curocc() = 1 then  I4L31L32_SPECIFY_M1(1) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp ); 
elseif curocc() = 2 then  I4L31L32_SPECIFY_M2(1) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp ); 
elseif curocc() = 3 then  I4L31L32_SPECIFY_M3(1) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp ); 
endif;

savepartial();
PROC IDA_IC

preproc 
ask if ischecked("A",I4FQ_L31L32) and ischecked("A",ID_SHEEP_DISEASE);

postproc
if $(curocc()) in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
  
getOutOfRange($,0,9999, "B. Verify inputed values.");

savepartial();
PROC IDB_IC
preproc 
	ask if ischecked("A",I4FQ_L31L32) and ischecked("B",ID_SHEEP_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC IDC_IC
preproc 
	ask if ischecked("A",I4FQ_L31L32) and ischecked("C",ID_SHEEP_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC IDD_IC
preproc 
	ask if ischecked("A",I4FQ_L31L32) and ischecked("D",ID_SHEEP_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC IDE_IC
preproc 
	ask if ischecked("A",I4FQ_L31L32) and ischecked("E",ID_SHEEP_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC IDF_IC
preproc 
	ask if ischecked("A",I4FQ_L31L32) and ischecked("F",ID_SHEEP_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC IDG_IC
preproc 
	ask if ischecked("A",I4FQ_L31L32) and ischecked("G",ID_SHEEP_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC IDH_IC
preproc 
	ask if ischecked("A",I4FQ_L31L32) and ischecked("H",ID_SHEEP_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC IDI_IC
preproc 
	ask if ischecked("A",I4FQ_L31L32) and ischecked("I",ID_SHEEP_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC IDJ_IC
preproc 
	ask if ischecked("A",I4FQ_L31L32) and ischecked("J",ID_SHEEP_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC IDK_IC
preproc 
	ask if ischecked("A",I4FQ_L31L32) and ischecked("K",ID_SHEEP_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC IDL_IC
preproc 
	ask if ischecked("A",I4FQ_L31L32) and ischecked("L",ID_SHEEP_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC IDM_IC
preproc 
	ask if ischecked("A",I4FQ_L31L32) and ischecked("M",ID_SHEEP_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC IDN_IC
preproc 
	ask if ischecked("A",I4FQ_L31L32) and ischecked("N",ID_SHEEP_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC IDO_IC
preproc 
	ask if ischecked("A",I4FQ_L31L32) and ischecked("O",ID_SHEEP_DISEASE);

postproc
	if $(curocc()) = notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;
  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC IDP_SPECIFY
preproc
	ask if ischecked("A",I4FQ_L31L32) and ischecked("P",ID_SHEEP_DISEASE);
	
postproc

	if strip($) = "" then
		getErrorMsg("C. Please specify the cause of death due to other disease.");
	endif;
	
	savepartial();
	
	
PROC IDP_IC
preproc 
	ask if ischecked("A",I4FQ_L31L32) and ischecked("P",ID_SHEEP_DISEASE);

postproc
  if  $(curocc()) > 0 and strip(IDP_SPECIFY (curocc())) = ""    then
		 	getErrorMsg("There is no specified disease/s of deaths but with entries in number of deaths");
	elseif not IDP_IC(curocc()) > 0 and not strip(IDP_SPECIFY (curocc())) = ""    then
		getErrorMsg("With reason on other disease but no entry in number of deaths.");
	endif;
	
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	savepartial();
PROC ICA_SPECIFY

preproc
ask if ischecked("B",I4FQ_L31L32);

postproc
 
   if curocc() = 1 then   I4L31L32_SPECIFY_M1(2) = $(curocc()); 
elseif curocc() = 2 then  I4L31L32_SPECIFY_M2(2) = $(curocc()); 
elseif curocc() = 3 then  I4L31L32_SPECIFY_M3(2) = $(curocc());
endif;
	savepartial();
	
	
PROC ICA_SP_IC
preproc
ask if ischecked("B",I4FQ_L31L32) and strip(ICA_SPECIFY) <> "";

postproc
if $(curocc()) = notappl and curocc() = 3 then   
		getErrorMsg("No corresponding number of deaths");
	endif;
	  
	getOutOfRange($,0,9999, "B. Verify inputed values.");
  
	if  $(curocc()) > 0 and strip(ICA_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	endif;
	
	if ICA_SP_IC(curocc()) > I2L02_TOTAL(1) + I3L07_KIDS_BORN(1) + I3L08_GOATS_ACQUIRED(1) then
		getErrorMsg("Other causes is greater than Total Supply.");
	endif;

		if curocc() = 1 then  I4L31L32_HEADS_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  I4L31L32_HEADS_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  I4L31L32_HEADS_M3(2) = $(curocc());
	endif;	

	if  $(curocc()) > 0 and strip(ICA_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	endif;
	
	savepartial();
PROC ICB_SPECIFY
preproc
ask if ischecked("B",I4FQ_L31L32);
postproc
 
   if curocc() = 1 then   I4L31L32_SPECIFY_M1(2) = $(curocc()); 
elseif curocc() = 2 then  I4L31L32_SPECIFY_M2(2) = $(curocc()); 
elseif curocc() = 3 then  I4L31L32_SPECIFY_M3(2) = $(curocc());
endif;
	savepartial();
	
	
PROC ICB_SP_IC
preproc
ask if ischecked("B",I4FQ_L31L32) and strip(ICB_SPECIFY) <> "";
postproc
if  $(curocc()) > 0 and strip(ICB_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	endif;
	
	if ICB_SP_IC(curocc()) > I2L02_TOTAL(1) + I3L07_KIDS_BORN(2) + I3L08_GOATS_ACQUIRED(2) then
		getErrorMsg("Other causes is greater than Total Supply.");
	endif;
	  
	getOutOfRange($,0,9999, "B. Verify inputed values.");

		if curocc() = 1 then  I4L31L32_HEADS_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  I4L31L32_HEADS_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  I4L31L32_HEADS_M3(2) = $(curocc());
	endif;	

	 
	if  $(curocc()) > 0 and strip(ICB_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	endif;
	
	savepartial();
PROC ICC_SPECIFY
preproc
ask if ischecked("B",I4FQ_L31L32);
postproc
 
	if curocc() = 1 then   I4L31L32_SPECIFY_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  I4L31L32_SPECIFY_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  I4L31L32_SPECIFY_M3(2) = $(curocc());
	endif;
	if curocc() = 3 then    	
		if  strip(ICA_SPECIFY(1)) = "" and strip(ICA_SPECIFY(2)) = "" and strip(ICA_SPECIFY(3)) = "" and
			strip(ICB_SPECIFY(1)) = "" and strip(ICB_SPECIFY(2)) = "" and strip(ICB_SPECIFY(3)) = "" and 
			strip($(1)) = "" and strip($(2)) = "" and strip($(3)) = "" then
				getErrorMsg("D. Please specify the cause of death due to other causes.");
		endif;
	endif;
	savepartial();
	
PROC ICC_SP_IC
preproc
ask if ischecked("B",I4FQ_L31L32) and strip(ICC_SPECIFY) <> "";
postproc
	if $(curocc()) = notappl and curocc() = 3 then   
		getErrorMsg("No corresponding number of deaths");
	endif;
	  
	getOutOfRange($,0,9999, "B. Verify inputed values.");

		if curocc() = 1 then  I4L31L32_HEADS_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  I4L31L32_HEADS_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  I4L31L32_HEADS_M3(2) = $(curocc());
	endif;	

	if  $(curocc()) > 0 and strip(ICC_SPECIFY(curocc())) = ""    then
		 	getErrorMsg("There is no specified cause/s of deaths but with entries in number of deaths");
	endif;
	
	savepartial();
PROC RTI5_L33L44000
preproc
if I1L01_TYPE_OF_OPERATION in 3,5,6,7 then
	oks=1;
else
	skip to remarks;
endif;
PROC I5L33_EWE_MILKLINE
preproc
	if !(I1L01_TYPE_OF_OPERATION in 3,5,6,7) then
		skip to REMARKS;
	endif;
	
postproc

	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
  
	getOutOfRangeW($(curocc()),0,99999);
	
	// If number of does in the milkline is > than the beggining inventory of doe + Other Ages + Acquired
	tempBI  = I2L04_EWE(1) + I2L05_OTHER_AGES(1) + I3L08_GOATS_ACQUIRED(1);
	if $ > tempBI then
		getErrorMsg("Number of does in the milkline exceeds the inventory of doe, Other Ages, and Acquired");
	endif;
	
	savepartial();
PROC I5L34_AVE_MILK_DAY
postproc
if $(curocc()) = notappl then   
	getErrorMsg("Missing Entry");
endif;

if I5L33_EWE_MILKLINE(curocc()) > 0 then
	if I5L34_AVE_MILK_DAY(curocc()) in 0, notappl then
		getErrorMsg("Number of ewes in the milkline is greater than zero, but the average milking days is zero.");
	endif;
elseif I5L33_EWE_MILKLINE(curocc()) in 0, notappl then
	if I5L34_AVE_MILK_DAY(curocc()) > 0 then
		getErrorMsg("Average milking days is greater than zero, but ewes in the milkline is zero.");
	endif;
endif;

	
if curocc() = 1 then
	if $ > refdays1 then
		getErrorMsg(maketext("Average number of milking days is higher than the total number of days for the month of %s.",E2_QtrMonth(curocc())));
	endif;
elseif curocc() = 2 then
	if $ > refdays2 then
		getErrorMsg(maketext("Average number of milking days is higher than the total number of days for the month of %s.",E2_QtrMonth(curocc())));
	endif;
elseif curocc() = 3 then
	if $ > refdays3 then
		getErrorMsg(maketext("Average number of milking days is higher than the total number of days for the month of %s.",E2_QtrMonth(curocc())));
	endif;
endif;
  
savepartial();
PROC I5L35_AVE_MILK_PROD
postproc
if $(curocc()) = notappl then   
	getErrorMsg("Missing Entry");
endif;

if I5L33_EWE_MILKLINE(curocc()) > 0 then
	if I5L34_AVE_MILK_DAY(curocc()) > 0 then
		if I5L35_AVE_MILK_PROD(curocc()) in 0, notappl then
			getErrorMsg("Number of ewes in the milkline and average number of milking days is greater than zero, but the average milk production per day is zero.");
		else
			getOutOfRange($,0.5,5.00, "Average milk production (in liter) per day is not within the acceptable range.");
		endif;
	endif;
endif;  
  
savepartial();
PROC I5L36_TOTAL_MILK_PROD
savepartial();
PROC I5L37_CONSUMED_HOME
postproc
if $(curocc()) = notappl then   
	getErrorMsg("Missing Entry");
endif;
  
getOutOfRange($,1,100.00, "A. Entered value is greater than 100 percent. Verify inputed data");
  
savepartial();
PROC I5L38_FED_CALVES
postproc
if $(curocc()) = notappl then   
	getErrorMsg("Missing Entry");
endif;
  
getOutOfRange($,1,100.00, "A. Entered value is greater than 100 percent. Verify inputed data");
  
savepartial();
PROC I5L39_WASTAGE
postproc
if $(curocc()) = notappl then   
	getErrorMsg("Missing Entry");
endif;
  
getOutOfRange($,1,100.00, "A. Entered value is greater than 100 percent. Verify inputed data");
  
savepartial();
  
PROC I5L40_FRESH_MILK

postproc

I5L36_TOTAL_MILK_PROD(curocc()) = I5L37_CONSUMED_HOME(curocc()) + I5L38_FED_CALVES(curocc()) + I5L39_WASTAGE(curocc()) + I5L40_FRESH_MILK(curocc());

if $(curocc()) = notappl then   
	getErrorMsg("Missing Entry");
endif;
  
getOutOfRange($,1,100.00, "A. Entered value is greater than 100 percent. Verify inputed data");
	
if $ > 0 then
	if I5L36_TOTAL_MILK_PROD(curocc()) = 0 then
		getErrorMsg("B.sold as raw milk is greater than zero but computed milk production is zero. Please verify the milk disposition or milk production.");
	endif;
else
	// if $ = 0 then
		// skip to I5L33_EWE_MILKLINE(2);
	// endif;
endif;
	
if I5L36_TOTAL_MILK_PROD(curocc()) < 100 and I5L36_TOTAL_MILK_PROD(curocc()) <> 0 then
	getErrorMsg("C. sum of 1:4 is less than 100%. Verify the inputted data");
endif;
	
if I5L37_CONSUMED_HOME(curocc()) = 0 and I5L38_FED_CALVES(curocc()) = 0 and I5L39_WASTAGE(curocc()) = 0 and I5L40_FRESH_MILK(curocc()) = 0 and I5L35_AVE_MILK_PROD(curocc()) > 0 then
	getErrorMsg("F. With entry in Total milk produced (in liters) but without entry in any items of consumed /processed at home,  fed to caracalves, wastage, and sold as raw milk");
endif;
	
if I5L36_TOTAL_MILK_PROD(curocc()) > 0 and I5L33_EWE_MILKLINE(curocc()) = 0 and I5L34_AVE_MILK_DAY(curocc()) = 0 and I5L35_AVE_MILK_PROD(curocc()) = 0 then
	getErrorMsg("G. Milk production indicator has no entry but milk disposition has entry");
endif;
	
if I5L36_TOTAL_MILK_PROD(curocc()) > 100 then
		getErrorMsg("Entered value is greater than 100 percent. Verify inputed data");
	endif;	

savepartial();
PROC I5L41_TOTAL_M1
preproc
numeric x = curocc();
  $(x) = I5L33_EWE_MILKLINE(x) * I5L34_AVE_MILK_DAY(x) *  I5L35_AVE_MILK_PROD(x) *(I5L40_FRESH_MILK(x)/100);
	savepartial();
PROC I5L42_SOLD_VOL_PCC
postproc
if not $(curocc()) in 0:999999.99 then
		getWarningMsg("Entry(PCC Volume) is not in acceptable range");
	endif; 
	
savepartial();

  
PROC I5L42_MILK_FG_PCC
postproc

if not $(curocc()) in 0,40.00:180.00 then
	getWarningMsg("Entry(PCC Ave. Farmgate Price) is not in acceptable range");
elseif $(curocc()) in 40.00:180.00 then
	getWarningMsg("Verify the inputted entry. Sheep's milk will only sold to NDA or Other than NDA");
endif;
    
savepartial();
PROC I5L43_SOLD_VOL_NDA
postproc
if not $(curocc()) in 0:999999.99 then
		getWarningMsg("Entry(NDA Volume) is not in acceptable range");
	endif; 
	
  
savepartial();

  
PROC I5L43_MILK_FG_NDA
postproc
if not $(curocc()) in 0,40.00:180.00 then
	getWarningMsg("Entry(PCC Ave. Farmgate Price) is not in acceptable range");
endif;

if I5L43_SOLD_VOL_NDA(curocc()) > 0 then
	if ($ = 0 or $ = notappl) then
		getErrorMsg("a. Missing entry in average farmgate");
	endif;
else
	if I5L43_SOLD_VOL_NDA(curocc()) = 0 then
		if $ > 0 then
			getErrorMsg("b. Missing entry in Volume/Number (in liter)");
		endif;
	endif;
endif;
	
savepartial();
	
PROC I5L44_SOLD_VOL_OTHER
postproc
if not $(curocc()) in 0:999999.99 then
		getWarningMsg("Entry(Other Volume) is not in acceptable range");
	endif; 
	
  
savepartial();
  
PROC I5L44_MILK_FG_OTHER
postproc
if not $(curocc()) in 0,40.00:180.00 then
	getWarningMsg("Entry(PCC Ave. Farmgate Price) is not in acceptable range");
endif;
	
if curocc() = 1 then
	xblockE4_m1 = I5L42_SOLD_VOL_PCC(1) + I5L43_SOLD_VOL_NDA(1) + I5L44_SOLD_VOL_OTHER(1);
	I5L41_TOTAL_M1(1) = xblockE4_m1;
elseif curocc() = 2 then
	xblockE4_m2 = I5L42_SOLD_VOL_PCC(2) + I5L43_SOLD_VOL_NDA(2) + I5L44_SOLD_VOL_OTHER(2);
	I5L41_TOTAL_M1(2) = xblockE4_m2;
elseif curocc() = 3 then
	xblockE4_m3 = I5L42_SOLD_VOL_PCC(3) + I5L43_SOLD_VOL_NDA(3) + I5L44_SOLD_VOL_OTHER(3);
	I5L41_TOTAL_M1(3) = xblockE4_m3;
endif;
	
if I5L44_SOLD_VOL_OTHER(curocc()) > 0 then
	if ($ = 0 or $ = notappl) then
		getErrorMsg("a. Missing entry in average farmgate");
	endif;
else
	if I5L44_SOLD_VOL_OTHER(curocc()) = 0 then
		if $ > 0 then
			getErrorMsg("b. Missing entry in Volume/Number (in liter)");
		endif;
	endif;
endif;
	
// I5L41_TOTAL_M1(curocc()) = I5L42_SOLD_VOL_PCC(curocc()) + I5L43_SOLD_VOL_NDA(curocc()) + I5L44_SOLD_VOL_OTHERS(curocc());
	
tempTotal = ((I5L40_FRESH_MILK(curocc())/100) * (I5L33_EWE_MILKLINE(curocc()) * I5L34_AVE_MILK_DAY(curocc()) * I5L35_AVE_MILK_PROD(curocc())));
	
if I5L41_TOTAL_M1(curocc()) <> tempTotal then
	errmsg("Total sold as fresh milk %10.2f is not equal to %10.2f. (Sum of sold to PCC, NDA, and Other than PCC/NDA is less than or greater than LN 41 x Total Milk Produced)",I5L41_TOTAL_M1(curocc()),tempTotal)
	select("Milk Production",I5L33_EWE_MILKLINE(curocc()),"Sold as Fresh Milk",I5L40_FRESH_MILK(curocc()),"Milk Destination",I5L42_SOLD_VOL_PCC(curocc()));
endif;
    
savepartial();


	
PROC I5L44_OTHER_MTH
preproc
	ask if I5L44_SOLD_VOL_OTHER(curocc()) > 0 and I5L44_MILK_FG_OTHER(curocc()) > 0 ;
	
postproc
	if I5L44_SOLD_VOL_OTHER(1) > 0 or I5L44_SOLD_VOL_OTHER(2) > 0 or I5L44_SOLD_VOL_OTHER(3) > 0 or
		I5L44_MILK_FG_OTHER(1) > 0 or I5L44_MILK_FG_OTHER(2) > 0 or I5L44_MILK_FG_OTHER(3) > 0 then
		if strip($) = "" then
			getErrorMsg("Missing entry in specify! Please specify other destination!");
		endif;
	endif;

	if I5L44_SOLD_VOL_OTHER(1) in 0, notappl and I5L44_SOLD_VOL_OTHER(2) in 0, notappl and I5L44_SOLD_VOL_OTHER(3) in 0, notappl and
		I5L44_MILK_FG_OTHER(1) in 0, notappl and I5L44_MILK_FG_OTHER(2) in 0, notappl and I5L44_MILK_FG_OTHER(3) in 0, notappl then
		if !(strip($) = "") then
			getErrorMsg("Item specify should be blank!");
		endif;
	endif; 


	savepartial();
PROC GROUP006_BROILER

preproc
if D2L12_BROILER   = 6 then
	ok = 1
else
	skip to REMARKS
endif;
PROC J1L01_TYPE_OF_OPERATION
	if not $ in 1:7 then
		getErrorMsg("A. No selected type of operation. Please select type of operation.");
	endif;
	
	if $ = 1 then
		oks = 1;
	else
		skip to J1L03_CONT_GROWING;
	endif;
	
	savepartial();
PROC J1L02_BREEDING_CLASSIFICATION
if $ > 0 then
	if J1L01_TYPE_OF_OPERATION in 1,3 then
		oks = 1;
	else
		getErrorMsg("Item J.1.1 (Type of operation/s) is breeding but breeding classification was not selected. Please enter a valid code.");

	endif;
else
	if J1L01_TYPE_OF_OPERATION in 1,3 then
		getErrorMsg("Item J.1.2 (Breeding classification) did not match the allowed combinations with J.1.1 (Type of operation/s).");
	
	endif;
endif;

	savepartial();
PROC J1L03_CONT_GROWING
postproc
if not J1L03_CONT_GROWING in 1:2 then
	getErrorMsg("Item J.1.1 (Engagement to Contract Growing) did not matched any of the valid codes. Please verify the inputted code.");
endif;
PROC J2L02_TOTAL
postproc
if CHANGE_FARM_CAP > 0 then
	if J2L02_TOTAL(2) > CHANGE_FARM_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;

else
	if J2L02_TOTAL(2) > MAX_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;
endif;
	savepartial();
PROC J2L05_LAYING_FLOCK_COCK
if J1L01_TYPE_OF_OPERATION = 2 then
	if J2L05_LAYING_FLOCK_COCK(curocc()) > 0 then
		getErrorMsg("Type of operation is grow-out only but with entry in Laying Flock/Cock.");
	endif;
elseif J1L01_TYPE_OF_OPERATION in 1, 3 then
	if $(curocc()) > J2L02_TOTAL(curocc())  then
		getErrorMsg("A. Inventory of Laying flock is greater than the total inventory ");
	endif;
endif;
	
	savepartial();
PROC J2L03_GROWER
	if $(curocc()) > J2L02_TOTAL(curocc())  then
		getErrorMsg("A. Inventory of grower is greater than the total inventory ");
	endif;
	
	savepartial();
PROC J2L04_DAY_OLD_CHICK
postproc
	numeric xJ2TotInventory = visualvalue(J2L03_GROWER) + visualvalue(J2L04_DAY_OLD_CHICK) + visualvalue(J2L05_LAYING_FLOCK_COCK);

	if xJ2TotInventory <> visualvalue(J2L02_TOTAL) then
		getErrorMsg(" The total inventory of broiler is not equal to the breakdown. ");
	endif;

	if $ > visualvalue(J2L02_TOTAL) then
		getErrorMsg(" Inventory of Other Ages is greater than the total inventory.");
	endif;

	getOutOfRange($,0,9999999," Please verify the inputted code ");

	savepartial();
PROC J3L05_TOTAL
	savepartial();
PROC J3L09_HATCHED_LIVE
postproc
if J1L01_TYPE_OF_OPERATION = 2 then
	if J3L09_HATCHED_LIVE(curocc()) > 0 then
		getErrorMsg("Item I.1.1 (Type of operation/s) is code 2 (Grow-out) but there is/are entry/ies in Item I.3.1 (hatched live). Please verify the encoded entry/ies or the type of operation/s.");
	endif;
else
	getOutOfRange($,0,9999999," Please verify the inputted code ");
endif;

	savepartial();
PROC J3L06_GROWER_RCVD
postproc
	getOutOfRange($,0,9999999," Please verify the inputted code ");

	savepartial();
PROC J3L07_DOC_RCVD

	numeric xtotJ2;

	//Computation
	J3L05_TOTAL(curocc())   = visualvalue(J3L09_HATCHED_LIVE(curocc())) + visualvalue(J3L06_GROWER_RCVD(curocc())) +  J3L07_DOC_RCVD(curocc());
	 

	if curocc() = 1 then
		   J3L05L07_TOT_SUPPLY(1) = visualvalue(J2L02_TOTAL(1)) + visualvalue(J3L05_TOTAL(1));
	elseif curocc() = 2 then
		   J3L05L07_TOT_SUPPLY(2) = visualvalue(J2L02_TOTAL(1)) + visualvalue(J3L05_TOTAL(2));
	elseif curocc() = 3 then
		   J3L05L07_TOT_SUPPLY(3) = visualvalue(J2L02_TOTAL(1)) + visualvalue(J3L05_TOTAL(3));
	endif;

	 xtotJ2 = visualvalue(J2L02_TOTAL(1)) + visualvalue(J2L02_TOTAL(2));
	 
	J3L05L07_TOT_SUPPLY_QTR =   xtotJ2 + J3L05L07_TOT_SUPPLY(1) + J3L05L07_TOT_SUPPLY(2) +  J3L05L07_TOT_SUPPLY(3) ;
    
	
	// DV
	getOutOfRange($,0,9999999," Please verify the inputted code ");


	savepartial();


PROC J4L08_CUR_YR
	if $ in 1:2 then
		if $ = 2 then
			skip to J4L28_SOLD_OTHER_PURPOSE;
		endif;
	else
		getNoAcceptCode();
	endif;
	
	savepartial();
PROC J4FQ_L09L11
	if poschar("ABC", $) = 0 then
		getErrorMsg("NO selected ages of broiler slaughtered in the household farm!");
	elseif poschar("C", $) > 0 and poschar("AB", $) > 0 then
		getErrorMsg("Selection not allowed! 'C - None' cannot be selected with other choices!");
	else
		if poschar("C", $) > 0 and poschar("AB", $) = 0 then
			skip to J4FQ_L12L14;
		endif;
	endif;
	
	savepartial();
	
PROC J4L09_BIRDS_M1
preproc

	if ischecked("A",J4FQ_L09L11) = 0 then 
		if curocc() = 1 then    
			move to J4L09_BIRDS_M1(2); // punta breeder
		endif;		
	endif;

	if ischecked("B",J4FQ_L09L11) = 0 then 
		if curocc() = 2 then    
			move to J4L09_BIRDS_M2(1);  
		endif;
	endif;
	
 
postproc


	xblockE1_m1 = $(1) + $(2);
	J4L09_BIRDS_TOT_M1 = xblockE1_m1;	 
	
	
    if J4L09_BIRDS_M1(curocc()) > visualvalue(J2L02_TOTAL(1)) + visualvalue(J3L05_TOTAL(1)) then
	   getErrorMsg("J.011 Broiler dressed on establishment is greater than Beginning Inventory + Growers Recieved");
		reenter
	endif;
	savepartial();
  
PROC J4L10_LIVEWEIGHT_M1
	if J4L09_BIRDS_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,0.75,2.50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,2,6,"A. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of birds or average liveweight");
		endif;
	elseif J4L09_BIRDS_M1(curocc()) in 0,notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of birds or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", J4FQ_L09L11) = 1 then
						getErrorMsg("No entry, enter 0 if none"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", J4FQ_L09L11) = 1 then
						getErrorMsg("F. Breeder is selected but missing entries in number of birds and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;
	
	savepartial();
PROC J4L11_FARMGATE_M1
if J4L09_BIRDS_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
			//if skiptonext = 1 then skip to next endif;
		elseif curocc() = 2 then  
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
			//if skiptonext = 1 then skip to next endif;
		endif; 
		//errmsg("skip = %d",skiptonext);
		//if skiptonext = 1 then skip to next endif;
		
		
		if J4L10_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif J4L10_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif J4L10_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		endif;
	elseif J4L09_BIRDS_M1(curocc()) in 0, notappl then
			if J4L10_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif J4L10_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif J4L10_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			endif;	
				
			if J4L10_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
				if curocc() = 1 then
					if ischecked("A", J4FQ_L09L11) = 1 then
						getErrorMsg("J. Broiler is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", J4FQ_L09L11) = 1 then
						getErrorMsg("J. Breeder is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;

	
	savepartial();
	
PROC J4L09_BIRDS_M2
preproc
	//selection of ages
	if ischecked("A",J4FQ_L09L11) = 0 then 
		if curocc() = 1 then    
			move to J4L09_BIRDS_M2(2); // punta breeder
		endif;		
	endif;

	if ischecked("B",J4FQ_L09L11) = 0 then 
		if curocc() = 2 then    
			move to J4L09_BIRDS_M3(1);  
		endif;
	endif;

 
 
postproc


	xblockE1_m2 = $(1) + $(2);
	J4L09_BIRDS_TOT_M2 = xblockE1_m2;	 
	
if $(curocc()) > visualvalue(J2L02_TOTAL(1)) + visualvalue(J3L05_TOTAL(1))+ visualvalue(J3L05_TOTAL(2)) then
    getErrorMsg("J.012 Broiler dressed on establishment is greater than Beginning Inventory + Growers Recieved");
	reenter
endif;
	savepartial();



  
PROC J4L10_LIVEWEIGHT_M2
	if J4L09_BIRDS_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,0.75,2.50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,2,6,"A. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of birds or average liveweight");
		endif;
	elseif J4L09_BIRDS_M2(curocc()) in 0,notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of birds or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", J4FQ_L09L11) = 1 then
						getErrorMsg("F. Broiler is selected but missing entries in number of birds and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", J4FQ_L09L11) = 1 then
						getErrorMsg("F. Breeder is selected but missing entries in number of birds and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;

	savepartial();
PROC J4L11_FARMGATE_M2
if J4L09_BIRDS_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if J4L10_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif J4L10_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif J4L10_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		endif;
	elseif J4L09_BIRDS_M2(curocc()) in 0, notappl then
			if J4L10_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif J4L10_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif J4L10_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			endif;	
				
			if J4L10_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
				if curocc() = 1 then
					if ischecked("A", J4FQ_L09L11) = 1 then
						getErrorMsg("J. Broiler is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", J4FQ_L09L11) = 1 then
						getErrorMsg("J. Breeder is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;


	savepartial();
	
PROC J4L09_BIRDS_M3
preproc
	//selection of ages
	if ischecked("A",J4FQ_L09L11) = 0 then 
		if curocc() = 1 then    
			move to J4L09_BIRDS_M3(2); // punta breeder
		endif;		
	endif;

	if ischecked("B",J4FQ_L09L11) = 0 then 
		if curocc() = 2 then    
			move to J4FQ_L12L14;  
		endif;
	endif;

 
 
postproc


	xblockE1_m3 = $(1) + $(2);
	J4L09_BIRDS_TOT_M3 = xblockE1_m3;	 
	
if J4L09_BIRDS_M3(curocc()) > visualvalue(J2L02_TOTAL(1)) + visualvalue(J3L05_TOTAL(1)) + visualvalue(J3L05_TOTAL(2)) + visualvalue(J3L05_TOTAL(3)) then
	getErrorMsg("J.012 Broiler dressed on establishment is greater than Beginning Inventory + Growers Recieved");
	reenter
endif;
	savepartial();
PROC J4L10_LIVEWEIGHT_M3
	if J4L09_BIRDS_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,0.75,2.50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,2,6,"A. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of birds or average liveweight");
		endif;
	elseif J4L09_BIRDS_M3(curocc()) in 0,notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of birds or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", J4FQ_L09L11) = 1 then
						getErrorMsg("F. Broiler is selected but missing entries in number of birds and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", J4FQ_L09L11) = 1 then
						getErrorMsg("F. Breeder is selected but missing entries in number of birds and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;
	
	savepartial();
PROC J4L11_FARMGATE_M3
if J4L09_BIRDS_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if J4L10_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif J4L10_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif J4L10_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		endif;
	elseif J4L09_BIRDS_M3(curocc()) in 0, notappl then
			if J4L10_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif J4L10_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif J4L10_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			endif;	
				
			if J4L10_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
				if curocc() = 1 then
					if ischecked("A", J4FQ_L09L11) = 1 then
						getErrorMsg("J. Broiler is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", J4FQ_L09L11) = 1 then
						getErrorMsg("J. Breeder is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;

	
	if curocc() = 1 then
		if (J4L09_BIRDS_M1(1) + J4L09_BIRDS_M2(1) + J4L09_BIRDS_M3(1) = 0) then
			getErrorMsg("Broiler is selected but zero entries in all months");
		endif;		
	elseif curocc() = 2 then
		if (J4L09_BIRDS_M1(2) + J4L09_BIRDS_M2(2) + J4L09_BIRDS_M3(2) = 0) then
			getErrorMsg("Breeder is selected but zero entries in all months");
		endif;	
	endif;

	savepartial();
	
PROC J4FQ_L12L14
	if poschar("ABC", $) = 0 then
		getErrorMsg("NO selected sheep sold live for slaughter!");
	elseif poschar("C", $) > 0 and poschar("AB", $) > 0 then
		getErrorMsg("Selection not allowed! 'C - None' cannot be selected with other choices!");
	else
		if poschar("C", $) > 0 and poschar("AB", $) = 0 then
			skip to J4L15_PREV_YR;
		endif;
	endif;
	
	
PROC J4L12_BIRDS_M1
preproc
	//selection of ages
	if ischecked("A",J4FQ_L12L14) = 0 then 
		if curocc() = 1 then    
			move to J4L12_BIRDS_M1(2); // punta breeder
		endif;		
	endif;

	if ischecked("B",J4FQ_L12L14) = 0 then 
		if curocc() = 2 then    
			move to J4L12_BIRDS_M2(1);  
		endif;
	endif;

 
 
postproc


	xblockE1_m1 = $(1) + $(2);
	J4L12_BIRDS_TOT_M1 = xblockE1_m1;
	
    if $(curocc()) > visualvalue(J2L02_TOTAL(1)) + visualvalue(J3L05_TOTAL(1)) then
	   getErrorMsg("J.011 Broiler dressed on establishment is greater than Beginning Inventory + Growers Recieved");
	endif;
	savepartial();

	
PROC J4L13_LIVEWEIGHT_M1
	if J4L12_BIRDS_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,0.75,2.50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,2,6,"A. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of birds or average liveweight");
		endif;
	elseif J4L12_BIRDS_M1(curocc()) in 0,notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of birds or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", J4FQ_L12L14) = 1 then
						getErrorMsg("F. Broiler is selected but missing entries in number of birds and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", J4FQ_L12L14) = 1 then
						getErrorMsg("F. Breeder is selected but missing entries in number of birds and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;

	
	savepartial();
PROC J4L14_FARMGATE_M1
if J4L12_BIRDS_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if J4L13_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif J4L13_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc())  in 0, notappl then
			getErrorMsg("G. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif J4L13_LIVEWEIGHT_M1(curocc())  in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		endif;
	elseif J4L12_BIRDS_M1(curocc()) in 0, notappl then
			if J4L13_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif J4L13_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif J4L13_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			endif;	
				
			if J4L13_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
				if curocc() = 1 then
					if ischecked("A", J4FQ_L12L14) = 1 then
						getErrorMsg("J. Broiler is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", J4FQ_L12L14) = 1 then
						getErrorMsg("J. Breeder is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;

	savepartial();
	
PROC J4L12_BIRDS_M2
preproc
	//selection of ages
	if ischecked("A",J4FQ_L12L14) = 0 then 
		if curocc() = 1 then    
			move to J4L12_BIRDS_M2(2); // punta breeder
		endif;		
	endif;

	if ischecked("B",J4FQ_L12L14) = 0 then 
		if curocc() = 2 then    
			move to J4L12_BIRDS_M3(1);  
		endif;
	endif;

 
 
postproc


	xblockE1_M2 = $(1) + $(2);
	J4L12_BIRDS_TOT_M2 = xblockE1_M2;	 
	
	
    if $(curocc()) > visualvalue(J2L02_TOTAL(1)) + visualvalue(J3L05_TOTAL(1)) then
	   getErrorMsg("J.011 Broiler dressed on establishment is greater than Beginning Inventory + Growers Recieved");
	endif;
	savepartial();
  
PROC J4L13_LIVEWEIGHT_M2
	if J4L12_BIRDS_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,0.75,2.50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,2,6,"A. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of birds or average liveweight");
		endif;
	elseif J4L12_BIRDS_M2(curocc()) in 0,notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of birds or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", J4FQ_L12L14) = 1 then
						getErrorMsg("F. Broiler is selected but missing entries in number of birds and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", J4FQ_L12L14) = 1 then
						getErrorMsg("F. Breeder is selected but missing entries in number of birds and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;
	
	savepartial();
PROC J4L14_FARMGATE_M2
if J4L12_BIRDS_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if J4L13_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif J4L13_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif J4L13_LIVEWEIGHT_M2(curocc()) = notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		endif;
	elseif J4L12_BIRDS_M2(curocc()) in 0, notappl then
			if J4L13_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif J4L13_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif J4L13_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			endif;	
				
			if J4L13_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
				if curocc() = 1 then
					if ischecked("A", J4FQ_L12L14) = 1 then
						getErrorMsg("J. Broiler is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", J4FQ_L12L14) = 1 then
						getErrorMsg("J. Breeder is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;

	savepartial();
	
PROC J4L12_BIRDS_M3
preproc
	//selection of ages
	if ischecked("A",J4FQ_L12L14) = 0 then 
		if curocc() = 1 then    
			move to J4L12_BIRDS_M3(2); // punta breeder
		endif;		
	endif;

	if ischecked("B",J4FQ_L12L14) = 0 then 
		if curocc() = 2 then    
			move to J4L15_PREV_YR;  
		endif;
	endif;

 
 
postproc



	xblockE1_M3 = $(1) + $(2);
	J4L12_BIRDS_TOT_M3 = xblockE1_M3;	 
	
	
    if $(curocc()) > visualvalue(J2L02_TOTAL(1)) + visualvalue(J3L05_TOTAL(1)) then
	   getErrorMsg("J.011 Broiler dressed on establishment is greater than Beginning Inventory + Growers Recieved");
	endif;
	savepartial();
PROC J4L13_LIVEWEIGHT_M3
	if J4L12_BIRDS_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,0.75,2.50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,2,6,"A. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of birds or average liveweight");
		endif;
	elseif J4L12_BIRDS_M3(curocc()) in 0,notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of birds or average liveweight");
			elseif $(curocc()) = notappl then
				if curocc() = 1 then
					if ischecked("A", J4FQ_L12L14) = 1 then
						getErrorMsg("F. Broiler is selected but missing entries in number of birds and average liveweight"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", J4FQ_L12L14) = 1 then
						getErrorMsg("F. Breeder is selected but missing entries in number of birds and average liveweight"); 
					endif;
				endif;
			endif;
			
		endif;

	savepartial();
PROC J4L14_FARMGATE_M3
if J4L12_BIRDS_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if J4L13_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif J4L13_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif J4L13_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		endif;
	elseif J4L12_BIRDS_M3(curocc()) in 0, notappl then
			if J4L13_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif J4L13_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif J4L13_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			endif;	
				
			if J4L13_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
				if curocc() = 1 then
					if ischecked("A", J4FQ_L12L14) = 1 then
						getErrorMsg("J. Broiler is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					endif;
				elseif curocc() = 2 then
					if ischecked("B", J4FQ_L12L14) = 1 then
						getErrorMsg("J. Breeder is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					endif;
				endif;
			endif;
			
		endif;
	
	if curocc() = 1 then
		if (J4L12_BIRDS_M1(1) + J4L12_BIRDS_M2(1) + J4L12_BIRDS_M3(1) = 0) then
			getErrorMsg("Broiler is selected but zero entries in all months");
		endif;		
	elseif curocc() = 2 then
		if (J4L12_BIRDS_M1(2) + J4L12_BIRDS_M2(2) + J4L12_BIRDS_M3(2) = 0) then
			getErrorMsg("Breeder is selected but zero entries in all months");
		endif;	
	endif;
	

	savepartial();
	
PROC J4L15_PREV_YR
numeric showw1,showw2,showw3,showw;
	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 2 then
		if J4L12_BIRDS_TOT_M1 >= 0 then
			showw1 = J4L12_BIRDS_TOT_M1;
		else
			showw1 = 0;
		endif;
		if J4L12_BIRDS_TOT_M2 >= 0 then
			showw2 = J4L12_BIRDS_TOT_M2;
		else
			showw2 = 0;
		endif;
		if J4L12_BIRDS_TOT_M3 >= 0 then
			showw3 = J4L12_BIRDS_TOT_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to J4L20_TOTAL(1);
		else
			skip to J4L28_SOLD_OTHER_PURPOSE;
		endif;
	endif;
	
	savepartial();
PROC J4L16_COMPARED_YR

postproc
	if not $ in 1:3  then
		getErrorMsg("No selected code.");
	endif;


	if  J4L16_COMPARED_YR = 1 then
		   J4L17_CHECKBOX_LOW = "";
		   J4L1718_LOW_SPECIFY = "";
		   
		   skip to J4L17_CHECKBOX_HIGH;
	elseif  J4L16_COMPARED_YR = 2 then
		   J4L17_CHECKBOX_HIGH = "";
		   J4L1718_HIGH_SPECIFY = "";
		   
		   skip to J4L17_CHECKBOX_LOW;
		   
	elseif  J4L16_COMPARED_YR = 3 then
		   J4L17_CHECKBOX_LOW = "";
		   J4L1718_LOW_SPECIFY = "";
		   J4L17_CHECKBOX_HIGH = "";
		   J4L1718_HIGH_SPECIFY = "";
		   
		   skip to J4L18_PRICE_COMPARED_LYSQ;
	endif;   
	savepartial();
PROC J4L17_CHECKBOX_HIGH

postproc


	if ischecked ("A",$) = 1 then J4L171_HIGH_OFFER         =  1;endif;
	if ischecked ("B",$) = 1 then J4L172_HIGH_DEMAND        =  2;endif;
	if ischecked ("C",$) = 1 then J4L173_FINANCIAL_NEED     =  3;endif;
	if ischecked ("D",$) = 1 then J4L174_NO_OUTBREAK        =  4;endif;
	if ischecked ("E",$) = 1 then J4L175_FAV_WEATHER        =  5;endif;
	if ischecked ("F",$) = 1 then J4L176_PROPER_VENT        =  6;endif;
	if ischecked ("G",$) = 1 then J4L177_MODERN_TECH_INTRVN =  7;endif;
	if ischecked ("H",$) = 1 then J4L178_AVAIL_DOC          =  8;endif;
	if ischecked ("I",$) = 1 then J4L179_GOVT_INTRVN        =  9;endif;
	if ischecked ("J",$) = 1 then J4L1718_HIGH_REASON       =  18;endif;


	if poschar("ABCDEFGHIJ", $) = 0 then
		getErrorMsg("No selected code");
	ENDIF;
 savepartial();
PROC J4L17_CHECKBOX_LOW

preproc
	ask if J4L16_COMPARED_YR = 2;

postproc


	if ischecked ("A",$) = 1 then J4L1710_LOW_PRICE_OFFER =  10;endif;
	if ischecked ("B",$) = 1 then J4L1711_LOW_DEMAND      =  11;endif;
	if ischecked ("C",$) = 1 then J4L1712_OUTBREAK        =  12;endif;
	if ischecked ("D",$) = 1 then J4L1713_UNFAV_WEATHER   =  13;endif;
	if ischecked ("E",$) = 1 then J4L1714_POOR_VENT       =  14;endif;
	if ischecked ("F",$) = 1 then J4L1715_HIGH_COST       =  15;endif;
	if ischecked ("G",$) = 1 then J4L1716_TIGHT_SUPPLY    =  16;endif;
	if ischecked ("H",$) = 1 then J4L1717_GOVT_REGLN      =  17;endif;
	if ischecked ("I",$) = 1 then J4L1718_LOW_REASON      =  18;endif;
	

	if poschar("ABCDEFGHI", $) = 0 then
	   getErrorMsg("No selected code ");
	ENDIF;

	 	savepartial();

PROC J4L1718_HIGH_SPECIFY
preproc
	ask if ischecked("J",J4L17_CHECKBOX_HIGH) and J4L16_COMPARED_YR = 1;

postproc
	if strip($) = "" then
		 getErrorMsg(" No other reason specified for Code 18 - Other Reasons");
	endif;
	savepartial();
PROC J4L1718_LOW_SPECIFY
preproc
	ask if ischecked("I", J4L17_CHECKBOX_LOW) and J4L16_COMPARED_YR = 2;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified in Item LN18");
	endif;
	
	savepartial();
PROC J4L18_PRICE_COMPARED_LYSQ
 
postproc
	if not $ in 1:2 then
		getErrorMsg(" Please enter a valid code.");
	endif;
	savepartial();
PROC J4L19_REASON_PRICE
preproc
	ask if J4L18_PRICE_COMPARED_LYSQ in 1:2;
	
postproc
numeric showw1,showw2,showw3,showw;
	if strip($) = "" then
		getErrorMsg("A. Indicate the reason for increase/decrease in farmgate price");
	endif;
	
		if J4L12_BIRDS_TOT_M1 >= 0 then
			showw1 = J4L12_BIRDS_TOT_M1;
		else
			showw1 = 0;
		endif;
		if J4L12_BIRDS_TOT_M2 >= 0 then
			showw2 = J4L12_BIRDS_TOT_M2;
		else
			showw2 = 0;
		endif;
		if J4L12_BIRDS_TOT_M3 >= 0 then
			showw3 = J4L12_BIRDS_TOT_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to J4L20_TOTAL(1);
		else
			skip to J4L28_SOLD_OTHER_PURPOSE;
		endif;
	
	savepartial();
PROC J4L20_TOTAL
preproc
	$(1) = J4L12_BIRDS_TOT_M1;
	$(2) = J4L12_BIRDS_TOT_M2;
	$(3) = J4L12_BIRDS_TOT_M3;


postproc
	
  
	savepartial();

PROC J4L21_WIN_PRV
	
	getOutOfRange($,0,9999999," Please enter a valid code.");

	if $(curocc()) > visualvalue(J4L20_TOTAL(curocc())) then
		getErrorMsg("  Item J.4.4.a (within the province) < > is greater than J.4.4 (Total) < >. Please verify the inputted values.");
	endif;
	savepartial();
PROC J4L22_OUT_PRV
	getOutOfRange($,0,9999999,"   Please enter a valid code.");

	if $(curocc()) > visualvalue(J4L20_TOTAL(curocc())) then
		getErrorMsg("  Item J.4.4.b (outside the province) < > is greater than J.4.4 (Total) < >. Please verify the inputted values.");
	endif;
	savepartial();

PROC J4L23_UNK_PRV

postproc
	numeric xJ4Total;

	xJ4Total = visualvalue(J4L21_WIN_PRV) + visualvalue(J4L22_OUT_PRV) + J4L23_UNK_PRV;

	getOutOfRange($,0,9999999," Please enter a valid code.");

	if $(curocc()) > visualvalue(J4L20_TOTAL(curocc())) then
		getErrorMsg("  Item J.4.4.c (unknown destination) < > is greater than J.4.4 (Total) < >. Please verify the inputted values.");
	endif;

	if visualvalue(J4L20_TOTAL(curocc())) <> xJ4Total then
		getErrorMsg(" The total number of animals in the different areas of destination is not equal to the total sold live for slaughter for the reference Month");
	endif;
	savepartial();
PROC J4L28_SOLD_OTHER_PURPOSE
	if not J4L28_SOLD_OTHER_PURPOSE in 1:2 then
		if J4L28_SOLD_OTHER_PURPOSE = notappl then
			getErrorMsg("No selected code");
		else
			getErrorMsg("A. Entered value is not within the acceptable codes.");
		endif;
	elseif J4L28_SOLD_OTHER_PURPOSE = 2 then
		skip to J4L24_BROILER_DIED;
	endif;

	savepartial();
PROC J4FQ_L29L31
	if poschar("AB", $) = 0 then
		getErrorMsg("NO selected broiler sold live/disposed for other purpose!");
	elseif poschar("B", $) > 0 and J1L01_TYPE_OF_OPERATION = 2 then
		getErrorMsg("Selection not allowed. Type of Operation is Grower only,");
		reenter;
	endif;
	
	
	savepartial();
PROC J4L30L31_BIRD_M1
preproc
	//selection of ages
	if ischecked("A",J4FQ_L29L31) = 0 then 
		if curocc() = 1 then    
			move to J4L30L31_BIRD_M1(2); // punta doeling
		endif;
	endif;

	if ischecked("B",J4FQ_L29L31) = 0 then 
		if curocc() = 3 then    
			move to J4L30L31_BIRD_M1(1); 
		endif;
	endif;
 
 
postproc

	xblockE3_m1 = $(1) + $(2);
	J4L29_BIRD_TOTAL_M1 = xblockE3_m1;
  
	savepartial();
  
PROC J4L30L31_FARMGATE_M1
	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	if curocc() = 1 then
		getOutOfRange($,80.00,300.00,"A. Average Farmgate price is not within the the acceptable range.");
	elseif curocc() = 2 then  
		getOutOfRange($,20.00,50.00,"A. Average Farmgate price is not within the the acceptable range.");
	endif;
	
	if J4L30L31_BIRD_M1 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of birds but no average farmgate price.");
	endif;
	
	if $ > 0 and (J4L30L31_BIRD_M1 = notappl or J4L30L31_BIRD_M1 = 0) then
		getErrorMsg("C. Without entry in number of birds but with farmgate price.");
	endif;
	
	//I4L26_FARMGATE_TOTAL_M1 = $(1) + $(2) + $(3);
	
	savepartial();
	
PROC J4L30L31_DESTINATION_M1
	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if J4L30L31_BIRD_M1 > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("A. Grower has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("A. Day-old Chicks has entry but no specified destination was selected");
		endif;
	endif;
	
	
  
	// I4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
  
	savepartial();
PROC J4L30L31_BIRD_M2
preproc
	//selection of ages
	if ischecked("A",J4FQ_L29L31) = 0 then 
		if curocc() = 1 then    
			move to J4L30L31_BIRD_M2(2); // punta doeling
		endif;
	endif;

	if ischecked("B",J4FQ_L29L31) = 0 then 
		if curocc() = 3 then    
			move to J4L30L31_BIRD_M2(1); 
		endif;
	endif;
 
 
postproc

	xblockE3_m2 = $(1) + $(2);
	J4L29_BIRD_TOTAL_M2 = xblockE3_m2;
  
	savepartial();
  
PROC J4L30L31_FARMGATE_M2
	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	if curocc() = 1 then
		getOutOfRange($,80.00,300.00,"A. Average Farmgate price is not within the the acceptable range.");
	elseif curocc() = 2 then  
		getOutOfRange($,20.00,50.00,"A. Average Farmgate price is not within the the acceptable range.");
	endif;
	
	if J4L30L31_BIRD_M2 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of birds but no average farmgate price.");
	endif;
	
	if $ > 0 and (J4L30L31_BIRD_M2 = notappl or J4L30L31_BIRD_M2 = 0) then
		getErrorMsg("C. Without entry in number of birds but with farmgate price.");
	endif;
	
	//I4L26_FARMGATE_TOTAL_M1 = $(1) + $(2) + $(3);
	
	savepartial();
PROC J4L30L31_DESTINATION_M2
	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if J4L30L31_BIRD_M2 > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("A. Grower has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("A. Day-old Chicks has entry but no specified destination was selected");
		endif;
	endif;
PROC J4L30L31_BIRD_M3
preproc
	//selection of ages
	if ischecked("A",J4FQ_L29L31) = 0 then 
		if curocc() = 1 then    
			move to J4L30L31_BIRD_M3(2); // punta doeling
		endif;
	endif;

	if ischecked("B",J4FQ_L29L31) = 0 then 
		if curocc() = 3 then    
			move to J4L30L31_BIRD_M3(1); 
		endif;
	endif;
 
 
postproc

	xblockE3_m3 = $(1) + $(2);
	J4L29_BIRD_TOTAL_M3 = xblockE3_m3;
  
	savepartial();
PROC J4L30L31_FARMGATE_M3
	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	if curocc() = 1 then
		getOutOfRange($,80.00,300.00,"A. Average Farmgate price is not within the the acceptable range.");
	elseif curocc() = 2 then  
		getOutOfRange($,20.00,50.00,"A. Average Farmgate price is not within the the acceptable range.");
	endif;
	
	if J4L30L31_BIRD_M3 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of birds but no average farmgate price.");
	endif;
	
	if $ > 0 and (J4L30L31_BIRD_M3 = notappl or J4L30L31_BIRD_M3 = 0) then
		getErrorMsg("C. Without entry in number of birds but with farmgate price.");
	endif;
	
	//I4L26_FARMGATE_TOTAL_M1 = $(1) + $(2) + $(3);
	
	savepartial();
PROC J4L30L31_DESTINATION_M3
	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if J4L30L31_BIRD_M3 > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("A. Grower has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("A. Day-old Chicks has entry but no specified destination was selected");
		endif;
	endif;
PROC J4L24_BROILER_DIED

	if not J4L24_BROILER_DIED in 1:2 then
		getErrorMsg("Entered value is not within the acceptable codes.");
	elseif $ = 2 then
		skip to J6_SELL_CUR_YR;
	endif;

	savepartial();
	
	
PROC J4FQ_L25L27
	if poschar("ABCD", $) = 0 then
		getErrorMsg("NO selected sheep sold live/disposed for other purpose!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("ABC", $) = 0 then
			//skip to I4L30_DEATHS;
		endif;
	endif;
	
	
	savepartial();
PROC J4L25_AVIAN_INFLUENZA

preproc
	ask if ischecked("A", J4FQ_L25L27);//Avian;

postproc  
  
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 
	getOutOfRange($,0,9999999," Please verify the inputted code.");

	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Avian Influenza is greater than the total supply") ;  

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	// (numeric xHB1,numeric xHB2,numeric xHB3,numeric xTotDC, numeric xTotSupQtr, numeric xEndInvt1,numeric xEndInvt2,string xbl,numeric xcnt ) 

	if curocc() = 3 then
		if J4L25_AVIAN_INFLUENZA(1) in 0, notappl then
			if J4L25_AVIAN_INFLUENZA(2) in 0, notappl then
				if J4L25_AVIAN_INFLUENZA(3) in 0, notappl then
					getErrorMsg("Selected Avian Influenza in the cause of deaths, but no answer in all months.");
				endif;
			endif;
		endif;
	endif;
	
	if curocc() = 1 then  J4L25L27_NUMBER_M1(1) = $(curocc()); 
	elseif curocc() = 2 then  J4L25L27_NUMBER_M2(1) = $(curocc()); 
	elseif curocc() = 3 then  J4L25L27_NUMBER_M3(1) = $(curocc());
	endif;	

	savepartial();

	 

PROC JD_BROILER_DISEASE

preproc
	ask if ischecked("B", J4FQ_L25L27);//Disease;
		string xDa, xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq,xDr,xDs,xDt,xDu,xDv,xDw,xDx,xDy,xDz ;
		numeric cc = curocc();
	
postproc

	if soccurs(RTJ4_L25L27) = 0 then INSERT(RTJ4_L25L27(1)); endif;
	if soccurs(RTJ4_L25L27) = 1 then INSERT(RTJ4_L25L27(2)); endif;

	  if ischecked("A",$ ) = 1 then xDa = "Avian Encephalomyelitis "; 		Endif;
	  if ischecked("B",$ ) = 1 then xDb = "Avian Malaria ";  				endif;
	  if ischecked("C",$ ) = 1 then xDc = "Chronic Respiratory Disease "; 	endif;
	  if ischecked("D",$ ) = 1 then xDd = "Cocciciosis ";                   endif;
	  if ischecked("E",$ ) = 1 then xDe = "Colds/Flu "; 					endif;
	  if ischecked("F",$ ) = 1 then xDf = "E. Coli Infection "; 			endif;
	  if ischecked("G",$ ) = 1 then xDg = "Fowl Cholera "; 					endif;
	  if ischecked("H",$ ) = 1 then xDh = "Fowl Fox (Internal)  ";  		endif;
	  if ischecked("I",$ ) = 1 then xDi = "Gastroenteritis ";  				endif;
	  if ischecked("J",$ ) = 1 then xDj = "Gumboro Disease  ";  			endif;
	  if ischecked("K",$ ) = 1 then xDk = "Hepatitis ";  					endif;
	  if ischecked("L",$ ) = 1 then xDl = "Infectious Bronchitis  ";  		endif;
	  if ischecked("M",$ ) = 1 then xDm = "Infectious Coryza   ";  			endif;
	  if ischecked("N",$ ) = 1 then xDn = "Malaria   ";  					endif;
	  if ischecked("O",$ ) = 1 then xDo = "Mareks Disease  "; 				endif;
	  if ischecked("P",$ ) = 1 then xDp = "Mycoplasmosis  "; 				endif;
	  if ischecked("Q",$ ) = 1 then xDq = "Necrotic Enteritis  ";  			endif;
	  if ischecked("R",$ ) = 1 then xDr = "Newcastle Disease ";  			endif;
	  if ischecked("S",$ ) = 1 then xDs = "Omphallitis  ";  				endif;
	  if ischecked("T",$ ) = 1 then xDt = "Pericardities ";  				endif;
	  if ischecked("U",$ ) = 1 then xDu = "Pneumonia  ";  					endif;
	  if ischecked("V",$ ) = 1 then xDv = "Pullorum Disease   ";  			endif;
	  if ischecked("W",$ ) = 1 then xDw = "Salmonellosis  ";  				endif;
	  if ischecked("X",$ ) = 1 then xDx = "Synovities   ";  				endif;
	  if ischecked("Y",$ ) = 1 then xDy = JDZ_SPECIFY(cc); 					endif;
	 

	if curocc() = 3 then
		if poschar("ABCDEFGHIJKLMNOPQRSTUVWXY", JD_BROILER_DISEASE(1)) in 0, notappl then
			if poschar("ABCDEFGHIJKLMNOPQRSTUVWXY", JD_BROILER_DISEASE(2)) in 0, notappl then
				if poschar("ABCDEFGHIJKLMNOPQRSTUVWXY", JD_BROILER_DISEASE(3)) in 0, notappl then
					getErrorMsg("Please specify the cause of death due to other disease.");
				endif;	
			endif;	
		endif;	
	endif;
	 
		if curocc() = 1 then  J4L25L27_SPECIFY_M1(2) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq,xDr,xDs,xDt,xDu,xDv,xDw,xDx,xDy); 
	elseif curocc() = 2 then  J4L25L27_SPECIFY_M2(2) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq,xDr,xDs,xDt,xDu,xDv,xDw,xDx,xDy); 
	elseif curocc() = 3 then  J4L25L27_SPECIFY_M3(2) = concat(xDa,xDb,xDc,xDd,xDe,xDf,xDg,xDh,xDi,xDj,xDk,xDl,xDm,xDn,xDo,xDp,xDq,xDr,xDs,xDt,xDu,xDv,xDw,xDx,xDy ); 
	endif;

	savepartial();

PROC JDA_HC
preproc
	ask if ischecked("A",JD_BROILER_DISEASE);
	
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
													  0,0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDB_HC
preproc
	ask if ischecked("B",JD_BROILER_DISEASE);

postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
													  0,0,J3L05L07_TOT_SUPPLY_QTR); 



	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDC_HC

preproc 
	ask if ischecked("C",JD_BROILER_DISEASE);
postproc  
	   
		TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
													  0,0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDD_HC

preproc 
	ask if ischecked("D",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
													  0,0,J3L05L07_TOT_SUPPLY_QTR); 

	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDE_HC

preproc 
	ask if ischecked("E",JD_BROILER_DISEASE);
postproc  
	   
TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDF_HC

preproc 
	ask if ischecked("F",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 



	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDG_HC

preproc 
	ask if ischecked("G",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 

	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDH_HC

preproc 
	ask if ischecked("H",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 



	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDI_HC

preproc 
	ask if ischecked("I",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDJ_HC

preproc 
	ask if ischecked("J",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 

	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDK_HC

preproc 
	ask if ischecked("K",JD_BROILER_DISEASE);
postproc  
	   
TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDL_HC
preproc 
	ask if ischecked("L",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   0,0,0,0,0,0,0,0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDM_HC

preproc 
	ask if ischecked("M",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDN_HC

preproc 
	ask if ischecked("N",JD_BROILER_DISEASE);
postproc  
	   
TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 



	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDO_HC

preproc 
	ask if ischecked("O",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),JDO_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDP_HC

preproc 
	ask if ischecked("P",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),JDO_HC(curocc()),JDP_HC(curocc()),0,0,0,0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDQ_HC

preproc 
	ask if ischecked("Q",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),JDO_HC(curocc()),JDP_HC(curocc()),JDQ_HC(curocc()),0,0,0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDR_HC

preproc 
	ask if ischecked("R",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),JDO_HC(curocc()),JDP_HC(curocc()),JDQ_HC(curocc()),JDR_HC(curocc()),0,0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDS_HC

preproc 
	ask if ischecked("S",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),JDO_HC(curocc()),JDP_HC(curocc()),JDQ_HC(curocc()),JDR_HC(curocc()),JDS_HC(curocc()),
													   0,0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDT_HC

preproc 
	ask if ischecked("T",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),JDO_HC(curocc()),JDP_HC(curocc()),JDQ_HC(curocc()),JDR_HC(curocc()),JDS_HC(curocc()),
													   JDT_HC(curocc()),0,0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 



	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDU_HC

preproc 
	ask if ischecked("U",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),JDO_HC(curocc()),JDP_HC(curocc()),JDQ_HC(curocc()),JDR_HC(curocc()),JDS_HC(curocc()),
													   JDT_HC(curocc()),JDU_HC(curocc()),0,0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 

	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDV_HC

preproc 
	ask if ischecked("V",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),JDO_HC(curocc()),JDP_HC(curocc()),JDQ_HC(curocc()),JDR_HC(curocc()),JDS_HC(curocc()),
													   JDT_HC(curocc()),JDU_HC(curocc()),JDV_HC(curocc()),0,0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDW_HC

preproc 
	ask if ischecked("W",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),JDO_HC(curocc()),JDP_HC(curocc()),JDQ_HC(curocc()),JDR_HC(curocc()),JDS_HC(curocc()),
													   JDT_HC(curocc()),JDU_HC(curocc()),JDV_HC(curocc()),JDW_HC(curocc()),0,0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 

	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDX_HC

preproc 
	ask if ischecked("X",JD_BROILER_DISEASE);
postproc  
	   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),JDO_HC(curocc()),JDP_HC(curocc()),JDQ_HC(curocc()),JDR_HC(curocc()),JDS_HC(curocc()),
													   JDT_HC(curocc()),JDU_HC(curocc()),JDV_HC(curocc()),JDW_HC(curocc()),JDX_HC(curocc()),0,0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 

	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JDZ_SPECIFY

preproc
	ask if ischecked("Z",JD_BROILER_DISEASE);

postproc
	if strip($) = "" then
		getErrorMsg(" Please specify the cause of death due to other disease.");
	endif;

		
		if curocc() = 1 then  J4L25L27_SPECIFY_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  J4L25L27_SPECIFY_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  J4L25L27_SPECIFY_M3(2) = $(curocc());
	endif;
	savepartial();
PROC JDY_HC

preproc 
	ask if ischecked("Z",JD_BROILER_DISEASE);
postproc  
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),JDO_HC(curocc()),JDP_HC(curocc()),JDQ_HC(curocc()),JDR_HC(curocc()),JDS_HC(curocc()),
													   JDT_HC(curocc()),JDU_HC(curocc()),JDV_HC(curocc()),JDW_HC(curocc()),JDX_HC(curocc()),JDY_HC(curocc()),0,
													   0,0,J3L05L07_TOT_SUPPLY_QTR); 

	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999,"  Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	if $ in 0,notappl then   
		getErrorMsg("No corresponding number of deaths");
	endif;	
	savepartial();
PROC JCA_SPECIFY000
preproc
	ask if ischecked("C", J4FQ_L25L27); 
PROC JCA_SPECIFY
preproc
	ask if ischecked("C", J4FQ_L25L27); 

postproc
	 
	if curocc() = 1 then 
		J4L25L27_SPECIFY_M1(3) = concat(JCA_SPECIFY(1),', ',JCA_SPECIFY(2),', ',JCA_SPECIFY(3));
	elseif curocc() = 1 then 
		J4L25L27_SPECIFY_M2(3) = concat(JCA_SPECIFY(1),', ',JCA_SPECIFY(2),', ',JCA_SPECIFY(3));
	elseif curocc() = 1 then 
		J4L25L27_SPECIFY_M3(3) = concat(JCA_SPECIFY(1),', ',JCA_SPECIFY(2),', ',JCA_SPECIFY(3));
	endif;
	savepartial();
	 
PROC JCA_SP_HC
preproc
	ask if ischecked("C", J4FQ_L25L27); 

postproc  
   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),JDO_HC(curocc()),JDP_HC(curocc()),JDQ_HC(curocc()),JDR_HC(curocc()),JDS_HC(curocc()),
													   JDT_HC(curocc()),JDU_HC(curocc()),JDV_HC(curocc()),JDW_HC(curocc()),JDX_HC(curocc()),JDY_HC(curocc()),JDZ_HC(curocc()),
													   JCA_SP_HC(curocc()),0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3),"  Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999," Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	 if $ = 0 and strip(JCA_SPECIFY) <> "" then 
		getErrorMsg(" Item J.5.2 (Other causes ) is empty but Item J.5.2 (Other causes (Specify)) has an entry. Please indicate the number of deaths or verify the cause indicated.");
	elseif $ > 0 and strip(JCA_SPECIFY) = "" then 
		getErrorMsg(" Item J.5.2 (Other causes (Specify)) is empty but Item J.5.2 (Other reasons ) is greater than zero. Please indicate the cause of mortality or verify the percentage.");

	endif;	
	  if curocc() = 1 then  J4L25L27_NUMBER_M1(3) = $(curocc()); 
		elseif curocc() = 2 then  J4L25L27_NUMBER_M2(3) = $(curocc()); 
		elseif curocc() = 3 then  J4L25L27_NUMBER_M3(3) = $(curocc());
		endif;	

 	savepartial();
PROC JCB_SPECIFY
preproc
	ask if ischecked("C", J4FQ_L25L27); 
postproc
	 
	if curocc() = 1 then 
		J4L25L27_SPECIFY_M1(3) = concat(JCA_SPECIFY(1),', ',JCA_SPECIFY(2),', ',JCA_SPECIFY(3));
	elseif curocc() = 1 then 
		J4L25L27_SPECIFY_M2(3) = concat(JCA_SPECIFY(1),', ',JCA_SPECIFY(2),', ',JCA_SPECIFY(3));
	elseif curocc() = 1 then 
		J4L25L27_SPECIFY_M3(3) = concat(JCA_SPECIFY(1),', ',JCA_SPECIFY(2),', ',JCA_SPECIFY(3));
	endif;
	savepartial();
	 
PROC JCB_SP_HC
preproc
	ask if ischecked("C", J4FQ_L25L27); 
postproc  
   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),JDO_HC(curocc()),JDP_HC(curocc()),JDQ_HC(curocc()),JDR_HC(curocc()),JDS_HC(curocc()),
													   JDT_HC(curocc()),JDU_HC(curocc()),JDV_HC(curocc()),JDW_HC(curocc()),JDX_HC(curocc()),JDY_HC(curocc()),JDZ_HC(curocc()),
													   JCA_SP_HC(curocc()),0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3),"  Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999," Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);
	 if $ = 0 and strip(JCB_SPECIFY) <> "" then 
		getErrorMsg(" Item J.5.2 (Other causes ) is empty but Item J.5.2 (Other causes (Specify)) has an entry. Please indicate the number of deaths or verify the cause indicated.");
	elseif $ > 0 and strip(JCB_SPECIFY) = "" then 
		getErrorMsg(" Item J.5.2 (Other causes (Specify)) is empty but Item J.5.2 (Other reasons ) is greater than zero. Please indicate the cause of mortality or verify the percentage.");

	endif;	
	  if curocc() = 1 then  J4L25L27_NUMBER_M1(3) = $(curocc()); 
		elseif curocc() = 2 then  J4L25L27_NUMBER_M2(3) = $(curocc()); 
		elseif curocc() = 3 then  J4L25L27_NUMBER_M3(3) = $(curocc());
		endif;	
	savepartial();
 
PROC JCC_SPECIFY
preproc
	ask if ischecked("C", J4FQ_L25L27); 
postproc
	 
	if curocc() = 1 then 
		J4L25L27_SPECIFY_M1(3) = concat(JCA_SPECIFY(1),', ',JCA_SPECIFY(2),', ',JCA_SPECIFY(3));
	elseif curocc() = 1 then 
		J4L25L27_SPECIFY_M2(3) = concat(JCA_SPECIFY(1),', ',JCA_SPECIFY(2),', ',JCA_SPECIFY(3));
	elseif curocc() = 1 then 
		J4L25L27_SPECIFY_M3(3) = concat(JCA_SPECIFY(1),', ',JCA_SPECIFY(2),', ',JCA_SPECIFY(3));
	endif;
	if curocc() = 3 then    	
		if  strip(JCA_SPECIFY(1)) = "" and strip(JCA_SPECIFY(2)) = "" and strip(JCA_SPECIFY(3)) = "" and
			strip(JCB_SPECIFY(1)) = "" and strip(JCB_SPECIFY(2)) = "" and strip(JCB_SPECIFY(3)) = "" and 
			strip($(1)) = "" and strip($(2)) = "" and strip($(3)) = "" then
				getErrorMsg("D. Please specify the cause of death due to other causes.");
		endif;
	endif;
	savepartial();
	
PROC JCC_SP_HC
preproc
	ask if ischecked("C", J4FQ_L25L27); 
postproc  
   
	TOTAL_JD_BROILER_HC(curocc()) = getTotalDeathCause(J4L25_AVIAN_INFLUENZA(curocc()),JDA_HC(curocc()),JDB_HC(curocc()),JDC_HC(curocc()),JDD_HC(curocc()),JDE_HC(curocc()),
													   JDF_HC(curocc()),JDG_HC(curocc()),JDH_HC(curocc()),JDI_HC(curocc()),JDJ_HC(curocc()),JDK_HC(curocc()),JDL_HC(curocc()),
													   JDM_HC(curocc()),JDN_HC(curocc()),JDO_HC(curocc()),JDP_HC(curocc()),JDQ_HC(curocc()),JDR_HC(curocc()),JDS_HC(curocc()),
													   JDT_HC(curocc()),JDU_HC(curocc()),JDV_HC(curocc()),JDW_HC(curocc()),JDX_HC(curocc()),JDY_HC(curocc()),JDZ_HC(curocc()),
													   JCA_SP_HC(curocc()),0,J3L05L07_TOT_SUPPLY_QTR); 


	getCompareTotalSupDead(curocc(), J3L05L07_TOT_SUPPLY(1),J3L05L07_TOT_SUPPLY(2),J3L05L07_TOT_SUPPLY(3) ,$(1),$(2),$(3),"  Number of deaths due to other diseases is greater than the total supply") ;  

	getOutOfRange($,0,9999999," Please verify the inputted code.");

	getTotalDispositionQTR(J4L09_BIRDS_TOT_M1,J4L09_BIRDS_TOT_M2,J4L09_BIRDS_TOT_M3,TOTAL_JD_BROILER_HC(curocc()),J3L05L07_TOT_SUPPLY_QTR,J2L02_TOTAL(2),"J",42);

	 if $ = 0 and strip(JCC_SPECIFY) <> "" then 
		getErrorMsg(" Item J.5.2 (Other causes ) is empty but Item J.5.2 (Other causes (Specify)) has an entry. Please indicate the number of deaths or verify the cause indicated.");
	elseif $ > 0 and strip(JCC_SPECIFY) = "" then 
		getErrorMsg(" Item J.5.2 (Other causes (Specify)) is empty but Item J.5.2 (Other reasons ) is greater than zero. Please indicate the cause of mortality or verify the percentage.");

	endif;	
	  if curocc() = 1 then  J4L25L27_NUMBER_M1(3) = $(curocc()); 
		elseif curocc() = 2 then  J4L25L27_NUMBER_M2(3) = $(curocc()); 
		elseif curocc() = 3 then  J4L25L27_NUMBER_M3(3) = $(curocc());
		endif;	
savepartial();

PROC J6_SELL_CUR_YR

	if not J6_SELL_CUR_YR in 1:2 then
		getErrorMsg("Please verify the inputted code.");
	elseif J6_SELL_CUR_YR = notappl then
		getErrorMsg("No selected code");
	elseif J6_SELL_CUR_YR = 2 then
		skip to C3L09_STATUS_OP_RESULT_VISIT;
	endif;

	savepartial();
	
	
PROC J6L37_LAYING_FLOCK
postproc
if J6L37_LAYING_FLOCK(1) <> notappl then
	if J6L37_LAYING_FLOCK(1) > 0 then
		if J2L05_LAYING_FLOCK_COCK(1) = 0 then
			getErrorMsg("LN 38 (inventory of laying flock) has an entry, but the beginning inventory is empty");
		
		endif;
	else
		if J2L05_LAYING_FLOCK_COCK(1) > 0 then
			getErrorMsg("LN 38 (inventory of laying flock) is zero, but the beginning inventory has an entry");
		
		endif;
	endif;
	
	if J6L37_LAYING_FLOCK(1) > J2L05_LAYING_FLOCK_COCK(1) then
		getErrorMsg("Month 1 Laying Flock is greater than the beginning Inventory of Laying Flock");
		
	endif;
endif;
	//I4L26_FARMGATE_TOTAL_M1 = $(1) + $(2) + $(3);
	
	savepartial();
PROC J6L38_MORTALITY_RATE
if J6L37_LAYING_FLOCK(curocc()) > 0 then
	if $(curocc()) in 0:20 then
		oks = 1
	else
		getErrorMsg("Mortality rate is not within the acceptable range");
	endif;
else
	if $(curocc()) > 0 then
		getErrorMsg("Zero entry of laying flock but mortality rate is greater than zero");
	endif;
endif;
	savepartial();
PROC J6L39_ELER
if J6L37_LAYING_FLOCK(curocc()) > 0 then
	if $(curocc()) in 20.00:98.00 then
		oks =1;
	elseif $(curocc()) = 0 then
		getErrorMsg("Missing entry in ELER");
	else
		getErrorMsg("ELER is not within the acceptable range");
	endif;
else
	if $(curocc()) > 0 then
		getErrorMsg("Zero entry of laying flock but ELER is greater than zero");
	endif;
endif;
	savepartial();
PROC J6L40_PREV_YR
postproc
if not J6L40_PREV_YR in 1:2 then
	getErrorMsg("A. Please verify the inputted code.");
elseif J6L40_PREV_YR = notappl then
	getErrorMsg("B.No selected code.");
elseif J6L40_PREV_YR = 2 then
	skip to J6L43_TOTAL_PERCENT(1);
endif;	
	savepartial();
PROC J6L41_COMPARED_YR
postproc
if not J6L41_COMPARED_YR in 1:3 then
	getErrorMsg("A. Please verify the inputted code.");
elseif J6L41_COMPARED_YR = notappl then
	if J6L40_PREV_YR = 1 then
		getErrorMsg("B.No selected code.");
	endif;
elseif $ = 3 then
	skip to J6L43_TOTAL_PERCENT(1);
endif;

	savepartial();
PROC J4L17_CHECKBOX_HIGH1
preproc
ask if J6L41_COMPARED_YR = 1;

postproc
    if ischecked ("A",$) = 1 then J4L171_HIGH_OFFER			=  1;endif;
	if ischecked ("B",$) = 1 then J4L172_HIGH_DEMAND		=  2;endif;
	if ischecked ("C",$) = 1 then J4L173_FINANCIAL_NEED		=  3;endif;
	if ischecked ("D",$) = 1 then J4L174_NO_OUTBREAK		=  4;endif;
	if ischecked ("E",$) = 1 then J4L175_FAV_WEATHER		=  5;endif;
	if ischecked ("F",$) = 1 then J4L176_PROPER_VENT		=  6;endif;
	if ischecked ("G",$) = 1 then J4L177_MODERN_TECH_INTRVN	=  7;endif;
	if ischecked ("H",$) = 1 then J4L178_AVAIL_DOC			=  8;endif;
	if ischecked ("I",$) = 1 then J4L179_GOVT_INTRVN		=  9;endif;
	if ischecked ("J",$) = 1 then J4L1718_HIGH_REASON		=  18;endif;
	
if poschar("ABCDEFGHIJ", $) = 0 then
    errmsg("No selected code");
ENDIF;


savepartial();
PROC J4L17_CHECKBOX_LOW1
preproc
	ask if J6L41_COMPARED_YR = 2;

postproc
    if ischecked ("A",$) = 1 then J4L1710_LOW_PRICE_OFFER	=  10;endif;
	if ischecked ("B",$) = 1 then J4L1711_LOW_DEMAND		=  11;endif;
	if ischecked ("C",$) = 1 then J4L1712_OUTBREAK			=  12;endif;
	if ischecked ("D",$) = 1 then J4L1713_UNFAV_WEATHER		=  13;endif;
	if ischecked ("E",$) = 1 then J4L1714_POOR_VENT			=  14;endif;
	if ischecked ("F",$) = 1 then J4L1715_HIGH_COST			=  15;endif;
	if ischecked ("G",$) = 1 then J4L1716_TIGHT_SUPPLY		=  16;endif;
	if ischecked ("H",$) = 1 then J4L1717_GOVT_REGLN		=  17;endif;
	if ischecked ("I",$) = 1 then J4L1718_LOW_REASON		=  18;endif;
	
if poschar("ABCDEFGHI", $) = 0 then
    errmsg("No selected code");
ENDIF;


savepartial();
PROC J6L4220_HIGH_SPECIFY
preproc
	ask if ischecked("J", J4L17_CHECKBOX_HIGH1) and J6L41_COMPARED_YR = 1;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified in Item LN18");
	endif;
	
	savepartial();
                         
PROC J6L4220_LOW_SPECIFY
preproc
	ask if ischecked("I", J4L17_CHECKBOX_LOW1) and J6L41_COMPARED_YR = 2;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified in Item LN18");
	endif;
	
	savepartial();
PROC J6L44_PC_PERCENT
preproc
ask if J6L37_LAYING_FLOCK(curocc()) > 0;

postproc
if J6L44_PC_PERCENT(curocc()) > 100 then
	getErrorMsg(" A. Processed/consumed in the establishment is greater than 100 percent");
endif;

savepartial();
PROC J6L45_PC_PERCENT
preproc
ask if J6L37_LAYING_FLOCK(curocc()) > 0;

postproc
numeric PCPERCENT;

if J6L45_PC_PERCENT(curocc()) > 100 then
	getErrorMsg(" A. intended for hatching is greater than 100 percent");
elseif J6L45_PC_PERCENT(curocc()) > 0 then
	if J1L01_TYPE_OF_OPERATION = 2 then
		getErrorMsg("B. Type of operation is grow-out but with entry in intended for hatching. Please verify the inputted value or type of operation.");
	endif;
endif;

if curocc() = 3 then
	PCPERCENT = J6L45_PC_PERCENT(1) + J6L45_PC_PERCENT(2) + J6L45_PC_PERCENT(3);
	
	if J1L01_TYPE_OF_OPERATION in 1,3 then
		if PCPERCENT in 0, notappl then
			errmsg("Type of operation is Breeding but no entry in Intended for Hatching. Please check");
			reenter;
		endif;
	elseif J1L01_TYPE_OF_OPERATION = 2 then
		if PCPERCENT > 0 then
			errmsg("Type of operation is not Breeding but with entry in Intended for Hatching. Please check");
			reenter;
		endif;
	endif;
endif;

savepartial();
	
	
PROC J6L46_PC_PERCENT
preproc
ask if J6L37_LAYING_FLOCK(curocc()) > 0;

postproc
if J6L46_PC_PERCENT(curocc()) > 100 then
	getErrorMsg("A. Wastage is greater than 100 percent");
endif;

savepartial();

PROC J6L47_PC_PERCENT
preproc
ask if J6L37_LAYING_FLOCK(curocc()) > 0;

postproc
numeric xkor,xEggProd, xlayFlk,xNodays;
xkor    = curocc();
xlayFlk = visualvalue(J6L37_LAYING_FLOCK(curocc()));

J6L43_TOTAL_PERCENT(xkor) = visualvalue(J6L44_PC_PERCENT(xkor)) + visualvalue(J6L45_PC_PERCENT(xkor)) + visualvalue(J6L46_PC_PERCENT(xkor)) + visualvalue(J6L47_PC_PERCENT(xkor));

    if xkor = 1 then   xNodays = refdays1;
elseif xkor = 2 then   xNodays = refdays2;
elseif xkor = 3 then   xNodays = refdays3;
endif;
 
	
//** egg production computation  **// 
//(Laying Flock - (Laying Flock x (Mortality Rate/100)) x (ELER/100) ) x no. of days
 xEggProd = (xlayFlk - (xlayFlk * (visualvalue(J6L38_MORTALITY_RATE(xkor))/100))*(visualvalue(J6L39_ELER(xkor))/100)) * xNodays;
 
getOutOfRange($,0,100," Please verify the inputted code.");

if visualvalue(J6L43_TOTAL_PERCENT(xkor)) <> 100 then
	if xEggProd > 0 and visualvalue(J6L43_TOTAL_PERCENT(xkor)) in 0, notappl then
		errmsg("Egg production indicator is greater than zero but egg disposition is equal to zero.");
		reenter;
	elseif xEggProd in 0, notappl and visualvalue(J6L43_TOTAL_PERCENT(xkor)) > 0 then
		errmsg("Egg production indicator is equal to zero but egg disposition is greater than zero.");
		reenter;
	elseif xEggProd in 0, notappl and visualvalue(J6L43_TOTAL_PERCENT(xkor)) in 0, notappl then
		skip to J6L49_IN_PERCENT(curocc());
	else
		getErrorMsg("(Total Egg Disposition) is not equal to 100 percent. Please verify the inputted values.");
	endif;
else
	if xEggProd in 0, notappl then
		errmsg("Egg production indicator is equal to zero but egg disposition is greater than zero.");
		reenter;
	endif;	
endif;

// if xEggProd > 0 then
	// if K5L37_PERCENT(xkor) in 0, notappl then
		// errmsg("Egg production indicator is greater than zero but egg disposition is equal to zero.");
	// endif;
// elseif xEggProd in 0, notappl then
	// if K5L37_PERCENT(xkor) in 0.01:99.99 then
		// errmsg("Egg production indicator is equal to zero but egg disposition is greater than zero.");
	// endif;
// endif;

if visualvalue(K5L37_PERCENT(xkor)) > 100 then 
   getErrorMsg("Sold as table eggs is greater than 100 percent.");
endif;

savepartial();
PROC BLOCK001J5_L48L51
preproc 
	ask if J6L47_PC_PERCENT > 0;
PROC J6L48_TOTAL_PERCENT
preproc

J6L48_TOTAL_PERCENT(curocc()) = J6L49_IN_PERCENT(curocc()) + J6L50_OUT_PERCENT(curocc()) + J6L51_UKN_PERCENT(curocc());

	savepartial();
PROC J6L49_IN_PERCENT
preproc
ask if J6L47_PC_PERCENT(curocc()) > 0;

postproc
if J6L49_IN_PERCENT(curocc()) > 100 then
	getErrorMsg("A. Entered value is greater than 100 percent");
endif;

	savepartial();
PROC J6L50_OUT_PERCENT
preproc
ask if J6L47_PC_PERCENT(curocc()) > 0;

postproc
if J6L50_OUT_PERCENT(curocc()) > 100 then
	getErrorMsg("A. Entered value is greater than 100 percent");
endif;

	savepartial();
PROC J6L51_UKN_PERCENT
preproc
ask if J6L47_PC_PERCENT(curocc()) > 0;

postproc
if J6L51_UKN_PERCENT(curocc()) > 100 then
	getErrorMsg("A. Entered value is greater than 100 percent");
endif;

 numeric  toptEggSoldBroiler = J6L49_IN_PERCENT(curocc()) + J6L50_OUT_PERCENT(curocc()) + J6L51_UKN_PERCENT(curocc());


if J6L48_TOTAL_PERCENT(curocc()) <> toptEggSoldBroiler then
	errmsg("Total egg sold [%v] not equal to the total breakdown [%v]. Please check",J6L48_TOTAL_PERCENT(curocc()), toptEggSoldBroiler);
	reenter
endif;

if toptEggSoldBroiler > 0 then
	if J6L47_PC_PERCENT(curocc()) in 0, notappl then
		getErrorMsg("B. With entries in item J.6.3.a (within the province), J.6.3.b (outside the province) and K.8.2.c (unknown destination) but zero entry in item J.6.2.d (Sold as table eggs)");
	endif;
else
	if J6L47_PC_PERCENT(curocc()) > 0 then
		getErrorMsg("C. J.6.3. (Total) is equal to zero and J.6.2.d (Sold as table eggs) is greater than zero.");
	endif;
endif;

savepartial();
PROC BLOCK375
preproc 
	ask if J6L47_PC_PERCENT > 0;
PROC J6L52_PRICE_EGG_M1
preproc
ask if J1L03_CONT_GROWING = 2 and J6L47_PC_PERCENT(curocc()) > 0;

postproc
if J1L03_CONT_GROWING = 1 then
	if J6L52_PRICE_EGG_M1(curocc()) > 0 then
		getErrorMsg("A. The answer in Item J.1.3 (Engagement to Contract Growing) is code 1 (Yes) but there was provided average farmgate price. Please check entries.");
	endif;	
endif;

if J6L47_PC_PERCENT(curocc()) in 0, notappl then
	if J6L52_PRICE_EGG_M1(curocc()) > 0 then
		getErrorMsg("B. Item J.6.2.d (sold as fresh table eggs) has no entry but there was provided average farmgate price. Please check entries.");
	endif;
else
	getOutOfRange($,4.0,9.0,"C.average farmgate price < > is not within the acceptable range. Please verify the inputted value.");
endif;

if J1L03_CONT_GROWING = 2 and J6L47_PC_PERCENT(curocc()) > 0 then
	if J6L52_PRICE_EGG_M1(curocc()) = notappl then
		errmsg("Please check entry for average farm price of table egg");
		reenter
	endif;
endif;
PROC J6L53_PRICE_COMPARED_LYSQ
postproc
if not J6L53_PRICE_COMPARED_LYSQ in 1:2 then
	if J6L53_PRICE_COMPARED_LYSQ = notappl then
		getErrorMsg("B. No selected code.");
	else
		getErrorMsg("A. Please verify the inputted code.");
	endif;
endif;

savepartial();
PROC J6L54_REASON_PRICE
preproc
	ask if J6L53_PRICE_COMPARED_LYSQ in 1:2;
	
postproc
if J6L53_PRICE_COMPARED_LYSQ in 1:2 then
	if strip($) = "" then
		getErrorMsg("A. Indicate the reason for increase/decrease in farmgate price");
	endif;
endif;

	savepartial();
PROC GROUP007_LAYER


preproc
if D2L12_LAYER    = 7 then
	ok = 1
else
	skip to REMARKS
endif;
PROC K1L01_TYPE_OF_OPERATION
postproc
	if not $ in 1:7 then
		getErrorMsg("A. No selected type of operation. Please select type of operation.");
	endif;
	
	if $ in 1,4,5,7 then
		oks = 1;
	else
		skip to K1L03_CONT_GROWING;
	endif;
	
	
	savepartial();
PROC K1L02_BREEDING_CLASSIFICATION
if $ > 0 then
	if K1L01_TYPE_OF_OPERATION in 1,4,5,7 then
		oks = 1;
	else
		getErrorMsg("C. Item K.1.2 (Breeding classification) did not match the allowed combinations with K.1.1 (Type of operation/s).");
	endif;
else
	if K1L01_TYPE_OF_OPERATION in 1,4,5,7 then
		getErrorMsg("A. Item K.1.1 (Type of operation/s) is breeding but breeding classification was not selected. Please enter a valid code.");
	endif;
endif;
PROC K1L03_CONT_GROWING
postproc

if !($ in 1:2) then
	 getErrorMsg("A. Item K.1.1 (Engagement to Contract Growing) did not matched any of the valid codes. Please verify the inputted code.");
endif; 
 
savepartial();
PROC K2L02_TOTAL
postproc
if CHANGE_FARM_CAP > 0 then
	if K2L02_TOTAL(2) > CHANGE_FARM_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;

else
	if K2L02_TOTAL(2) > MAX_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;
endif;
	savepartial();
PROC K2L03_LAYING_FLOCK
getOutOfRange($,0,9999999,"  Please verify the inputted code ");

if $ > visualvalue(K2L02_TOTAL) then
    getErrorMsg("  Inventory of Laying Flock is greater than the total inventory.");
endif;
savepartial();
PROC K2L04_DOC
getOutOfRange($,0,9999999,"  Please verify the inputted code ");

if $ > visualvalue(K2L02_TOTAL) then
    getErrorMsg("  Inventory of  Other Ages  is greater than the total inventory.");
endif;
savepartial();
PROC K2L05_OTHER_AGES
numeric xK2TotInventory = visualvalue(K2L03_LAYING_FLOCK(curocc())) + visualvalue(K2L04_DOC(curocc())) + $(curocc());


if xK2TotInventory <> visualvalue(K2L02_TOTAL(curocc())) then
    getErrorMsg(" The total inventory of layer is not equal to the breakdown. ");
endif;

getOutOfRange($,0,9999999," Please verify the inputted code ");


if $ > visualvalue(K2L02_TOTAL) then
    getErrorMsg("Inventory of Other Ages is greater than the total inventory.");
endif;

savepartial();
PROC K3L06_TOTAL
preproc
K3L06_TOTAL(curocc()) = K3L09_HATCHED_LIVE(curocc()) + K3L07_DOC_RCVD(curocc()) + K3L08_RTL_RCVD(curocc());

	savepartial();
PROC K3L09_HATCHED_LIVE
postproc
getOutOfRange(K3L09_HATCHED_LIVE(curocc()),0,9999999,"A. Please verify the inputted code.");

if K1L01_TYPE_OF_OPERATION in 2:7 then
	if K3L09_HATCHED_LIVE(curocc()) > 0 then
		getErrorMsg("B. Item K.1.1 (Type of operation/s) is not code 1 (Breeding) but there is/are entry/ies in Item K.3.1 (hatched live). Please verify the encoded entry/ies or the type of operation/s.");
	endif;
endif;

	savepartial();
PROC K3L07_DOC_RCVD
 getOutOfRange($,0,9999999," Please verify the inputted code ");

savepartial();
PROC K3L08_RTL_RCVD

numeric xtotK2;

//Computation
K3L06_TOTAL(curocc())   = visualvalue(K3L07_DOC_RCVD(curocc())) +  K3L08_RTL_RCVD(curocc()) +  K3L09_HATCHED_LIVE(curocc());

if curocc() = 1 then          // invetory 1st mth           + total supply per mth
       K3L06L08_TOT_SUPPLY(1) = visualvalue(K2L02_TOTAL(1)) + visualvalue(K3L06_TOTAL(1)); //mth 1
elseif curocc() = 2 then
       K3L06L08_TOT_SUPPLY(2) = visualvalue(K2L02_TOTAL(1)) + visualvalue(K3L06_TOTAL(2)); //mth 2
elseif curocc() = 3 then
       K3L06L08_TOT_SUPPLY(3) = visualvalue(K2L02_TOTAL(1)) + visualvalue(K3L06_TOTAL(3)); // mth 3
endif;

xtotK2 = visualvalue(K2L02_TOTAL(1)) + visualvalue(K2L02_TOTAL(2));

K3L06L08_TOT_SUPPLY(curocc()) =  K2L02_TOTAL(2) + K3L06_TOTAL(curocc());

K3L06L08_TOT_SUPPLY_QTR =   xtotK2 + K3L06L08_TOT_SUPPLY(1) + K3L06L08_TOT_SUPPLY(2) +  K3L06L08_TOT_SUPPLY(3) ;

// DV
getOutOfRange($,0,9999999," Please verify the inputted code ");

savepartial();
PROC K4L09_CUR_YR
postproc
if not K4L09_CUR_YR in 1:2 then
	getErrorMsg(" Item K.4.1 was not identified. Please enter a valid code.");
elseif K4L09_CUR_YR = 2 then
	skip to K4L28_SOLD_OTHER_PURPOSE;
endif;
	
	savepartial();
PROC K4FQ_L10L11
postproc
if K4L09_CUR_YR = 1 then
	if poschar("AB", K4FQ_L10L11) = 0 then
		getErrorMsg("NO selected layer sold live/disposed for other purpose!");
	endif;
endif;	
	
	savepartial();
PROC K4L10_BIRDS_M1
preproc
	//selection of ages
	if ischecked("A",K4FQ_L10L11) = 0 then 
		if curocc() = 1 then    
			move to K4L10_BIRDS_M1(2); // punta breeder
		endif;		
	endif;

	if ischecked("B",K4FQ_L10L11) = 0 then 
		if curocc() = 2 then    
			move to K4L10_BIRDS_M2(1);  
		endif;
	endif;

 
 
postproc

	xblockE1_m1 = $(1) + $(2);
	K4L10_BIRDS_TOT_M1 = xblockE1_m1;	 
	
	
	if $(curocc()) > visualvalue(K2L02_TOTAL(1)) + visualvalue(K3L06_TOTAL(1)) then
		if curocc() = 1 then
			getErrorMsg("Layer dressed on establishment is greater than Beginning Inventory + Growers Recieved");
		elseif curocc() = 2 then
			getErrorMsg("Breeder dressed on establishment is greater than Beginning Inventory + Growers Recieved");
		endif;
	endif;
	
	savepartial();
  
PROC K4L11_LIVEWEIGHT_M1
if K4L10_BIRDS_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,0.75,2.50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,2,6,"A. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds or average liveweight");
		endif;
	elseif K4L10_BIRDS_M1(curocc()) in 0,notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of birds or average liveweight");
			// elseif $(curocc()) in 0, notappl then
				// if curocc() = 1 then
					// if ischecked("A", K4FQ_L10L11) = 1 then
						// getErrorMsg("F. Layer is selected but missing entries in number of birds and average liveweight"); 
					// endif;
				// elseif curocc() = 2 then
					// if ischecked("B", K4FQ_L10L11) = 1 then
						// getErrorMsg("F. Breeder is selected but missing entries in number of birds and average liveweight"); 
					// endif;
				// endif;
			endif;
			
		endif;

	
	savepartial();
PROC K4L12_FARMGATE_M1
if K1L03_CONT_GROWING = 1 then
	if K4L12_FARMGATE_M1(curocc()) > 0 then
		getWarningMsg("The answer in Item K.1.3 (Engagement to Contract Growing) is code 1 (Yes) but there was an entry in Item K.4.2.c (Average farmgate price per kilogram). Please verify the inputted values.");
	endif;
elseif K1L03_CONT_GROWING = 2 then
	if K4L10_BIRDS_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if K4L11_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif K4L11_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif K4L11_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		endif;
	elseif K4L10_BIRDS_M1(curocc()) in 0, notappl then
			if K4L11_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif K4L11_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif K4L11_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			endif;	
				
			// if K4L11_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
				// if curocc() = 1 then
					// if ischecked("A", K4FQ_L10L11) = 1 then
						// getErrorMsg("J. Layer is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					// endif;
				// elseif curocc() = 2 then
					// if ischecked("B", K4FQ_L10L11) = 1 then
						// getErrorMsg("J. Breeder is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					// endif;
				// endif;
			// endif;
			
		endif;
endif;

	savepartial();
	
PROC K4L10_BIRDS_M2
preproc
	//selection of ages
	if ischecked("A",K4FQ_L10L11) = 0 then 
		if curocc() = 1 then    
			move to K4L10_BIRDS_M2(2); // punta breeder
		endif;		
	endif;

	if ischecked("B",K4FQ_L10L11) = 0 then 
		if curocc() = 2 then    
			move to K4L10_BIRDS_M3(1);  
		endif;
	endif;

 
 
postproc

	xblockE1_m2 = $(1) + $(2);
	K4L10_BIRDS_TOT_M2 = xblockE1_m2;	 
	
	
	if $(curocc()) > visualvalue(K2L02_TOTAL(1)) + visualvalue(K3L06_TOTAL(1)) + visualvalue(K3L06_TOTAL(2)) then
		if curocc() = 1 then
			getErrorMsg("Layer dressed on establishment is greater than Beginning Inventory + Growers Recieved");
		elseif curocc() = 2 then
			getErrorMsg("Breeder dressed on establishment is greater than Beginning Inventory + Growers Recieved");
		endif;
	endif;
	
	savepartial();
  
PROC K4L11_LIVEWEIGHT_M2
if K4L10_BIRDS_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,0.75,2.50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,2,6,"A. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds or average liveweight");
		endif;
	elseif K4L10_BIRDS_M2(curocc()) in 0,notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of birds or average liveweight");
			// elseif $(curocc()) in 0, notappl then
				// if curocc() = 1 then
					// if ischecked("A", K4FQ_L10L11) = 1 then
						// getErrorMsg("F. Layer is selected but missing entries in number of birds and average liveweight"); 
					// endif;
				// elseif curocc() = 2 then
					// if ischecked("B", K4FQ_L10L11) = 1 then
						// getErrorMsg("F. Breeder is selected but missing entries in number of birds and average liveweight"); 
					// endif;
				// endif;
			endif;
			
		endif;

	
	savepartial();
PROC K4L12_FARMGATE_M2
if K1L03_CONT_GROWING = 1 then
	if K4L12_FARMGATE_M2(curocc()) > 0 then
		getWarningMsg("The answer in Item K.1.3 (Engagement to Contract Growing) is code 1 (Yes) but there was an entry in Item K.4.2.c (Average farmgate price per kilogram). Please verify the inputted values.");
	endif;
elseif K1L03_CONT_GROWING = 2 then
	if K4L10_BIRDS_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if K4L11_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif K4L11_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif K4L11_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		endif;
	elseif K4L10_BIRDS_M2(curocc()) in 0, notappl then
			if K4L11_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif K4L11_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif K4L11_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			endif;	
				
			// if K4L11_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
				// if curocc() = 1 then
					// if ischecked("A", K4FQ_L10L11) = 1 then
						// getErrorMsg("J. Layer is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					// endif;
				// elseif curocc() = 2 then
					// if ischecked("B", K4FQ_L10L11) = 1 then
						// getErrorMsg("J. Breeder is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					// endif;
				// endif;
			// endif;
			
		endif;
endif;

	savepartial();
PROC K4L10_BIRDS_M3
preproc
	//selection of ages
	if ischecked("A",K4FQ_L10L11) = 0 then 
		if curocc() = 1 then    
			move to K4L10_BIRDS_M3(2); // punta breeder
		endif;		
	endif;

	if ischecked("B",K4FQ_L10L11) = 0 then 
		if curocc() = 2 then    
			move to K4FQ_L13L15;  
		endif;
	endif;

 
 
postproc

	xblockE1_m3 = $(1) + $(2);
	K4L10_BIRDS_TOT_M3 = xblockE1_m3;	 
	
	
    if $(curocc()) > visualvalue(K2L02_TOTAL(1)) + visualvalue(K3L06_TOTAL(1)) + visualvalue(K3L06_TOTAL(2)) + visualvalue(K3L06_TOTAL(3)) then
		if curocc() = 1 then
			getErrorMsg("Layer dressed on establishment is greater than Beginning Inventory + Growers Recieved");
		elseif curocc() = 2 then
			getErrorMsg("Breeder dressed on establishment is greater than Beginning Inventory + Growers Recieved");
		endif;
	endif;
	
	savepartial();
  
PROC K4L11_LIVEWEIGHT_M3
if K4L10_BIRDS_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,0.75,2.50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,2,6,"A. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds or average liveweight");
		endif;
	elseif K4L10_BIRDS_M3(curocc()) in 0,notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of birds or average liveweight");
			// elseif $(curocc()) in 0, notappl then
				// if curocc() = 1 then
					// if ischecked("A", K4FQ_L10L11) = 1 then
						// getErrorMsg("F. Layer is selected but missing entries in number of birds and average liveweight"); 
					// endif;
				// elseif curocc() = 2 then
					// if ischecked("B", K4FQ_L10L11) = 1 then
						// getErrorMsg("F. Breeder is selected but missing entries in number of birds and average liveweight"); 
					// endif;
				// endif;
			endif;
			
		endif;

	
	savepartial();
PROC K4L12_FARMGATE_M3
if K1L03_CONT_GROWING = 1 then
	if K4L12_FARMGATE_M3(curocc()) > 0 then
		getWarningMsg("The answer in Item K.1.3 (Engagement to Contract Growing) is code 1 (Yes) but there was an entry in Item K.4.2.c (Average farmgate price per kilogram). Please verify the inputted values.");
	endif;
elseif K1L03_CONT_GROWING = 2 then
	if K4L10_BIRDS_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if K4L11_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif K4L11_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif K4L11_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		endif;
	elseif K4L10_BIRDS_M3(curocc()) in 0, notappl then
			if K4L11_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif K4L11_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif K4L11_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			endif;	
				
			// if K4L11_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
				// if curocc() = 1 then
					// if ischecked("A", K4FQ_L10L11) = 1 then
						// getErrorMsg("J. Layer is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					// endif;
				// elseif curocc() = 2 then
					// if ischecked("B", K4FQ_L10L11) = 1 then
						// getErrorMsg("J. Breeder is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					// endif;
				// endif;
			// endif;
	endif;
	
	if poschar("A", K4FQ_L10L11) > 0 then
		if K4L10_BIRDS_M1(1) + K4L10_BIRDS_M2(1) + K4L10_BIRDS_M3(1) in 0, notappl then
			getErrorMsg("Layer was selected but zero entries in all months");
		endif;
	elseif poschar("B", K4FQ_L10L11) > 0 then
		if K4L10_BIRDS_M1(2) + K4L10_BIRDS_M2(2) + K4L10_BIRDS_M3(2) in 0, notappl then
			getErrorMsg("Breeder was selected but zero entries in all months");
		endif;
	endif;

endif;

	savepartial();
PROC K4FQ_L13L15
	if poschar("AB", $) = 0 then
		getErrorMsg("No selected layer sold live for slaughter!");
	// elseif poschar("C", $) > 0 and poschar("ABC", $) > 0 then
		// getErrorMsg("Selection not allowed! 'C - None' cannot be selected with other choices!");
	// else
		// if poschar("C", $) > 0 and poschar("ABC", $) = 0 then
			// //skip to K4L15_PREV_YR;
		// endif;
	endif;
	
	
	// if poschar("A", $) > 0 then
		// skip to K4L13_BIRDS_M1(1);
	// elseif 	poschar("B", $) > 0 then
		// skip to K4L13_BIRDS_M1(2);
	// elseif 	poschar("AB", $) > 0 then
		// skip to K4L13_BIRDS_M1(1);
	// endif;
	
PROC K4L13_BIRDS_M1
preproc

// if curocc() = 2 then
	// if ischecked("A",K4FQ_L13L15) = 0 then
	//selection of ages
	if curocc() = 1 then 
		if poschar("A",K4FQ_L13L15) = 0 then 	   
			// move to K4L13_BIRDS_M1(2); // punta breeder
			skip to next;
		endif;		
	elseif curocc() = 2 then 
		if poschar("B",K4FQ_L13L15) = 0 then 
			skip to next;
		endif;
	endif;

	// if ischecked("B",K4FQ_L13L15) = 0 then 
		// if curocc() = 2 then    
			// move to K4L13_BIRDS_M2(1);  
		// endif;
	// endif;
 
postproc

	xblockE1_m1 = $(1) + $(2);
	K4L13_BIRDS_TOT_M1 = xblockE1_m1;	 
	
	if $(curocc()) > visualvalue(K2L02_TOTAL(1)) + visualvalue(K3L06_TOTAL(1)) + visualvalue(K3L06_TOTAL(2)) then
		if curocc() = 1 then
			getErrorMsg("C. layer dressed on establishment is greater than Beginning Inventory + Hatched live and Recieved");
		endif;
		if curocc() = 2 then
			getErrorMsg("C. Breeder dressed on establishment is greater than Beginning Inventory + Hatched live and Recieved");
		endif;
	endif;
	
	

	savepartial();
  
PROC K4L14_LIVEWEIGHT_M1
	if K4L13_BIRDS_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,0.75,2.50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,2,6,"A. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds or average liveweight");
		endif;
	elseif K4L13_BIRDS_M1(curocc()) in 0,notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of birds or average liveweight");
			// elseif $(curocc()) = notappl then
				// if curocc() = 1 then
					// if ischecked("A", K4FQ_L13L15) = 1 then
						// getErrorMsg("F. Layer is selected but missing entries in number of birds and average liveweight"); 
					// endif;
				// elseif curocc() = 2 then
					// if ischecked("B", K4FQ_L13L15) = 1 then
						// getErrorMsg("F. Breeder is selected but missing entries in number of birds and average liveweight"); 
					// endif;
				// endif;
			endif;
			
		endif;
	
	savepartial();
PROC K4L15_FARMGATE_M1
if K4L13_BIRDS_M1(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if K4L14_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif K4L14_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif K4L14_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		endif;
	elseif K4L13_BIRDS_M1(curocc()) in 0, notappl then
			if K4L14_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif K4L14_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif K4L14_LIVEWEIGHT_M1(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			endif;	
				
			// if J4L13_LIVEWEIGHT_M1(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
				// if curocc() = 1 then
					// if ischecked("A", K4FQ_L13L15) = 1 then
						// getErrorMsg("J. Layer is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					// endif;
				// elseif curocc() = 2 then
					// if ischecked("B", K4FQ_L13L15) = 1 then
						// getErrorMsg("J. Breeder is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					// endif;
				// endif;
			// endif;
			
		endif;


	savepartial();
PROC K4L13_BIRDS_M2
preproc
	//selection of ages
	// if ischecked("A",K4FQ_L13L15) = 0 then 
		// if curocc() = 1 then    
			// move to K4L13_BIRDS_M2(2); // punta breeder
		// endif;		
	// endif;

	// if ischecked("B",K4FQ_L13L15) = 0 then 
		// if curocc() = 2 then    
			// move to K4L13_BIRDS_M3(1);  
		// endif;
	// endif;
	
	if curocc() = 1 then 
		if poschar("A",K4FQ_L13L15) = 0 then 	   
			// move to K4L13_BIRDS_M1(2); // punta breeder
			skip to next;
		endif;		
	elseif curocc() = 2 then 
		if poschar("B",K4FQ_L13L15) = 0 then 
			skip to next;
		endif;
	endif;

 
 
postproc

	xblockE1_m2 = $(1) + $(2);
	K4L13_BIRDS_TOT_M2 = xblockE1_m2;	 
	
	
    if $(curocc()) > visualvalue(K2L02_TOTAL(1)) + visualvalue(K3L06_TOTAL(1)) + visualvalue(K3L06_TOTAL(2)) then
		if curocc() = 1 then
			getErrorMsg("C. layer dressed on establishment is greater than Beginning Inventory + Hatched live and Recieved");
		endif;
		if curocc() = 2 then
			getErrorMsg("C. Breeder dressed on establishment is greater than Beginning Inventory + Hatched live and Recieved");
		endif;
	endif;
	
	savepartial();
  
PROC K4L14_LIVEWEIGHT_M2
	if K4L13_BIRDS_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,0.75,2.50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,2,6,"A. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds or average liveweight");
		endif;
	elseif K4L13_BIRDS_M2(curocc()) in 0,notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of birds or average liveweight");
			// elseif $(curocc()) = notappl then
				// if curocc() = 1 then
					// if ischecked("A", K4FQ_L13L15) = 1 then
						// getErrorMsg("F. Layer is selected but missing entries in number of birds and average liveweight"); 
					// endif;
				// elseif curocc() = 2 then
					// if ischecked("B", K4FQ_L13L15) = 1 then
						// getErrorMsg("F. Breeder is selected but missing entries in number of birds and average liveweight"); 
					// endif;
				// endif;
			endif;
			
		endif;

	savepartial();
PROC K4L15_FARMGATE_M2
if K4L13_BIRDS_M2(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if K4L14_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif K4L14_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif K4L14_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		endif;
	elseif K4L13_BIRDS_M2(curocc()) in 0, notappl then
			if K4L14_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) in 0, notappl then
				getErrorMsg("E. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif K4L14_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif K4L14_LIVEWEIGHT_M2(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			endif;	
				
			// if J4L13_LIVEWEIGHT_M2(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
				// if curocc() = 1 then
					// if ischecked("A", K4FQ_L13L15) = 1 then
						// getErrorMsg("J. Layer is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					// endif;
				// elseif curocc() = 2 then
					// if ischecked("B", K4FQ_L13L15) = 1 then
						// getErrorMsg("J. Breeder is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					// endif;
				// endif;
			// endif;
			
		endif;

	savepartial();
PROC K4L13_BIRDS_M3
preproc
	//selection of ages
	// if ischecked("A",K4FQ_L13L15) = 0 then 
		// if curocc() = 1 then    
			// move to K4L13_BIRDS_M3(2); // punta breeder
		// endif;		
	// endif;

	// if ischecked("B",K4FQ_L13L15) = 0 then 
		// if curocc() = 2 then    
			// move to K4L16PREV_YR;  
		// endif;
	// endif;
	if curocc() = 1 then 
		if poschar("A",K4FQ_L13L15) = 0 then 	   
			// move to K4L13_BIRDS_M1(2); // punta breeder
			skip to next;
		endif;		
	elseif curocc() = 2 then 
		if poschar("B",K4FQ_L13L15) = 0 then 
			skip to next;
		endif;
	endif;
 
 
postproc

	xblockE1_m3 = $(1) + $(2);
	K4L13_BIRDS_TOT_M3 = xblockE1_m3;	 
	
	
    if $(curocc()) > visualvalue(K2L02_TOTAL(1)) + visualvalue(K3L06_TOTAL(1)) + visualvalue(K3L06_TOTAL(2)) + visualvalue(K3L06_TOTAL(3)) then
		if curocc() = 1 then
			getErrorMsg("D. layer dressed on establishment is greater than Beginning Inventory + Hatched live and Recieved");
		endif;
		if curocc() = 2 then
			getErrorMsg("D. Breeder dressed on establishment is greater than Beginning Inventory + Hatched live and Recieved");
		endif;
	endif;
	
	savepartial();
  
PROC K4L14_LIVEWEIGHT_M3
	if K4L13_BIRDS_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,0.75,2.50,"A. Average liveweight is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,2,6,"A. Average liveweight is not within the the acceptable range.");
		endif;
		
		if $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds or average liveweight");
		endif;
	elseif K4L13_BIRDS_M3(curocc()) in 0,notappl then
			if $(curocc()) > 0 then
				getErrorMsg("E. Missing entry in either number of birds or average liveweight");
			// elseif $(curocc()) = notappl then
				// if curocc() = 1 then
					// if ischecked("A", K4FQ_L13L15) = 1 then
						// getErrorMsg("F. Layer is selected but missing entries in number of birds and average liveweight"); 
					// endif;
				// elseif curocc() = 2 then
					// if ischecked("B", K4FQ_L13L15) = 1 then
						// getErrorMsg("F. Breeder is selected but missing entries in number of birds and average liveweight"); 
					// endif;
				// endif;
			endif;
			
		endif;

	
	savepartial();
PROC K4L15_FARMGATE_M3
if K4L13_BIRDS_M3(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if K4L14_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
			getErrorMsg("D. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif K4L14_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) in 0, notappl then
			getErrorMsg("G. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif K4L14_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		endif;
	elseif K4L13_BIRDS_M1(curocc()) in 0, notappl then
			if K4L14_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) = notappl then
				getErrorMsg("E. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif K4L14_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif K4L14_LIVEWEIGHT_M3(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			endif;	
				
			// if J4L13_LIVEWEIGHT_M3(curocc()) in 0, notappl and $(curocc()) in 0, notappl then
				// if curocc() = 1 then
					// if ischecked("A", K4FQ_L13L15) = 1 then
						// getErrorMsg("J. Layer is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					// endif;
				// elseif curocc() = 2 then
					// if ischecked("B", K4FQ_L13L15) = 1 then
						// getErrorMsg("J. Breeder is selected but missing entries in number of birds, average liveweight and farmgate price"); 
					// endif;
				// endif;
			// endif;
	if poschar("A", K4FQ_L13L15) > 0 then
		if K4L13_BIRDS_M1(1) + K4L13_BIRDS_M2(1) + K4L13_BIRDS_M3(1) in 0, notappl then
			getErrorMsg("Layer was selected but zero entries in all months");
		endif;
	elseif poschar("B", K4FQ_L13L15) > 0 then
		if K4L13_BIRDS_M1(2) + K4L13_BIRDS_M2(2) + K4L13_BIRDS_M3(2) in 0, notappl then
			getErrorMsg("Breeder was selected but zero entries in all months");
		endif;
	endif;
			
endif;

	savepartial();
PROC K4L16PREV_YR
numeric showw1,showw2,showw3,showw;
	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 2 then
		if K4L13_BIRDS_TOT_M1 >= 0 then
			showw1 = K4L13_BIRDS_TOT_M1;
		else
			showw1 = 0;
		endif;
		if K4L13_BIRDS_TOT_M2 >= 0 then
			showw2 = K4L13_BIRDS_TOT_M2;
		else
			showw2 = 0;
		endif;
		if K4L13_BIRDS_TOT_M3 >= 0 then
			showw3 = K4L13_BIRDS_TOT_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to K4L21_TOTAL(1);
		else
			skip to K4L28_SOLD_OTHER_PURPOSE;
		endif;
	endif;
	
	savepartial();
PROC K4L17_COMPARED_YR
postproc
if not $ in 1:3  then
	getErrorMsg( " No selected code.");
endif;


if K4L17_COMPARED_YR = 1 then
	   K4L18_CHECKBOX_LOW = "";
       K4L1818_LOW_SPECIFY = "";
	   
	   skip to K4L18_CHECKBOX_HIGH;
elseif K4L17_COMPARED_YR = 2 then
	   K4L18_CHECKBOX_HIGH = "";
       K4L1818_HIGH_SPECIFY = "";
       
	   skip to K4L18_CHECKBOX_LOW;
elseif K4L17_COMPARED_YR = 3 then
       K4L18_CHECKBOX_LOW = "";
       K4L1818_LOW_SPECIFY = "";
	   K4L18_CHECKBOX_HIGH = "";
       K4L1818_HIGH_SPECIFY = "";
       
	   skip to K4L19_PRICE_COMPARED_LYSQ;
endif;
   
savepartial();
PROC K4L18_CHECKBOX_HIGH
preproc
	// ask if K4L17_COMPARED_YR = 1;

postproc

    if ischecked ("A",$) = 1 then K4L181_HIGH_OFFER         =  1;endif;
	if ischecked ("B",$) = 1 then K4L182_HIGH_DEMAND        =  2;endif;
	if ischecked ("C",$) = 1 then K4L183_FINANCIAL_NEED     =  3;endif;
	if ischecked ("D",$) = 1 then K4L184_NO_OUTBREAK        =  4;endif;
	if ischecked ("E",$) = 1 then K4L185_FAV_WEATHER        =  5;endif;
	if ischecked ("F",$) = 1 then K4L186_PROPER_VENT        =  6;endif;
	if ischecked ("G",$) = 1 then K4L187_MODERN_TECH_INTRVN =  7;endif;
	if ischecked ("H",$) = 1 then K4L188_AVAIL_DOC_RTL      =  8;endif;
	if ischecked ("I",$) = 1 then K4L189_GOVT_INTRVN        =  9;endif;
	if ischecked ("J",$) = 1 then K4L1818_HIGH_REASON       =  18;endif;

	if poschar("ABCDEFGHIJ", $) = 0 then
		getErrorMsg("No selected code!");
	endif;;

savepartial();
PROC K4L18_CHECKBOX_LOW
preproc
	ask if K4L17_COMPARED_YR = 2;

postproc
	if ischecked ("A",$) = 1 then K4L1810_LOW_PRICE_OFFER =  10;endif;
	if ischecked ("B",$) = 1 then K4L1811_LOW_DEMAND      =  11;endif;
	if ischecked ("C",$) = 1 then K4L1812_OUTBREAK        =  12;endif;
	if ischecked ("D",$) = 1 then K4L1813_UNFAV_WEATHER   =  13;endif;
	if ischecked ("E",$) = 1 then K4L1814_POOR_VENT       =  14;endif;
	if ischecked ("F",$) = 1 then K4L1815_HIGH_COST       =  15;endif;
	if ischecked ("G",$) = 1 then K4L1816_TIGHT_SUPPLY    =  16;endif;
	if ischecked ("H",$) = 1 then K4L1817_GOVT_REGLN      =  17;endif;
	if ischecked ("I",$) = 1 then K4L1818_LOW_REASON      =  18;endif;

	if poschar("ABCDEFGHI", $) = 0 then
		getErrorMsg("No selected code!");
	endif;
	
	savepartial();
PROC K4L1818_HIGH_SPECIFY
preproc
	ask if ischecked("J", K4L18_CHECKBOX_HIGH) and K4L17_COMPARED_YR = 1;
	
postproc
	if strip($) = "" then
		getErrorMsg("Indicate the reason for decrease in production");
	endif;
	
	savepartial();
PROC K4L1818_LOW_SPECIFY
preproc
	ask if ischecked("I", K4L18_CHECKBOX_LOW) and K4L17_COMPARED_YR = 2;
	
postproc
	if strip($) = "" then
		getErrorMsg("Indicate the reason for decrease in production");
	endif;
	
	savepartial();
PROC K4L19_PRICE_COMPARED_LYSQ
postproc
if K4L19_PRICE_COMPARED_LYSQ = notappl then
	getErrorMsg("A. No selected code.");
elseif not K4L19_PRICE_COMPARED_LYSQ in 1:2 then
	getErrorMsg("B. Entered value is not within the acceptable codes.");
endif;

savepartial();
PROC K4L20_REASON_PRICE
preproc
	ask if K4L19_PRICE_COMPARED_LYSQ in 1:2;
	
postproc
numeric showw1,showw2,showw3,showw;
	if strip($) = "" then
		getErrorMsg("A. Indicate the reason for increase/decrease in farmgate price");
	endif;
	
		if K4L13_BIRDS_TOT_M1 >= 0 then
			showw1 = K4L13_BIRDS_TOT_M1;
		else
			showw1 = 0;
		endif;
		if K4L13_BIRDS_TOT_M2 >= 0 then
			showw2 = K4L13_BIRDS_TOT_M2;
		else
			showw2 = 0;
		endif;
		if K4L13_BIRDS_TOT_M3 >= 0 then
			showw3 = K4L13_BIRDS_TOT_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to K4L21_TOTAL(1);
		else
			skip to K4L28_SOLD_OTHER_PURPOSE;
		endif;
	
	savepartial();
PROC K4L21_TOTAL
preproc
	$(1) = K4L13_BIRDS_TOT_M1;
	$(2) = K4L13_BIRDS_TOT_M2;
	$(3) = K4L13_BIRDS_TOT_M3;


postproc
	
  
	savepartial();
PROC K4L22_WIN_PRV
getOutOfRange($,0,9999999,"   Please enter a valid code.");

if $(curocc()) > visualvalue(K4L21_TOTAL(curocc())) then
    getErrorMsg(" Item K.4.4.a (within the province) < > is greater than K.4.4 (Total) < >. Please verify the inputted values.");
endif;

savepartial();
PROC K4L23_OUT_PRV
getOutOfRange($,0,9999999,"   Please enter a valid code.");

if $(curocc()) > visualvalue(K4L21_TOTAL(curocc())) then
    getErrorMsg(" Item K.4.4.b (outside the province) < > is greater than K.4.4 (Total) < >. Please verify the inputted values.");
endif;

savepartial();
PROC K4L24_UNK_PRV
numeric xK4Total;

xK4Total = visualvalue(K4L22_WIN_PRV) + visualvalue(K4L23_OUT_PRV) + K4L24_UNK_PRV;

getOutOfRange($,0,9999999,"   Please enter a valid code.");

 
if visualvalue(K4L21_TOTAL(curocc())) <> xK4Total then
	getErrorMsg("Item K.4.4 (Total) < > is not equal to the sum of Item K.4.4.a (within the province) < >, Item K.4.4.b (outside the province) < > and Item K.4.4.c (unknown destination) < >. Please verify the inputted value");
endif;

savepartial();

PROC K4L28_SOLD_OTHER_PURPOSE
	if not K4L28_SOLD_OTHER_PURPOSE in 1:2 then
		if K4L28_SOLD_OTHER_PURPOSE = notappl then
			getErrorMsg("No selected codes");
		else
			getErrorMsg("Please enter a valid code");
		endif;
	elseif K4L28_SOLD_OTHER_PURPOSE = 2 then
		skip to K4L25_LAYER_DIED;
	endif;
	
	savepartial();
PROC K4L28_FQ
	if poschar("ABC", $) = 0 then
		getErrorMsg("No selected layer sold live/disposed for other purpose!");
	elseif poschar("D", $) > 0 and poschar("ABC", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("AB", $) = 0 then
			skip to K4L25_LAYER_DIED;
		endif;
	endif;
	
	
	savepartial();
PROC K4L30_BIRDS_M1
preproc
	//selection of ages
	// if ischecked("A",K4L28_FQ) = 0 then 
		// if curocc() = 1 then    
			// move to K4L30_BIRDS_M1(2); // punta doeling
		// endif;
	// endif;

	// if ischecked("B",K4L28_FQ) = 0 then 
		// if curocc() = 3 then    
			// move to K4L30_BIRDS_M1(3); 
		// endif;
	// endif;
	
	// if ischecked("C",K4L28_FQ) = 0 then 
		// if curocc() = 3 then    
			// move to K4L30_BIRDS_M2(1); 
		// endif;
	// endif;
 if curocc() = 1 then
	if poschar("A", K4L28_FQ) = 0 then
		skip to next;
	endif;
elseif curocc() = 2 then
	if poschar("B", K4L28_FQ) = 0 then
		skip to next;
	endif;
elseif curocc() = 3 then
	if poschar("C", K4L28_FQ) = 0 then
		skip to next;
	endif;
endif;
 
postproc

	xblockE3_m1 = $(1) + $(2);
	K4L29_BIRDS_TOTAL_M1 = xblockE3_m1;
  
	savepartial();
  



PROC K4L31_FARMGATE_M1
	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	if curocc() = 1 then
		getOutOfRange($,20.00,50.00,"A. Average Farmgate price is not within the the acceptable range.");
	elseif curocc() = 2 then  
		getOutOfRange($,80.00,300.00,"A. Average Farmgate price is not within the the acceptable range.");
	endif;
	
	if K4L30_BIRDS_M1 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of birds but no average farmgate price.");
	endif;
	
	if $ > 0 and (K4L30_BIRDS_M1 = notappl or K4L30_BIRDS_M1 = 0) then
		getErrorMsg("C. Without entry in number of birds but with farmgate price.");
	endif;
	
	//I4L26_FARMGATE_TOTAL_M1 = $(1) + $(2) + $(3);
	
	savepartial();
	
PROC K4L32_DESTINATION_M1
	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if K4L30_BIRDS_M1(curocc()) > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("A. Day-old Chicks has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("A. Ready-to-lay pullets has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("A. Others has entry but no specified destination was selected");
		endif;
	endif;
	
	
  
	// I4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
  
	savepartial();
PROC K4L30_BIRDS_M2
preproc
	//selection of ages
	// if ischecked("A",K4L28_FQ) = 0 then 
		// if curocc() = 1 then    
			// move to K4L30_BIRDS_M2(2); // punta doeling
		// endif;
	// endif;

	// if ischecked("B",K4L28_FQ) = 0 then 
		// if curocc() = 3 then    
			// move to K4L30_BIRDS_M2(3); 
		// endif;
	// endif;
	
	// if ischecked("C",K4L28_FQ) = 0 then 
		// if curocc() = 3 then    
			// move to K4L30_BIRDS_M3(1); 
		// endif;
	// endif;
 
  if curocc() = 1 then
	if poschar("A", K4L28_FQ) = 0 then
		skip to next;
	endif;
elseif curocc() = 2 then
	if poschar("B", K4L28_FQ) = 0 then
		skip to next;
	endif;
elseif curocc() = 3 then
	if poschar("C", K4L28_FQ) = 0 then
		skip to next;
	endif;
endif;
 
postproc

	xblockE3_m2 = $(1) + $(2);
	K4L29_BIRDS_TOTAL_M2 = xblockE3_m2;
  
	savepartial();
  
PROC K4L31_FARMGATE_M2
	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	if curocc() = 1 then
		getOutOfRange($,20.00,50.00,"A. Average Farmgate price is not within the the acceptable range.");
	elseif curocc() = 2 then  
		getOutOfRange($,80.00,300.00,"A. Average Farmgate price is not within the the acceptable range.");
	endif;
	
	if K4L30_BIRDS_M2 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of birds but no average farmgate price.");
	endif;
	
	if $ > 0 and (K4L30_BIRDS_M2 = notappl or K4L30_BIRDS_M2 = 0) then
		getErrorMsg("C. Without entry in number of birds but with farmgate price.");
	endif;
	
	//I4L26_FARMGATE_TOTAL_M1 = $(1) + $(2) + $(3);
	
	savepartial();
PROC K4L32_DESTINATION_M2
	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if K4L30_BIRDS_M2(curocc()) > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("A. Day-old Chicks has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("A. Ready-to-lay pullets has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("A. Others has entry but no specified destination was selected");
		endif;
	endif;
	
	
  
	// I4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
  
	savepartial();
PROC K4L30_BIRDS_M3
preproc
	//selection of ages
	// if ischecked("A",K4L28_FQ) = 0 then 
		// if curocc() = 1 then    
			// move to K4L30_BIRDS_M3(2); // punta doeling
		// endif;
	// endif;

	// if ischecked("B",K4L28_FQ) = 0 then 
		// if curocc() = 3 then    
			// move to K4L30_BIRDS_M3(3); 
		// endif;
	// endif;
	
	// if ischecked("C",K4L28_FQ) = 0 then 
		// if curocc() = 3 then    
			// move to K4L25_LAYER_DIED; 
		// endif;
	// endif;
 
  if curocc() = 1 then
	if poschar("A", K4L28_FQ) = 0 then
		skip to next;
	endif;
elseif curocc() = 2 then
	if poschar("B", K4L28_FQ) = 0 then
		skip to next;
	endif;
elseif curocc() = 3 then
	if poschar("C", K4L28_FQ) = 0 then
		skip to next;
	endif;
endif;
 
postproc

	xblockE3_m3 = $(1) + $(2);
	K4L29_BIRDS_TOTAL_M3 = xblockE3_m3;
  
	savepartial();
  
PROC K4L31_FARMGATE_M3
	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	if curocc() = 1 then
		getOutOfRange($,20.00,50.00,"A. Average Farmgate price is not within the the acceptable range.");
	elseif curocc() = 2 then  
		getOutOfRange($,80.00,300.00,"A. Average Farmgate price is not within the the acceptable range.");
	endif;
	
	if K4L30_BIRDS_M3 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of birds but no average farmgate price.");
	endif;
	
	if $ > 0 and (K4L30_BIRDS_M3 = notappl or K4L30_BIRDS_M3 = 0) then
		getErrorMsg("C. Without entry in number of birds but with farmgate price.");
	endif;
	
	//I4L26_FARMGATE_TOTAL_M1 = $(1) + $(2) + $(3);
	
	savepartial();
PROC K4L32_DESTINATION_M3
	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if K4L30_BIRDS_M3(curocc()) > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("A. Day-old Chicks has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("A. Ready-to-lay pullets has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("A. Others has entry but no specified destination was selected");
		endif;
	endif;
	
	if poschar("A", K4L28_FQ) > 0 then
		if (K4L30_BIRDS_M1(1) + K4L30_BIRDS_M2(1) + K4L30_BIRDS_M3(1)) = 0 then
			getErrorMsg("Day-old chicks is selected but missing entries in number of heads, average liveweight and farmgate price in all months.");
		endif;
	elseif poschar("B", K4L28_FQ) > 0 then
		if (K4L30_BIRDS_M1(2) + K4L30_BIRDS_M2(2) + K4L30_BIRDS_M3(2)) = 0 then
			getErrorMsg("Ready-to-lay pullets is selected but missing entries in number of heads, average liveweight and farmgate price in all months.");
		endif;
	elseif poschar("C", K4L28_FQ) > 0 then
		if (K4L30_BIRDS_M1(3) + K4L30_BIRDS_M2(3) + K4L30_BIRDS_M3(3)) = 0 then
			getErrorMsg("Others is selected but missing entries in number of heads, average liveweight and farmgate price in all months.");
		endif;
	endif;
	
  
	// I4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
  
	savepartial();
PROC K4L25_LAYER_DIED
postproc
if K4L25_LAYER_DIED = notappl then
	getErrorMsg("No selected code");
elseif not K4L25_LAYER_DIED in 1:2 then
	getErrorMsg("Entered value is not within the acceptable codes.");
elseif K4L25_LAYER_DIED = 2 then
	skip to K5L29_SELL_CUR_YR;
endif;

savepartial();
PROC K4FQ_L26L28
postproc

if ischecked("A",$) = 0 and ischecked("B",$) = 0 and ischecked("C",$) = 0  then
       getErrorMsg(" Entered value is not within the acceptable codes.");
endif;	   

if ischecked ("A",$) = 1 then
       skip to K4L26_AVIAN_INFLUENZA(1);
elseif ischecked ("B",$) = 1 then
	   skip to KD_LAYER_DISEASE(1);
elseif ischecked ("C",$) = 1 then
	   skip to KCA_SPECIFY(1);

endif;
 
 savepartial();
PROC K4L26_AVIAN_INFLUENZA
preproc
ask if ischecked("A", K4FQ_L26L28);//Avian;

postproc  
  
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                   0,0,K3L06L08_TOT_SUPPLY_QTR ); 

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Avian Influenza is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);


if curocc() = 3 then
	if ischecked("A", K4FQ_L26L28) then
		if K4L26_AVIAN_INFLUENZA(1) in 0, notappl then
			if K4L26_AVIAN_INFLUENZA(2) in 0, notappl then
				if K4L26_AVIAN_INFLUENZA(3) in 0, notappl then
					getErrorMsg("Selected Avian Influenza in the cause of death, but no answer in all months");
				endif;
			endif;
		endif;
	endif;
endif;

  if curocc() = 1 then  K4L26L28_NUMBER_BIRDS_M1(1) = $(curocc()); 
	elseif curocc() = 2 then  K4L26L28_NUMBER_BIRDS_M2(1) = $(curocc()); 
	elseif curocc() = 3 then  K4L26L28_NUMBER_BIRDS_M3(1) = $(curocc());
	endif;	
	
savepartial();
PROC KD_LAYER_DISEASE
preproc
ask if ischecked("B", K4FQ_L26L28); 
string xa, xb,xc, xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn,xo,xp,xq,xr,xs;
numeric xVal;
postproc
if soccurs(RTK4_L26L28) = 0 then INSERT(RTK4_L26L28(1)); endif;
if soccurs(RTK4_L26L28) = 1 then INSERT(RTK4_L26L28(2)); endif;

    if ischecked ("A",$) = 0 then  KDA_HC(curocc()) = notappl; else  xa = getlabel($,"A");endif;
	if ischecked ("B",$) = 0 then  KDB_HC(curocc()) = notappl; else  xb = getlabel($,"B");endif;
	if ischecked ("C",$) = 0 then  KDC_HC(curocc()) = notappl; else  xc = getlabel($,"C");endif;
	if ischecked ("D",$) = 0 then  KDD_HC(curocc()) = notappl; else  xd = getlabel($,"D");endif;
	if ischecked ("E",$) = 0 then  KDE_HC(curocc()) = notappl; else  xe = getlabel($,"E");endif;
	if ischecked ("F",$) = 0 then  KDF_HC(curocc()) = notappl; else  xf = getlabel($,"F");endif;
	if ischecked ("G",$) = 0 then  KDG_HC(curocc()) = notappl; else  xg = getlabel($,"G");endif;
    if ischecked ("H",$) = 0 then  KDH_HC(curocc()) = notappl; else  xh = getlabel($,"H");endif;
	if ischecked ("I",$) = 0 then  KDI_HC(curocc()) = notappl; else  xi = getlabel($,"I");endif;
	if ischecked ("J",$) = 0 then  KDJ_HC(curocc()) = notappl; else  xj = getlabel($,"J");endif;
	if ischecked ("K",$) = 0 then  KDK_HC(curocc()) = notappl; else  xk = getlabel($,"K");endif;
	if ischecked ("L",$) = 0 then  KDL_HC(curocc()) = notappl; else  xl = getlabel($,"L");endif;
	if ischecked ("M",$) = 0 then  KDM_HC(curocc()) = notappl; else  xm = getlabel($,"M");endif;	
    if ischecked ("N",$) = 0 then  KDN_HC(curocc()) = notappl; else  xn = getlabel($,"N");endif;
	if ischecked ("O",$) = 0 then  KDO_HC(curocc()) = notappl; else  xo = getlabel($,"O");endif;
	if ischecked ("P",$) = 0 then  KDP_HC(curocc()) = notappl; else  xp = getlabel($,"P");endif;
	if ischecked ("Q",$) = 0 then  KDQ_HC(curocc()) = notappl; else  xq = getlabel($,"Q");endif;
	if ischecked ("R",$) = 0 then  KDR_HC(curocc()) = notappl; else  xr = getlabel($,"R");endif;
	if ischecked ("S",$) = 0 then  KDS_HC(curocc()) = notappl;KDS_Specify(curocc()) = ""; else  xs = getlabel($,"S");endif;
			    
xVal = poschar("ABCDEFGHIJKLMNOPQRS", $);
// IF xVal = 0 then
     // getErrorMsg(" Please specify the cause of death due to other disease.");
// endif;

if curocc() = 3 then
	if poschar("ABCDEFGHIJKLMNOPQRS", KD_LAYER_DISEASE(1)) in 0, notappl then
		if poschar("ABCDEFGHIJKLMNOPQRS", KD_LAYER_DISEASE(2)) in 0, notappl then
			if poschar("ABCDEFGHIJKLMNOPQRS", KD_LAYER_DISEASE(3)) in 0, notappl then
				getErrorMsg(" Please specify the cause of death due to other disease.");
			endif;
		endif;
	endif;
endif;
	

if curocc() = 1  then K4L26L28_CDEATH_SPCFY_M1(2) = concat(xa,xb,xc,xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn,xo,xp,xq,xr,xs );	 
elseif curocc() = 2  then K4L26L28_CDEATH_SPCFY_M2(2) = concat(xa,xb,xc,xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn,xo,xp,xq,xr,xs );
elseif curocc() = 3  then K4L26L28_CDEATH_SPCFY_M3(2) = concat(xa,xb,xc,xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn,xo,xp,xq,xr,xs );
 	 
endif;

savepartial();

PROC KDA_HC
preproc
ask if ischecked("A",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                   0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"   Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3),"  Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
 savepartial();
PROC KDB_HC
preproc
ask if ischecked("B",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                   0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;	
 
 savepartial();

PROC KDC_HC
preproc
ask if ischecked("C",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                   0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
 savepartial();
PROC KDD_HC
preproc
ask if ischecked("D",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                   0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
 savepartial();

PROC KDE_HC
preproc
ask if ischecked("E",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                   0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
 savepartial();

PROC KDF_HC
preproc
ask if ischecked("F",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                   0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;	
 savepartial();

PROC KDG_HC
preproc
ask if ischecked("G",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),0,
                                                 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
 savepartial();
PROC KDH_HC
preproc
ask if ischecked("H",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
 savepartial();
PROC KDI_HC
preproc
ask if ischecked("I",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
 savepartial();

PROC KDJ_HC
preproc
ask if ischecked("J",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),KDJ_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
 savepartial();
PROC KDK_HC
preproc
ask if ischecked("K",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),KDJ_HC(curocc()),KDK_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
 savepartial();
PROC KDL_HC
preproc
ask if ischecked("L",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),KDJ_HC(curocc()),KDK_HC(curocc()),KDL_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

 savepartial();
PROC KDM_HC
preproc
ask if ischecked("M",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),KDJ_HC(curocc()),KDK_HC(curocc()),KDL_HC(curocc()),KDM_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");


getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

 savepartial();
PROC KDN_HC
preproc
ask if ischecked("N",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),KDJ_HC(curocc()),KDK_HC(curocc()),KDL_HC(curocc()),KDM_HC(curocc()),KDN_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

 savepartial();
PROC KDO_HC
preproc
ask if ischecked("O",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),KDJ_HC(curocc()),KDK_HC(curocc()),KDL_HC(curocc()),KDM_HC(curocc()),KDN_HC(curocc()),KDO_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;	

 savepartial();
PROC KDP_HC
preproc
ask if ischecked("P",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),KDJ_HC(curocc()),KDK_HC(curocc()),KDL_HC(curocc()),KDM_HC(curocc()),KDN_HC(curocc()),KDO_HC(curocc()),KDP_HC(curocc()),0,0,0,0,0,0,0,0,0,0,
				                                 0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
 savepartial();
PROC KDQ_HC
preproc
ask if ischecked("Q",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),KDJ_HC(curocc()),KDK_HC(curocc()),KDL_HC(curocc()),KDM_HC(curocc()),KDN_HC(curocc()),KDO_HC(curocc()),KDP_HC(curocc()),KDQ_HC(curocc()),0,0,0,0,0,0,0,0,0,
				                                 0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
 savepartial();
PROC KDR_HC
preproc
ask if ischecked("R",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),KDJ_HC(curocc()),KDK_HC(curocc()),KDL_HC(curocc()),KDM_HC(curocc()),KDN_HC(curocc()),KDO_HC(curocc()),KDP_HC(curocc()),KDQ_HC(curocc()),KDR_HC(curocc()),
												 0,0,0,0,0,0,0,0,0,0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
 savepartial();
PROC KDS_SPECIFY
preproc
ask if ischecked("S",KD_LAYER_DISEASE);
postproc

if strip($) = ""  then
    getErrorMsg(" Please specify the cause of death due to other disease.");
endif;
 
	savepartial();
PROC KDS_HC
preproc
ask if ischecked("S",KD_LAYER_DISEASE);
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),KDJ_HC(curocc()),KDK_HC(curocc()),KDL_HC(curocc()),KDM_HC(curocc()),KDN_HC(curocc()),KDO_HC(curocc()),KDP_HC(curocc()),KDQ_HC(curocc()),KDR_HC(curocc()),
												 KDS_HC(curocc()),0,0,0,0,0,0,0,0,0,K3L06L08_TOT_SUPPLY_QTR ); 
// getOutOfRange($,0,9999999,"  Please verify the inputted code.");
// if not KDS_HC(curocc()) in 0:9999999 then
	// getErrorMsg("Please verify the inputted code.");
// endif;

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
 
 if $ > 0 and strip(KDS_SPECIFY) = ""  then 
    getErrorMsg("Item K.4.2.1.2.b (Other disease (Specify)) is empty but Item K.4.2.1.2.b (Other disease ) is greater than zero. Please indicate the cause of mortality or verify the percentage.");
elseif $ = 0 and strip(KDS_SPECIFY) <> "" then 
    getErrorMsg("Item K.4.2.1.2.b (Other disease ) is empty but Item K.4.2.1.2.b (Other disease (Specify)) has an entry. Please indicate the percentage or verify the cause indicated.");
endif;	
 
 
savepartial();
PROC KCA_SPECIFY000
preproc
ask if ischecked("C", K4FQ_L26L28); 
PROC KCA_SPECIFY
preproc
ask if ischecked("C", K4FQ_L26L28); 

postproc
	 	if curocc() = 1 then 
		K4L26L28_CDEATH_SPCFY_M1(3) = concat(KCA_SPECIFY(1),', ',KCA_SPECIFY(2),', ',KCA_SPECIFY(3));
	elseif curocc() = 1 then 
		K4L26L28_CDEATH_SPCFY_M2(3) = concat(KCA_SPECIFY(1),', ',KCA_SPECIFY(2),', ',KCA_SPECIFY(3));
	elseif curocc() = 1 then 
		K4L26L28_CDEATH_SPCFY_M3(3) = concat(KCA_SPECIFY(1),', ',KCA_SPECIFY(2),', ',KCA_SPECIFY(3));
	endif;

	savepartial();
PROC KCA_SP_HC
preproc
ask if ischecked("C", K4FQ_L26L28); 

postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),KDJ_HC(curocc()),KDK_HC(curocc()),KDL_HC(curocc()),KDL12_HC(curocc()),KDM_HC(curocc()),KDN_HC(curocc()),KDO_HC(curocc()),KDP18_HC(curocc()),KDP_HC(curocc()),KDQ_HC(curocc()),KDR_HC(curocc()),
												 KDS_HC(curocc()),0,0,0,0,0,
				                                 KCA_SP_HC(curocc()),0,K3L06L08_TOT_SUPPLY_QTR ); 
						
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3),"  Number of deaths due to Other Causes is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
  
 if $ in 0,notappl and strip(KCA_SPECIFY) <> "" then 
    getErrorMsg(" Item K.4.2.1.2.c (Other disease ) is empty but Item K.4.2.1.2.c (Other disease (Specify)) has an entry. Please indicate the percentage or verify the cause indicated.");
elseif $ > 0 and strip(KCA_SPECIFY) = "" then 
    getErrorMsg(" Item K.4.2.1.2.c(Other causes (Specify)) is empty but Item K.4.2.1.2.c (Other reasons ) is greater than zero. Please indicate the cause of mortality or verify the percentage.");

endif;	

  if curocc() = 1 then  K4L26L28_NUMBER_BIRDS_M1(3) = $(curocc()); 
	elseif curocc() = 2 then  K4L26L28_NUMBER_BIRDS_M2(3) = $(curocc()); 
	elseif curocc() = 3 then  K4L26L28_NUMBER_BIRDS_M3(3) = $(curocc());
	endif;	
	
	
 savepartial();
PROC KCB_SPECIFY
preproc
ask if ischecked("C", K4FQ_L26L28); 
postproc
	 
	if curocc() = 1 then 
		K4L26L28_CDEATH_SPCFY_M1(3) = concat(KCA_SPECIFY(1),', ',KCA_SPECIFY(2),', ',KCA_SPECIFY(3));
	elseif curocc() = 1 then 
		K4L26L28_CDEATH_SPCFY_M2(3) = concat(KCA_SPECIFY(1),', ',KCA_SPECIFY(2),', ',KCA_SPECIFY(3));
	elseif curocc() = 1 then 
		K4L26L28_CDEATH_SPCFY_M3(3) = concat(KCA_SPECIFY(1),', ',KCA_SPECIFY(2),', ',KCA_SPECIFY(3));
	endif;

	savepartial();
PROC KCB_SP_HC
preproc
ask if ischecked("C", K4FQ_L26L28); 
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),KDJ_HC(curocc()),KDK_HC(curocc()),KDL_HC(curocc()),KDL12_HC(curocc()),KDM_HC(curocc()),KDN_HC(curocc()),KDO_HC(curocc()),KDP18_HC(curocc()),KDP_HC(curocc()),KDQ_HC(curocc()),KDR_HC(curocc()),
												 KDS_HC(curocc()),0,0,0,0,0,
				                                 KCA_SP_HC(curocc()),0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3),"  Number of deaths due to Other Causes is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
  
 if $ in 0,notappl and strip(KCB_SPECIFY) <> "" then 
    getErrorMsg(" Item K.4.2.1.2.c (Other disease ) is empty but Item K.4.2.1.2.c (Other disease (Specify)) has an entry. Please indicate the percentage or verify the cause indicated.");
elseif $ > 0 and strip(KCB_SPECIFY) = "" then 
    getErrorMsg(" Item K.4.2.1.2.c(Other causes (Specify)) is empty but Item K.4.2.1.2.c (Other reasons ) is greater than zero. Please indicate the cause of mortality or verify the percentage.");

endif;	

  if curocc() = 1 then  K4L26L28_NUMBER_BIRDS_M1(3) = $(curocc()); 
	elseif curocc() = 2 then  K4L26L28_NUMBER_BIRDS_M2(3) = $(curocc()); 
	elseif curocc() = 3 then  K4L26L28_NUMBER_BIRDS_M3(3) = $(curocc());
	endif;	
	
	
 savepartial();
PROC KCC_SPECIFY
preproc
ask if ischecked("C", K4FQ_L26L28); 
postproc
	 
	if curocc() = 1 then 
		K4L26L28_CDEATH_SPCFY_M1(3) = concat(KCA_SPECIFY(1),', ',KCA_SPECIFY(2),', ',KCA_SPECIFY(3));
	elseif curocc() = 1 then 
		K4L26L28_CDEATH_SPCFY_M2(3) = concat(KCA_SPECIFY(1),', ',KCA_SPECIFY(2),', ',KCA_SPECIFY(3));
	elseif curocc() = 1 then 
		K4L26L28_CDEATH_SPCFY_M3(3) = concat(KCA_SPECIFY(1),', ',KCA_SPECIFY(2),', ',KCA_SPECIFY(3));
	endif;

	if curocc() = 3 then    	
		if  strip(KCA_SPECIFY(1)) = "" and strip(KCA_SPECIFY(2)) = "" and strip(KCA_SPECIFY(3)) = "" and
			strip(KCB_SPECIFY(1)) = "" and strip(KCB_SPECIFY(2)) = "" and strip(KCB_SPECIFY(3)) = "" and 
			strip($(1)) = "" and strip($(2)) = "" and strip($(3)) = "" then
				getErrorMsg("D. Please specify the cause of death due to other causes.");
		endif;
	endif;
	savepartial();
	

PROC KCC_SP_HC
preproc
ask if ischecked("C", K4FQ_L26L28); 
postproc  
   
TOTAL_KD_LAYER_HC(curocc()) = getTotalDeathCause(K4L26_AVIAN_INFLUENZA(curocc()), KDA_HC(curocc()),KDB_HC(curocc()),KDC_HC(curocc()),KDD_HC(curocc()),KDE_HC(curocc()),KDF_HC(curocc()),KDG_HC(curocc()),KDH_HC(curocc()),
                                                 KDI_HC(curocc()),KDJ_HC(curocc()),KDK_HC(curocc()),KDL_HC(curocc()),KDL12_HC(curocc()),KDM_HC(curocc()),KDN_HC(curocc()),KDO_HC(curocc()),KDP18_HC(curocc()),KDP_HC(curocc()),KDQ_HC(curocc()),KDR_HC(curocc()),
												 KDS_HC(curocc()),0,0,0,0,0,
				                                 KCA_SP_HC(curocc()),0,K3L06L08_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), K3L06L08_TOT_SUPPLY(1),K3L06L08_TOT_SUPPLY(2),K3L06L08_TOT_SUPPLY(3) ,$(1),$(2),$(3),"  Number of deaths due to Other Causes is greater than the total supply") ;  

getTotalDispositionQTR(K4L10_BIRDS_TOT_M1,K4L10_BIRDS_TOT_M2,K4L10_BIRDS_TOT_M3,TOTAL_KD_LAYER_HC(curocc()),K3L06L08_TOT_SUPPLY_QTR,K2L02_TOTAL(2),"K",66);
  
 if $ in 0,notappl and strip(KCC_SPECIFY) <> "" then 
    getErrorMsg(" Item K.4.2.1.2.c (Other disease ) is empty but Item K.4.2.1.2.c (Other disease (Specify)) has an entry. Please indicate the percentage or verify the cause indicated.");
elseif $ > 0 and strip(KCC_SPECIFY) = "" then 
    getErrorMsg(" Item K.4.2.1.2.c(Other causes (Specify)) is empty but Item K.4.2.1.2.c (Other reasons ) is greater than zero. Please indicate the cause of mortality or verify the percentage.");

endif;	

  if curocc() = 1 then  K4L26L28_NUMBER_BIRDS_M1(3) = $(curocc()); 
	elseif curocc() = 2 then  K4L26L28_NUMBER_BIRDS_M2(3) = $(curocc()); 
	elseif curocc() = 3 then  K4L26L28_NUMBER_BIRDS_M3(3) = $(curocc());
	endif;	
	
	
 savepartial();
PROC K5L29_SELL_CUR_YR
	if $ = 2 then
		skip to REMARKS;
	endif;

	savepartial();
	
PROC K5L31_LAYING_FLOCK
getOutOfRange($,0,9999999," Please verify the inputted code");

if $(curocc()) > 0 and visualvalue(K2L02_TOTAL(1)) = 0 then
      getErrorMsg("  LN 28 (inventory of laying flock) has an entry, but the beginning inventory is empty");
endif; 

    if $(1) > visualvalue(K2L02_TOTAL(1)) + visualvalue(K3L06_TOTAL(1)) then
	   getErrorMsg("   Month 1 Laying Flock is not equal to the sum of Inventory of Laying Flock and Month 1 RTL received");
elseif $(2) > visualvalue(K2L02_TOTAL(1)) + visualvalue(K3L06_TOTAL(1))+ visualvalue(K3L06_TOTAL(2)) then
       getErrorMsg("  Month 2 Laying Flock is not equal to the sum of Inventory of Laying Flock and Month 1 and 2 RTL received");
elseif $(3) > visualvalue(K2L02_TOTAL(1)) + visualvalue(K3L06_TOTAL(1))+ visualvalue(K3L06_TOTAL(2))+ visualvalue(K3L06_TOTAL(3)) then
	   getErrorMsg(" Month 3 Laying Flock is not equal to the sum of Inventory of Laying Flock and Month 1, 2 and 3 RTL received");
endif;			
savepartial();
PROC K5L31_MORTALITY_RATE
if $(curocc()) > 0 and visualvalue(K5L31_LAYING_FLOCK(curocc())) = 0 then
      getErrorMsg(" Zero entry in inventory of laying flock but  mortality rate is higher than zero. Please indicate the inventory of laying flock or verify the mortality rate.");
endif; 
getOutOfRange($,0.00,20.00," Mortality rate < > is not within the acceptable range. Please verify the inputted value.");
savepartial();

PROC K5L32_ELER
if visualvalue(K5L31_LAYING_FLOCK(curocc())) > 0 and  $(curocc()) = 0 then
      getErrorMsg(" Missing entry in either inventory of laying flock,  mortality rate and/or ELER. Please verify the inputted value.");
elseif visualvalue(K5L31_LAYING_FLOCK(curocc())) = 0 and  $(curocc()) > 0 then
      getErrorMsg(" Missing entry in either inventory of laying flock,  mortality rate and/or ELER. Please verify the inputted value.");
endif; 
getOutOfRange($,20.00,98.00," ELER < > is not within the acceptable range. Please verify the inputted value.");
savepartial();

PROC K5L33_CONV_RATE
getOutOfRange($,15,25,"  Conversion Rate< > is not within the acceptable range. Please verify the inputted value.");


if visualvalue(K5L31_LAYING_FLOCK(curocc())) > 0 and  $(curocc()) = 0 then
      getErrorMsg("K. 081  Missing entry in either inventory of laying flock or Conversion Rate. Please verify the inputted value.");
elseif visualvalue(K5L31_LAYING_FLOCK(curocc())) = 0 and  $(curocc()) > 0 then
      getErrorMsg("K. 082  Missing entry in either inventory of laying flock or Conversion Rate. Please verify the inputted value.");
endif; 


savepartial();
PROC K5L34_PREV_YR
postproc
if not $ in 1:2  then
	getErrorMsg(" No selected code.");
elseif $ = 2 then
	skip to K5L37_PERCENT(1);
endif;
	
	savepartial();
PROC K5L35_COMPARED_YR
postproc
if not $ in 1:3  then
	getErrorMsg(" No selected code.");
endif;


if K5L35_COMPARED_YR = 1 then
	  K5L36_CHECKBOX_LOW = "";
      K5L3620_LOW_SPECIFY = "";
	   
	   skip to K5L36_CHECKBOX_HIGH;
elseif K5L35_COMPARED_YR = 2 then
	  K5L36_CHECKBOX_HIGH = "";
      K5L3620_HIGH_SPECIFY = "";
       
	   skip to K5L36_CHECKBOX_LOW;
elseif K5L35_COMPARED_YR = 3 then
      K5L36_CHECKBOX_LOW = "";
      K5L3620_LOW_SPECIFY = "";
	  K5L36_CHECKBOX_HIGH = "";
      K5L3620_HIGH_SPECIFY = "";
       
	   skip to K5L37_PERCENT(1);
endif;   
savepartial();
PROC K5L36_CHECKBOX_HIGH
preproc
// ask if K5L35_COMPARED_YR = 1;

postproc


    if ischecked ("A",$) = 1 then K5L361_HIGH_OFFER         =  1;endif;
	if ischecked ("B",$) = 1 then K5L362_HIGH_DEMAND        =  2;endif;
	if ischecked ("C",$) = 1 then K5L363_FINANCIAL_NEED     =  3;endif;
	if ischecked ("D",$) = 1 then K5L364_NO_OUTBREAK        =  4;endif;
	if ischecked ("E",$) = 1 then K5L365_FAV_WEATHER        =  5;endif;
	if ischecked ("F",$) = 1 then K5L366_PROPER_VENT        =  6;endif;
	if ischecked ("G",$) = 1 then K5L367_MODERN_TECH		=  7;endif;
	if ischecked ("H",$) = 1 then K5L368_AVAIL_BREEDER      =  8;endif;
	if ischecked ("I",$) = 1 then K5L369_GOVT_INTRVN        =  9;endif;
	if ischecked ("J",$) = 1 then K5L3620_HIGH_REASON       =  20;endif;


	if poschar("ABCDEFGHIJ", $) = 0 then
		getErrorMsg("No selected code!");
	endif;

savepartial();
PROC K5L36_CHECKBOX_LOW
preproc
ask if K5L35_COMPARED_YR = 2;

postproc
    if ischecked ("A",$) = 1 then K5L3610_LOW_PRICE_OFFER =  10;endif;
	if ischecked ("B",$) = 1 then K5L3611_LOW_DEMAND      =  11;endif;
	if ischecked ("C",$) = 1 then K5L3612_OUTBREAK        =  12;endif;
	if ischecked ("D",$) = 1 then K5L3613_UNFAV_WEATHER   =  13;endif;
	if ischecked ("E",$) = 1 then K5L3614_POOR_VENT       =  14;endif;
	if ischecked ("F",$) = 1 then K5L3615_HIGH_COST       =  15;endif;
	if ischecked ("G",$) = 1 then K5L3616_UNAVAIL_BREEDER =  16;endif;
	if ischecked ("H",$) = 1 then K5L3617_GOVT_REGLTN     =  17;endif;
	if ischecked ("I",$) = 1 then K5L3618_MOLTING         =  18;endif;
	if ischecked ("J",$) = 1 then K5L3619_CULLING         =  19;endif;
	if ischecked ("K",$) = 1 then K5L3620_LOW_REASON      =  20;endif;

	if poschar("ABCDEFGHIJK", $) = 0 then
		getErrorMsg("No selected code!");
	endif;

savepartial();
PROC K5L3620_HIGH_SPECIFY
preproc
	ask if ischecked("J", K5L36_CHECKBOX_HIGH) and K5L35_COMPARED_YR = 1;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified in Item LN18");
	endif;
	
	savepartial();
PROC K5L3620_LOW_SPECIFY
preproc
	ask if ischecked("K", K5L36_CHECKBOX_LOW) and K5L35_COMPARED_YR = 2;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified in Item LN18");
	endif;
	
	savepartial();
PROC K5L38_PERCENT
postproc
if K5L38_PERCENT(curocc()) > 100 then
	getErrorMsg("A. Processed/consumed in the establishment is greater than 100 percent.");
endif;
PROC K6L47_PC_PERCENT
postproc
if K1L01_TYPE_OF_OPERATION in 2, 3, 6 then
	if K6L47_PC_PERCENT(curocc()) > 0 then
		getErrorMsg("B. Type of operation is not breeding but with entry in intended for hatching.");
	endif;
else
	if K6L47_PC_PERCENT(curocc()) > 100 then
		getErrorMsg("A. Intended for hatching is greater than 100 percent.");
	endif;
endif;
PROC K5L39_PERCENT
postproc
if K5L39_PERCENT(curocc()) > 100 then
	getErrorMsg("A. Wastage is greater than 100 percent.");
endif;
PROC K5L40_PERCENT
numeric xkor,xEggProd, xlayFlk,xNodays;
xkor    = curocc();
xlayFlk = visualvalue(K5L31_LAYING_FLOCK(curocc()));

K5L37_PERCENT(xkor) = visualvalue(K6L47_PC_PERCENT(xkor)) + visualvalue(K5L38_PERCENT(xkor)) + visualvalue(K5L39_PERCENT(xkor)) + visualvalue(K5L40_PERCENT(xkor));

    if xkor = 1 then   xNodays = refdays1;
elseif xkor = 2 then   xNodays = refdays2;
elseif xkor = 3 then   xNodays = refdays3;
endif;
 
	
//** egg production computation  **// 
//(Laying Flock - (Laying Flock x (Mortality Rate/100)) x (ELER/100) ) x no. of days
 xEggProd = (xlayFlk - (xlayFlk * (visualvalue(K5L31_MORTALITY_RATE(xkor))/100))*(visualvalue(K5L32_ELER(xkor))/100)) * xNodays;
 
getOutOfRange($,0,100," Please verify the inputted code.");

if visualvalue(K5L37_PERCENT(xkor)) <> 100 then
	if xEggProd > 0 and visualvalue(K5L37_PERCENT(xkor)) in 0, notappl then
		errmsg("Egg production indicator is greater than zero but egg disposition is equal to zero.");
		reenter;
	elseif xEggProd in 0, notappl and visualvalue(K5L37_PERCENT(xkor)) > 0 then
		errmsg("Egg production indicator is equal to zero but egg disposition is greater than zero.");
		reenter;
	elseif xEggProd in 0, notappl and visualvalue(K5L37_PERCENT(xkor)) in 0, notappl then
		skip to K5L42_PERCENT(curocc());
	else
		getErrorMsg("(Total Egg Disposition) is not equal to 100 percent. Please verify the inputted values.");
	endif;
else
	if xEggProd in 0, notappl then
		errmsg("Egg production indicator is equal to zero but egg disposition is greater than zero.");
		reenter;
	endif;	
endif;

// if xEggProd > 0 then
	// if K5L37_PERCENT(xkor) in 0, notappl then
		// errmsg("Egg production indicator is greater than zero but egg disposition is equal to zero.");
	// endif;
// elseif xEggProd in 0, notappl then
	// if K5L37_PERCENT(xkor) in 0.01:99.99 then
		// errmsg("Egg production indicator is equal to zero but egg disposition is greater than zero.");
	// endif;
// endif;

if visualvalue(K5L37_PERCENT(xkor)) > 100 then 
   getErrorMsg("Sold as table eggs is greater than 100 percent.");
endif;

if K5L40_PERCENT(xkor) in 0, notappl then
	skip to next;
endif;

savepartial();
PROC BLOCK001K5_L50L53
preproc 
	ask if K5L40_PERCENT(curocc()) > 0;
PROC K5L42_PERCENT
postproc
K5L41_PERCENT(curocc()) = K5L42_PERCENT(curocc()) + K5L43_PERCENT(curocc()) + K5L44_PERCENT(curocc());
if K5L42_PERCENT(curocc()) > 100 then 
   getErrorMsg(" A. Entered value is greater than 100 percent");
endif;

savepartial();
PROC K5L43_PERCENT
postproc
K5L41_PERCENT(curocc()) = K5L42_PERCENT(curocc()) + K5L43_PERCENT(curocc()) + K5L44_PERCENT(curocc());

if K5L43_PERCENT(curocc()) > 100 then 
   getErrorMsg(" A. Entered value is greater than 100 percent");
endif;

savepartial();
PROC K5L44_PERCENT
numeric xkor = curocc();

K5L41_PERCENT(xkor) = K5L42_PERCENT(xkor) + K5L43_PERCENT(xkor) + $(xkor);

getOutOfRange($,0,100," Please verify the inputted code.");

if K5L40_PERCENT(xkor) in 0, notappl then
	if visualvalue(K5L41_PERCENT(xkor)) > 0 then
		getErrorMsg("Total Egg Disposition by area of destination is greater than zero but Sold as table eggs is equal to zero.");
	endif;
endif;

// if K5L41_PERCENT(xkor) <> 100 and visualvalue(K5L40_PERCENT(curocc())) > 0 then
	// errmsg("Sum of K.6.3.a (within the province), K.6.3.b (outside the province) and K.6.3.c (unknown destination) is not equal to 100 percent");
	// reenter;
// endif;

if K5L41_PERCENT(xkor) <> 100 then
	if visualvalue(K5L40_PERCENT(curocc())) > 0 and K5L41_PERCENT(xkor) in 0, notappl then
		errmsg("Sold as table egg is greater than zero but the Total Egg Disposition by area of destination is equal to zero.");
		reenter;
	elseif visualvalue(K5L40_PERCENT(curocc())) in 0, notappl and K5L41_PERCENT(xkor) in 0, notappl then
		skip to K5L45_PEWEE(curocc());
	else
		errmsg("Sum of K.6.3.a (within the province), K.6.3.b (outside the province) and K.6.3.c (unknown destination) is not equal to 100 percent");
		reenter;
	endif;
endif;

savepartial();
PROC BLOCK001K5_L54L60
preproc 
	ask if K5L40_PERCENT(curocc()) > 0;
PROC K5L45_PEWEE
postproc
if visualvalue(K1L03_CONT_GROWING) = 1 then
	if K5L45_PEWEE(curocc()) > 0 then 
		getWarningMsg("A. The answer in Item K.1.3 (Engagement to Contract Growing) is code 1 (Yes) but there was provided average farmgate price. Please check entries.");
	endif;
else
	if K5L45_PEWEE(curocc()) > 0 then 
		getOutOfRange($,4.00,9.00,"B. Average farmgate price < > is not within the acceptable range. Please verify the inputted value.");
	endif;
endif;

if visualvalue(K5L40_PERCENT(curocc())) in 0, notappl then
	if K5L45_PEWEE(curocc()) > 0 then 
		getWarningMsg("Item K.5.1.2.d (sold as table eggs) has no entry but there was provided average farmgate price. Please check entries.");
	endif;
endif;

savepartial();
PROC K5L46_XS
postproc
if visualvalue(K1L03_CONT_GROWING) = 1 then
	if K5L46_XS(curocc()) > 0 then 
		getWarningMsg("A. The answer in Item K.1.3 (Engagement to Contract Growing) is code 1 (Yes) but there was provided average farmgate price. Please check entries.");
	endif;
else
	if K5L46_XS(curocc()) > 0 then 
		getOutOfRange($,4.00,9.00,"B. Average farmgate price < > is not within the acceptable range. Please verify the inputted value.");
	endif;
endif;

if visualvalue(K5L40_PERCENT(curocc())) in 0, notappl then
	if K5L46_XS(curocc()) > 0 then 
		getWarningMsg("Item K.5.1.2.d (sold as table eggs) has no entry but there was provided average farmgate price. Please check entries.");
	endif;
endif;

savepartial();
PROC K5L47_SMALL
postproc
if visualvalue(K1L03_CONT_GROWING) = 1 then
	if K5L47_SMALL(curocc()) > 0 then 
		getWarningMsg("A. The answer in Item K.1.3 (Engagement to Contract Growing) is code 1 (Yes) but there was provided average farmgate price. Please check entries.");
	endif;
else
	if K5L47_SMALL(curocc()) > 0 then 
		getOutOfRange($,4.00,9.00,"B. Average farmgate price < > is not within the acceptable range. Please verify the inputted value.");
	endif;
endif;

if visualvalue(K5L40_PERCENT(curocc())) in 0, notappl then
	if K5L47_SMALL(curocc()) > 0 then 
		getWarningMsg("Item K.5.1.2.d (sold as table eggs) has no entry but there was provided average farmgate price. Please check entries.");
	endif;
endif;

savepartial();
PROC K5L48_MED
postproc
if visualvalue(K1L03_CONT_GROWING) = 1 then
	if K5L48_MED(curocc()) > 0 then 
		getWarningMsg("A. The answer in Item K.1.3 (Engagement to Contract Growing) is code 1 (Yes) but there was provided average farmgate price. Please check entries.");
	endif;
else
	if K5L48_MED(curocc()) > 0 then 
		getOutOfRange($,4.00,9.00,"B. Average farmgate price < > is not within the acceptable range. Please verify the inputted value.");
	endif;
endif;

if visualvalue(K5L40_PERCENT(curocc())) in 0, notappl then
	if K5L48_MED(curocc()) > 0 then 
		getWarningMsg("Item K.5.1.2.d (sold as table eggs) has no entry but there was provided average farmgate price. Please check entries.");
	endif;
endif;

savepartial();
PROC K5L49_LARGE
postproc
if visualvalue(K1L03_CONT_GROWING) = 1 then
	if K5L49_LARGE(curocc()) > 0 then 
		getWarningMsg("A. The answer in Item K.1.3 (Engagement to Contract Growing) is code 1 (Yes) but there was provided average farmgate price. Please check entries.");
	endif;
else
	if K5L49_LARGE(curocc()) > 0 then 
		getOutOfRange($,4.00,9.00,"B. Average farmgate price < > is not within the acceptable range. Please verify the inputted value.");
	endif;
endif;

if visualvalue(K5L40_PERCENT(curocc())) in 0, notappl then
	if K5L49_LARGE(curocc()) > 0 then 
		getWarningMsg("Item K.5.1.2.d (sold as table eggs) has no entry but there was provided average farmgate price. Please check entries.");
	endif;
endif;

savepartial();
PROC K5L50_XL
postproc
if visualvalue(K1L03_CONT_GROWING) = 1 then
	if K5L50_XL(curocc()) > 0 then 
		getWarningMsg("A. The answer in Item K.1.3 (Engagement to Contract Growing) is code 1 (Yes) but there was provided average farmgate price. Please check entries.");
	endif;
else
	if K5L50_XL(curocc()) > 0 then 
		getOutOfRange($,4.00,9.00,"B. Average farmgate price < > is not within the acceptable range. Please verify the inputted value.");
	endif;
endif;

if visualvalue(K5L40_PERCENT(curocc())) in 0, notappl then
	if K5L50_XL(curocc()) > 0 then 
		getWarningMsg("Item K.5.1.2.d (sold as table eggs) has no entry but there was provided average farmgate price. Please check entries.");
	endif;
endif;

savepartial();
PROC K5L51_JUMBO
postproc
numeric xTotalEggFG = visualvalue(K5L45_PEWEE(curocc())) + visualvalue(K5L46_XS(curocc())) + visualvalue(K5L47_SMALL(curocc())) + visualvalue(K5L48_MED(curocc())) + visualvalue(K5L49_LARGE(curocc())) + visualvalue(K5L50_XL(curocc())) + visualvalue(K5L51_JUMBO(curocc()));

if visualvalue(K1L03_CONT_GROWING) = 1 then
	if $(curocc()) > 0 then 
		getWarningMsg("A. The answer in Item K.1.3 (Engagement to Contract Growing) is code 1 (Yes) but there was provided average farmgate price. Please check entries.");
	endif;
else
	if $(curocc()) > 0 then 
		getOutOfRange($,4.00,9.00,"B.average farmgate price < > is not within the acceptable range. Please verify the inputted value.");
	endif;
endif;

if visualvalue(K5L40_PERCENT(curocc())) in 0, notappl then
	if $(curocc()) > 0 then 
		getWarningMsg("Item K.5.1.2.d (sold as table eggs) has no entry but there was provided average farmgate price. Please check entries.");
	endif;
elseif visualvalue(K5L40_PERCENT(curocc())) > 0 then
	if xTotalEggFG in 0, notappl then
		getErrorMsg("Pewee to Jumbo is 0 but sold as table eggs is greater than 0.");
	endif;
endif;

savepartial();
PROC K6L52_PRICE_COMPARED_LYSQ
preproc
ask if SUM(K5L40_PERCENT) > 0;

postproc
if not K6L52_PRICE_COMPARED_LYSQ in 1:2 then
	getErrorMsg("A. Please verify the inputted code.");
elseif K6L52_PRICE_COMPARED_LYSQ = notappl then
	getErrorMsg("B.No selected code.");
endif;

savepartial();
PROC K6L53_REASON_PRICE
preproc
ask if K6L52_PRICE_COMPARED_LYSQ in 1:2;
	
postproc
if K6L52_PRICE_COMPARED_LYSQ in 1:2 then
	if strip(K6L53_REASON_PRICE) = "" then
		getErrorMsg("A. Indicate the reason for increase/decrease in farmgate price");
	endif; 
endif;

	savepartial();

skip to REMARKS;
PROC GROUP008_NATIVE


preproc
if D2L12_NATIVE  = 8 then
	ok = 1
else
	skip to REMARKS
endif;
PROC L1L01_TYPE_OPERATION
	if not $ in 1:7 then
		getErrorMsg("A. No selected type of operation. Please select type of operation.");
	endif;
	
	savepartial();
PROC L2L02_TOTAL
postproc
if special($) then 
	$ = 0;
endif;

if CHANGE_FARM_CAP > 0 then
	if L2L02_TOTAL(2) > CHANGE_FARM_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;

else
	if L2L02_TOTAL(2) > MAX_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;
endif;


	savepartial();
PROC L2L03_LAYING_FLOCK
postproc
if special($) then 
	$ = 0;
else
	getOutOfRangeW($,0,999999);
endif;

 if L2L03_LAYING_FLOCK(curocc()) > L2L02_TOTAL(curocc()) then
	 getErrorMsg("B. Inventory of Laying Flock is greater than the total inventory.");
endif;
	
	savepartial();
PROC L2L04_OTHER_AGES
postproc
numeric xtot_ages, m1;
m1 = curocc();

if special($) then 
	$ = 0;
endif;
numeric xL2TotInventory = visualvalue(L2L03_LAYING_FLOCK(curocc())) + visualvalue(L2L04_OTHER_AGES(curocc()));

if xL2TotInventory <> visualvalue(L2L02_TOTAL(curocc())) then
    getErrorMsg(" The total inventory of Native/Improved is not equal to the breakdown. ");
endif;

if visualvalue(L2L03_LAYING_FLOCK(m1)) > L2L02_TOTAL(m1) then
	getErrorMsg("B. Inventory of Laying Flock is greater than the total inventory.");
elseif visualvalue(L2L04_OTHER_AGES(m1)) > L2L02_TOTAL(m1) then
	getErrorMsg("B. Inventory of Other Ages is greater than the total inventory.");
endif;

// xtot_ages =  getComputeTotal(visualvalue(L2L02_TOTAL(m1)),visualvalue(L2L03_LAYING_FLOCK(m1)),visualvalue(L2L04_OTHER_AGES(m1)),0 ,0 ,0);

savepartial();
PROC L2L05_TOTAL
	savepartial();
PROC L2L06_CHICKS_HATCHED
postproc
if special($) then 
	$ = 0;
else
	getOutOfRangeW(L2L06_CHICKS_HATCHED(curocc()), 0, 999999);
endif;


savepartial();
PROC L2L07_LAYING_FLOCK_RCVD
postproc
if special($) then 
	$ = 0;
else
	getOutOfRangeW(L2L07_LAYING_FLOCK_RCVD(curocc()), 0, 999999);
endif;


savepartial();
PROC L2L08_OTHER_AGE_RCVD
postproc
numeric xtot_ages, m2;
m2 = curocc();

if special($) then 
	$ = 0;
else
	getOutOfRangeW(L2L08_OTHER_AGE_RCVD(curocc()), 0, 999999);
endif;

L2L05_TOTAL(curocc()) = L2L06_CHICKS_HATCHED(curocc())  + L2L07_LAYING_FLOCK_RCVD(curocc())  + $(curocc()) ;

L3L05L08_TOT_SUPPLY(curocc()) =  L2L02_TOTAL(2) + L2L05_TOTAL(curocc());

// xtot_ages =  getComputeTotal(L2L05_TOTAL(m2),L2L06_CHICKS_HATCHED(m2),L2L07_LAYING_FLOCK_RCVD(m2),L2L08_OTHER_AGE_RCVD(m2), 0, 0);

savepartial();
PROC L4L09_CUR_YR
postproc
if not $ in 1:2 then
	getNoAcceptCode();
elseif $ = 2 then
	skip to L4L25_SOLD_PURPOSE;
endif;
	
	savepartial();
PROC L42_DRESSED_ESTAB_FQ
if $ = 2 then
	skip to L4L25_SOLD_PURPOSE;
endif;
PROC L4L10_BIRDS_C2C4
postproc
 getOutOfRangeW($,0,9999999);
 
if L4L10_BIRDS_C2C4(1) > (L2L02_TOTAL(1) + L2L05_TOTAL(1)) then
	getErrorMsg("B. Native dressed on household/farm is greater than Beginning Inventory + laying flock acquired + other than laying flock acquired.");
endif;

if L4L10_BIRDS_C2C4(2) > (L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2)) then
	getErrorMsg("C. Native dressed on household/farm is greater than Beginning Inventory + laying flock acquired + other than laying flock acquired.");
endif;

if L4L10_BIRDS_C2C4(3) > (L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3)) then
	getErrorMsg("D. Native dressed on household/farm is greater than Beginning Inventory + laying flock acquired + other than laying flock acquired.");
endif;

savepartial();
PROC L4L11_LIVEWT_C2C4
postproc
   if $ = notappl then
       getErrorMsg("Please verify the inputted code");
	endif;
	
	if L4L10_BIRDS_C2C4(curocc()) > 0 then
		if L4L11_LIVEWT_C2C4(curocc()) in 0, notappl then
			errmsg("A. Please verify the inputted code in either number of birds or average liveweight.");
			reenter;
		endif;
	endif;

	if L4L11_LIVEWT_C2C4(curocc()) > 0 then
		if L4L10_BIRDS_C2C4(curocc()) in 0, notappl then
			errmsg("B. Please verify the inputted code in either number of birds or average liveweight.");
			reenter;
		endif;
	endif;	

	if L4L10_BIRDS_C2C4(curocc()) > 0 then
		if not L4L11_LIVEWT_C2C4(curocc()) in 0.75:3.0 then
			errmsg("C. Average Liveweight is not within the acceptable range. Please verify the inputted value.");
			reenter;
		endif;
	endif;

	savepartial();
PROC L4L12_FARMGATE_C2C4
if L4L10_BIRDS_C2C4(curocc()) > 0 then
		if curocc() = 1 then
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 2 then  
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		elseif curocc() = 3 then  
			getOutOfRange($,80.00,300.00,"A. Average Farmgate is not within the the acceptable range.");
		endif;
		
		if L4L11_LIVEWT_C2C4(curocc()) = notappl and $(curocc()) = notappl then
			getErrorMsg("D. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif L4L11_LIVEWT_C2C4(curocc()) > 0 and $(curocc()) = notappl then
			getErrorMsg("G. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		elseif L4L11_LIVEWT_C2C4(curocc()) = notappl and $(curocc()) > 0 then
			getErrorMsg("H. Missing entry in either number of birds, average liveweight and/or average farmgate price");
		endif;
	else
		if L4L10_BIRDS_C2C4(curocc()) in 0,notappl then
			if L4L11_LIVEWT_C2C4(curocc()) > 0 and $(curocc()) = notappl then
				getErrorMsg("E. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif L4L11_LIVEWT_C2C4(curocc()) = notappl and $(curocc()) > 0 then
				getErrorMsg("F. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			elseif L4L11_LIVEWT_C2C4(curocc()) > 0 and $(curocc()) > 0 then
				getErrorMsg("I. Missing entry in either number of birds, average liveweight and/or average farmgate price");
			endif;	
			
		endif;
	endif;

	savepartial();
	
PROC L43_SOLDLIVE_DRESSING_FQ
postproc
	if   $ = 2  and L42_DRESSED_ESTAB_FQ = 2  and L4L09_CUR_YR = 1 then
	    getErrorMsg("Dispose/sell is code 1-“Yes” but dressed in the HH/Farm and sold live for dressing is code 2-“No”. ");
	endif;
	if $ = 2 then
		skip to L4L16_PREV_YR;
	elseif not $ in 1:2 then
		getNoAcceptCode();
	endif;
	
savepartial();
PROC L4L13_BIRDS_C2C4
postproc
	if $ = notappl then
	   getErrorMsg("Please verify the inputted code");
	endif;


	if L4L13_BIRDS_C2C4(1) > (L2L02_TOTAL(1) + L2L05_TOTAL(1)) then
		errmsg("B. Native dressed on household/farm is greater than Beginning Inventory + laying flock acquired + other than laying flock acquired");
		reenter;
	endif;

	if L4L13_BIRDS_C2C4(2) > (L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2)) then
		errmsg("C. Native dressed on household/farm is greater than Beginning Inventory + laying flock acquired + other than laying flock acquired");
		reenter;
	endif;

	if L4L13_BIRDS_C2C4(3) > (L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3)) then
		errmsg("D. Native dressed on household/farm is greater than Beginning Inventory + laying flock acquired + other than laying flock acquired");
		reenter;
	endif;

    // L4L21_TOTAL(curocc()) = $(curocc());
	savepartial();
PROC L4L14_LIVEWEIGHT_C2C4
postproc
	if $ = notappl then
	   getErrorMsg("Please verify the inputted code");
	endif;


	if L4L13_BIRDS_C2C4(curocc()) > 0 then
		if L4L14_LIVEWEIGHT_C2C4(curocc()) in 0, notappl then
			errmsg("A. Please verify the inputted code in either number of birds or average liveweight.");
			reenter;
		endif;
	endif;

	if L4L14_LIVEWEIGHT_C2C4(curocc()) > 0 then
		if L4L13_BIRDS_C2C4(curocc()) in 0, notappl then
			errmsg("B. Please verify the inputted code in either number of birds or average liveweight.");
			reenter;
		endif;
	endif;	

	if L4L13_BIRDS_C2C4(curocc()) > 0 then
		if not L4L14_LIVEWEIGHT_C2C4(curocc()) in 0.75:2.50 then
			getWarningMsg("C. Average Liveweight is not within the acceptable range. Please verify the inputted value.");
		endif;
	endif;

	savepartial();
PROC L4L15_FARMGATE_C2C4
postproc
	if $ = notappl then
	   getErrorMsg("Please verify the inputted code");
	endif;

	if L4L13_BIRDS_C2C4(curocc()) > 0 then
		if L4L14_LIVEWEIGHT_C2C4(curocc()) > 0 then
			if L4L15_FARMGATE_C2C4(curocc()) in 0, notappl then
				errmsg("A. Please verify the inputted code in either number of birds, average liveweight and/or average farmgate price.");
				reenter;
			endif;
		endif;
	endif;

	if L4L15_FARMGATE_C2C4(curocc()) > 0 then
		if L4L13_BIRDS_C2C4(curocc()) in 0, notappl then
			if L4L14_LIVEWEIGHT_C2C4(curocc()) in 0, notappl then 
				errmsg("B. Please verify the inputted code in either number of birds, average liveweight and/or average farmgate price.");
				reenter;
			endif;
		endif;
	endif;

	if L4L13_BIRDS_C2C4(curocc()) > 0 then
		if not L4L15_FARMGATE_C2C4(curocc()) in 80.0:500.0 then
			errmsg("C. Average farmgate <> is not within the acceptable range. Please verify the inputted value.");
			reenter;
		endif;
	endif;

	savepartial();
PROC L4L16_PREV_YR
numeric showw1,showw2,showw3,showw;
	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 2 then
		if L4L13_BIRDS_C2C4(1) >= 0 then
			showw1 = L4L13_BIRDS_C2C4(1);
		else
			showw1 = 0;
		endif;
		if L4L13_BIRDS_C2C4(2) >= 0 then
			showw2 = L4L13_BIRDS_C2C4(2);
		else
			showw2 = 0;
		endif;
		if L4L13_BIRDS_C2C4(3) >= 0 then
			showw3 = L4L13_BIRDS_C2C4(3);
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to L4L21_TOTAL(1);
		else
			skip to L4L25_SOLD_PURPOSE;
		endif;
	endif;
	
	savepartial();
PROC L4L17_COMPARED_YR
postproc
if L4L17_COMPARED_YR = 3 then
	skip to L4_PRICE_COMPARED_LYSQ;
elseif not L4L17_COMPARED_YR in 1:3 then
	getErrorMsg("No selected code. Please select a valid code.");
endif;
savepartial();
PROC L4L18_NATIVE_CHECKBOX_HIGH
preproc
ask if L4L17_COMPARED_YR = 1;

postproc
    if ischecked ("A",$) = 1 then L4L181_HIGH_PRICE_OFFER  =  1;endif;
	if ischecked ("B",$) = 1 then L4L182_HIGH_DEMAND       =  2;endif;
	if ischecked ("C",$) = 1 then L4L183_FINANCIAL_NEED    =  3;endif;
	if ischecked ("D",$) = 1 then L4L184_NO_OUTBREAK       =  4;endif;
	if ischecked ("E",$) = 1 then L4L185_FAV_WEATHER       =  5;endif;
	if ischecked ("F",$) = 1 then L4L186_GOVT_INTRVN       =  6;endif;
	if ischecked ("G",$) = 1 then L4L1813_HIGH_REASON      =  13;endif;

	if poschar("ABCDEFG", $) = 0 then
		getErrorMsg("No selected code!");
	ENDIF;

savepartial();
PROC L4L18_NATIVE_CHECKBOX_LOW
preproc
ask if L4L17_COMPARED_YR = 2;

postproc
    if ischecked ("A",$) = 1 then L4L187_LOW_PRICE_OFFER =  07;endif;
	if ischecked ("B",$) = 1 then L4L188_LOW_DEMAND      =  08;endif;
	if ischecked ("C",$) = 1 then L4L189_OUTBREAK        =  09;endif;
	if ischecked ("D",$) = 1 then L4L1810_UNFAV_WEATHER  =  10;endif;
	if ischecked ("E",$) = 1 then L4L1811_HIGH_COST      =  11;endif;
	if ischecked ("F",$) = 1 then L4L1812_GOVT_REGLTN    =  12;endif;
	if ischecked ("G",$) = 1 then L4L1813_LOW_REASON     =  13;endif;

	if poschar("ABCDEFG", $) = 0 then
		getErrorMsg("No selected code!");
	ENDIF;

savepartial();
PROC L4L1813_HIGH_SPECIFY
preproc
ask if ischecked("G", L4L18_NATIVE_CHECKBOX_HIGH) and L4L17_COMPARED_YR = 1;

postproc
if strip(L4L1813_HIGH_SPECIFY) = "" then
	errmsg("Indicate the reason for higher disposition.");
	reenter;
endif;
savepartial();
PROC L4L1813_LOW_SPECIFY
preproc
	ask if ischecked("G", L4L18_NATIVE_CHECKBOX_LOW) and L4L17_COMPARED_YR = 2;
	
postproc
if strip(L4L1813_LOW_SPECIFY) = "" then
	errmsg("Indicate the reason for lower disposition.");
	reenter;
endif;
	
	savepartial();
PROC L4_PRICE_COMPARED_LYSQ
postproc
if not L4_PRICE_COMPARED_LYSQ in 1:2 then
	getWarningMsg("Invalid code.");
endif;
savepartial();
PROC L4_REASON_PRICE
preproc
	ask if L4_PRICE_COMPARED_LYSQ in 1:2;
	
postproc
numeric showw1,showw2,showw3,showw;
	if strip($) = "" then
		getErrorMsg("A. Indicate the reason for increase/decrease in farmgate price");
	endif;
	
	
		if L4L13_BIRDS_C2C4(1) >= 0 then
			showw1 = L4L13_BIRDS_C2C4(1);
		else
			showw1 = 0;
		endif;
		if L4L13_BIRDS_C2C4(2) >= 0 then
			showw2 = L4L13_BIRDS_C2C4(2);
		else
			showw2 = 0;
		endif;
		if L4L13_BIRDS_C2C4(3) >= 0 then
			showw3 = L4L13_BIRDS_C2C4(3);
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to L4L21_TOTAL(1);
		else
			skip to L4L25_SOLD_PURPOSE;
		endif;
	savepartial();
PROC L4L21_TOTAL
preproc
if visualvalue(L4L10_BIRDS_C2C4(curocc())) in notappl, 0 then
    L4L21_TOTAL(curocc()) = 0;
else
    L4L21_TOTAL(curocc()) = visualvalue(L4L13_BIRDS_C2C4(curocc()));
endif;
savepartial();
PROC L4L22_WIN_PRV
postproc
if L4L22_WIN_PRV(curocc()) > L4L21_TOTAL(curocc()) then
	errmsg("Item L.4.4.a (within the province) < > is greater than L.4.3 (Total) < >. Please verify the inputted values.");
	reenter;
else
	getOutOfRangeW($,0,9999999);
endif;
savepartial();
PROC L4L23_OUT_PRV
postproc
if L4L23_OUT_PRV(curocc()) > L4L21_TOTAL(curocc()) then
	errmsg("Item L.4.4.b (outside the province) < > is greater than L.4.3 (Total) < >. Please verify the inputted values.");
	reenter;
else
	getOutOfRangeW($,0,9999999);
endif;
savepartial();
PROC L4L24_UNK_PRV
postproc
if L4L21_TOTAL(curocc()) <> L4L22_WIN_PRV(curocc()) + L4L23_OUT_PRV(curocc()) + L4L24_UNK_PRV(curocc()) then
	errmsg("A. Item L.4.3 (Total) < > is not equal to the sum of Item L.4.4.a (within the province) < >, Item L.4.4.b (outside the province) < >, and Item L.4.4.c (unknown destination) < >. Please verify the inputted values.");
	reenter;
else
	getOutOfRangeW($,0,9999999);
endif;

savepartial();
PROC L4L25_SOLD_PURPOSE
postproc
if not L4L25_SOLD_PURPOSE in 1:2 then
	getErrorMsg("C. Invalid code. Please enter a valid code.")
elseif L4L25_SOLD_PURPOSE = 2 then
	skip to L5_NATIVE_DIED;
endif;

	savepartial();
PROC L42_SOLD_OTHER_PURPOSE_FQ
	if poschar("AB", $) = 0 then
		getErrorMsg("NO selected Native/Chicken sold live/disposed for other purpose!");
	elseif poschar("D", $) > 0 and poschar("AB", $) > 0 then
		getErrorMsg("Selection not allowed! 'D - None' cannot be selected with other choices!");
	else
		if poschar("D", $) > 0 and poschar("AB", $) = 0 then
			skip to L5_NATIVE_DIED;
		endif;
	endif;
	
	
	savepartial();
PROC L4L27L28_BIRDS_M1
preproc
	//selection of ages
	if ischecked("A",L42_SOLD_OTHER_PURPOSE_FQ) = 0 then 
		if curocc() = 1 then    
			move to L4L27L28_BIRDS_M1(2); // punta doeling
		endif;
	endif;

	if ischecked("B",L42_SOLD_OTHER_PURPOSE_FQ) = 0 then 
		if curocc() = 3 then    
			move to L4L27L28_BIRDS_M1(1); 
		endif;
	endif;
 
 
postproc

	xblockE3_m1 = $(1) + $(2);
	L4L26_TOTAL_M1 = xblockE3_m1;
  
savepartial();  
PROC L4L27L28_FARMGATE_M1
	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	if curocc() = 1 then
		getOutOfRange($,80.00,500.00,"A. Average Farmgate price is not within the the acceptable range.");
	elseif curocc() = 2 then  
		getOutOfRange($,80.00,500.00,"A. Average Farmgate price is not within the the acceptable range.");
	endif;
	
	if L4L27L28_BIRDS_M1 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of birds but no average farmgate price.");
	endif;
	
	if $ > 0 and (L4L27L28_BIRDS_M1 = notappl or L4L27L28_BIRDS_M1 = 0) then
		getErrorMsg("C. Without entry in number of birds but with farmgate price.");
	endif;
	
	//I4L26_FARMGATE_TOTAL_M1 = $(1) + $(2) + $(3);
	
	savepartial();
PROC L4L27L28_DESTINATION_M1
postproc
if curocc() = 1 then
	if L4L27L28_BIRDS_M1(curocc()) > 0 then
		if not L4L27L28_DESTINATION_M1(curocc()) in 1:3 then
			errmsg("A. Laying Flock has entry but no specified destination was selected.");
			reenter;
		endif;
	else
		if not L4L27L28_FARMGATE_M1(curocc()) > 0 then
			if not L4L27L28_DESTINATION_M1(curocc()) in 0, notappl then
				getWarningMsg("A. Laying Flock has no entry but  specified destination was not selected.");
			endif;		
		endif;
	endif;
elseif curocc() = 2 then
	if L4L27L28_BIRDS_M1(curocc()) > 0 then
		if not L4L27L28_DESTINATION_M1(curocc()) in 1:3 then
			errmsg("A. Other ages has entry but no specified destination was selected.");
			reenter;
		endif;
	else
		if not L4L27L28_FARMGATE_M1(curocc()) > 0 then
			if not L4L27L28_DESTINATION_M1(curocc()) in 0, notappl then
				getWarningMsg("A. Other ages has no entry but  specified destination was not selected.");
			endif;		
		endif;
	endif;
endif;	
  
	// I4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
  
	savepartial();
PROC L4L27L28_BIRDS_M2
preproc
	//selection of ages
	if ischecked("A",L42_SOLD_OTHER_PURPOSE_FQ) = 0 then 
		if curocc() = 1 then    
			move to L4L27L28_BIRDS_M2(2); // punta doeling
		endif;
	endif;

	if ischecked("B",L42_SOLD_OTHER_PURPOSE_FQ) = 0 then 
		if curocc() = 3 then    
			move to L4L27L28_BIRDS_M2(1); 
		endif;
	endif;
 
 
postproc

	xblockE3_m2 = $(1) + $(2);
	L4L26_TOTAL_M2 = xblockE3_m2;
  
	savepartial();
PROC L4L27L28_FARMGATE_M2
	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	if curocc() = 1 then
		getOutOfRange($,80.00,500.00,"A. Average Farmgate price is not within the the acceptable range.");
	elseif curocc() = 2 then  
		getOutOfRange($,80.00,500.00,"A. Average Farmgate price is not within the the acceptable range.");
	endif;
	
	if L4L27L28_BIRDS_M2 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of birds but no average farmgate price.");
	endif;
	
	if $ > 0 and (L4L27L28_BIRDS_M2 = notappl or L4L27L28_BIRDS_M2 = 0) then
		getErrorMsg("C. Without entry in number of birds but with farmgate price.");
	endif;
	
	//I4L26_FARMGATE_TOTAL_M1 = $(1) + $(2) + $(3);
	
	savepartial();
PROC L4L27L28_DESTINATION_M2
postproc
if curocc() = 1 then
	if L4L27L28_BIRDS_M2(curocc()) > 0 then
		if not L4L27L28_DESTINATION_M2(curocc()) in 1:3 then
			errmsg("A. Laying Flock has entry but no specified destination was selected.");
			reenter;
		endif;
	else
		if not L4L27L28_FARMGATE_M2(curocc()) > 0 then
			if not L4L27L28_DESTINATION_M2(curocc()) in 0, notappl then
				getWarningMsg("A. Laying Flock has no entry but  specified destination was not selected.");
			endif;		
		endif;
	endif;
elseif curocc() = 2 then
	if L4L27L28_BIRDS_M2(curocc()) > 0 then
		if not L4L27L28_DESTINATION_M2(curocc()) in 1:3 then
			errmsg("A. Other ages has entry but no specified destination was selected.");
			reenter;
		endif;
	else
		if not L4L27L28_FARMGATE_M2(curocc()) > 0 then
			if not L4L27L28_DESTINATION_M2(curocc()) in 0, notappl then
				getWarningMsg("A. Other ages has no entry but  specified destination was not selected.");
			endif;		
		endif;
	endif;
endif;
  
	// I4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
  
	savepartial();
PROC L4L27L28_BIRDS_M3
preproc
	//selection of ages
	if ischecked("A",L42_SOLD_OTHER_PURPOSE_FQ) = 0 then 
		if curocc() = 1 then    
			move to L4L27L28_BIRDS_M3(2); // punta doeling
		endif;
	endif;

	if ischecked("B",L42_SOLD_OTHER_PURPOSE_FQ) = 0 then 
		if curocc() = 3 then    
			move to L4L27L28_BIRDS_M3(1); 
		endif;
	endif;
 
 
postproc

	xblockE3_m3 = $(1) + $(2);
	L4L26_TOTAL_M3 = xblockE3_m3;
  
	savepartial();
PROC L4L27L28_FARMGATE_M3
	if $(curocc()) = notappl then   
		getErrorMsg("Missing Entry");
	endif;
	
	if curocc() = 1 then
		getOutOfRange($,80.00,500.00,"A. Average Farmgate price is not within the the acceptable range.");
	elseif curocc() = 2 then  
		getOutOfRange($,80.00,500.00,"A. Average Farmgate price is not within the the acceptable range.");
	endif;
	
	if L4L27L28_BIRDS_M3 > 0 and ($ = notappl or $ = 0) then
		getErrorMsg("B. With entry in number of birds but no average farmgate price.");
	endif;
	
	if $ > 0 and (L4L27L28_BIRDS_M3 = notappl or L4L27L28_BIRDS_M3 = 0) then
		getErrorMsg("C. Without entry in number of birds but with farmgate price.");
	endif;
	
	//I4L26_FARMGATE_TOTAL_M1 = $(1) + $(2) + $(3);
	
	savepartial();
PROC L4L27L28_DESTINATION_M3
postproc
if curocc() = 1 then
	if L4L27L28_BIRDS_M3(curocc()) > 0 then
		if not L4L27L28_DESTINATION_M3(curocc()) in 1:3 then
			errmsg("A. Laying Flock has entry but no specified destination was selected.");
			reenter;
		endif;
	else
		if not L4L27L28_FARMGATE_M3(curocc()) > 0 then
			if not L4L27L28_DESTINATION_M3(curocc()) in 0, notappl then
				getWarningMsg("A. Laying Flock has no entry but  specified destination was not selected.");
			endif;		
		endif;
	endif;
elseif curocc() = 2 then
	if L4L27L28_BIRDS_M3(curocc()) > 0 then
		if not L4L27L28_DESTINATION_M3(curocc()) in 1:3 then
			errmsg("A. Other ages has entry but no specified destination was selected.");
			reenter;
		endif;
	else
		if not L4L27L28_FARMGATE_M3(curocc()) > 0 then
			if not L4L27L28_DESTINATION_M3(curocc()) in 0, notappl then
				getWarningMsg("A. Other ages has no entry but  specified destination was not selected.");
			endif;		
		endif;
	endif;
endif;

if poschar("AB", L42_SOLD_OTHER_PURPOSE_FQ) > 0 then
	if L4L27L28_BIRDS_M1(curocc()) = 0 and L4L27L28_BIRDS_M2(curocc()) = 0 and L4L27L28_BIRDS_M3(curocc()) = 0 then
		getErrorMsg(" Ages of Native is selected but all months have no entry.");
	endif;
endif;

	// I4L26_DESTINATION_TOTAL_M1 = $(1) + $(2) + $(3);
  
	savepartial();
PROC L5_NATIVE_DIED
postproc
if not L5_NATIVE_DIED in 1:2 then
	getErrorMsg("Please select code for deaths/losses");
elseif $ = 2 then
	skip to L6L37_PROD_EGG_PREV_YR;
endif;

savepartial();
PROC L5_CAUSE_DEATH_FQ
postproc

if ischecked("A",$) = 0 and ischecked("B",$) = 0 and ischecked("C",$) = 0 and ischecked("D",$) = 0  then
       getErrorMsg(" Entered value is not within the acceptable codes.");
endif;	   

if ischecked ("A",$) = 1 then
       skip to L4L30_AVIAN_INFLUENZA(1);
elseif ischecked ("B",$) = 1 then
	   skip to L4L31_ND(1);
elseif ischecked ("C",$) = 1 then
	   skip to LD_NATIVE_DISEASE(1);
elseif ischecked ("D",$) = 1 then
	   skip to LCA_SPECIFY(1);

endif;
 
 savepartial();

PROC L4L30_AVIAN_INFLUENZA
preproc
ask if ischecked("A", L5_CAUSE_DEATH_FQ);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
numeric cnt;

do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if L4L30_AVIAN_INFLUENZA(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
    if curocc() = 1 then L5L30L33_NUMBER_BIRDS_M1(1) = $(curocc()); 
elseif curocc() = 2 then L5L30L33_NUMBER_BIRDS_M2(1) = $(curocc()); 
elseif curocc() = 3 then L5L30L33_NUMBER_BIRDS_M3(1) = $(curocc());
endif;	

if curocc() = 3 then
	if L4L30_AVIAN_INFLUENZA(1) in 0, notappl then
		if L4L30_AVIAN_INFLUENZA(2) in 0, notappl then
			if L4L30_AVIAN_INFLUENZA(3) in 0, notappl then
				getErrorMsg("Selected Avian Influenza in the cause of deaths, but no answer in all months.");
			endif;
		endif;
	endif;
endif;
savepartial();
PROC L4L31_ND
preproc
ask if ischecked("B", L5_CAUSE_DEATH_FQ);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);

do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if L4L31_ND(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;

    if curocc() = 1 then L5L30L33_NUMBER_BIRDS_M1(2) = $(curocc()); 
elseif curocc() = 2 then L5L30L33_NUMBER_BIRDS_M2(2) = $(curocc()); 
elseif curocc() = 3 then L5L30L33_NUMBER_BIRDS_M3(2) = $(curocc());
endif;

if curocc() = 3 then
	if L4L31_ND(1) in 0, notappl then
		if L4L31_ND(2) in 0, notappl then
			if L4L31_ND(3) in 0, notappl then
				getErrorMsg("Selected Avian Influenza in the cause of deaths, but no answer in all months.");
			endif;
		endif;
	endif;
endif;	
savepartial();
PROC LD_NATIVE_DISEASE
preproc
ask if ischecked("C", L5_CAUSE_DEATH_FQ);
string xa, xb,xc, xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn,xo,xp,xq,xr,xs,xt,xu;
numeric xVal;
postproc
if soccurs(RTL4_L30L33) = 0 then INSERT(RTL4_L30L33(1)); endif;
if soccurs(RTL4_L30L33) = 1 then INSERT(RTL4_L30L33(2)); endif;

    if ischecked ("A",$) = 0 then  LDA_HC(curocc()) = notappl; else  xa = getlabel($,"A");endif;
	if ischecked ("B",$) = 0 then  LDB_HC(curocc()) = notappl; else  xb = getlabel($,"B");endif;
	if ischecked ("C",$) = 0 then  LDC_HC(curocc()) = notappl; else  xc = getlabel($,"C");endif;
	if ischecked ("D",$) = 0 then  LDF_HC(curocc()) = notappl; else  xd = getlabel($,"D");endif;
	if ischecked ("E",$) = 0 then  LDG_HC(curocc()) = notappl; else  xe = getlabel($,"E");endif;
	if ischecked ("F",$) = 0 then  LDH_HC(curocc()) = notappl; else  xf = getlabel($,"F");endif;
	if ischecked ("G",$) = 0 then  LDI_HC(curocc()) = notappl; else  xg = getlabel($,"G");endif;
    if ischecked ("H",$) = 0 then  LDJ_HC(curocc()) = notappl; else  xh = getlabel($,"H");endif;
	if ischecked ("I",$) = 0 then  LDK_HC(curocc()) = notappl; else  xi = getlabel($,"I");endif;
	if ischecked ("J",$) = 0 then  LDL_HC(curocc()) = notappl; else  xj = getlabel($,"J");endif;
	if ischecked ("K",$) = 0 then  LDM_HC(curocc()) = notappl; else  xk = getlabel($,"K");endif;
	if ischecked ("L",$) = 0 then  LDN_HC(curocc()) = notappl; else  xl = getlabel($,"L");endif;
	if ischecked ("M",$) = 0 then  LDO_HC(curocc()) = notappl; else  xm = getlabel($,"M");endif;	
    if ischecked ("N",$) = 0 then  LDP_HC(curocc()) = notappl; else  xn = getlabel($,"N");endif;
	if ischecked ("O",$) = 0 then  LDQ_HC(curocc()) = notappl; else  xo = getlabel($,"O");endif;
	if ischecked ("P",$) = 0 then  LDR_HC(curocc()) = notappl; else  xp = getlabel($,"P");endif;
	if ischecked ("Q",$) = 0 then  LDS_HC(curocc()) = notappl; else  xq = getlabel($,"Q");endif;
	if ischecked ("R",$) = 0 then  LDT_HC(curocc()) = notappl; else  xr = getlabel($,"R");endif;
	if ischecked ("S",$) = 0 then  LDU_HC(curocc()) = notappl; else  xs = getlabel($,"S");endif;
	 		    
// xVal = poschar("ABCDEFGHIJKLMNOPQRSTU", $);
// IF xVal = 0 then
     // getWarningMsg(" Please specify the cause of death due to other disease.");
// endif;
	
if curocc() = 3 then
	if poschar("ABCDEFGHIJKLMNOPQRSTU", LD_NATIVE_DISEASE(1)) in 0, notappl then
		if poschar("ABCDEFGHIJKLMNOPQRSTU", LD_NATIVE_DISEASE(2)) in 0, notappl then
			if poschar("ABCDEFGHIJKLMNOPQRSTU", LD_NATIVE_DISEASE(3)) in 0, notappl then
				getErrorMsg("Please specify the cause of death due to other disease");
			endif;	
		endif;	
	endif;	
endif;

if curocc() = 1  then

     L5L30L33_CDEATHS_SPCFY_M1(3) = concat(xa,xb,xc,xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn,xo,xp,xq,xr,xs,xt,xu );	 
elseif curocc() = 2  then
     L5L30L33_CDEATHS_SPCFY_M2(3) = concat(xa,xb,xc,xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn,xo,xp,xq,xr,xs,xt,xu );
elseif curocc() = 3  then
     L5L30L33_CDEATHS_SPCFY_M3(3) = concat(xa,xb,xc,xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn,xo,xp,xq,xr,xs,xt,xu );
 	 
endif;

savepartial();

PROC LDA_HC
preproc
ask if ischecked("A", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDA_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDB_HC
preproc
ask if ischecked("B", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDB_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDC_HC
preproc
ask if ischecked("C", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDC_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDF_HC
preproc
ask if ischecked("D", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDF_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDG_HC
preproc
ask if ischecked("E", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDG_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDH_HC
preproc
ask if ischecked("F", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDH_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDI_HC
preproc
ask if ischecked("G", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDI_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDJ_HC
preproc
ask if ischecked("H", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDJ_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDK_HC
preproc
ask if ischecked("I", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDK_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDL_HC
preproc
ask if ischecked("J", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDL_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDM_HC
preproc
ask if ischecked("K", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDM_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDN_HC
preproc
ask if ischecked("L", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDN_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDO_HC
preproc
ask if ischecked("M", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDO_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDP_HC
preproc
ask if ischecked("N", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDP_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDQ_HC
preproc
ask if ischecked("O", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDQ_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDR_HC
preproc
ask if ischecked("P", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDR_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDS_HC
preproc
ask if ischecked("Q", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDS_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;
if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();
PROC LDT_HC
preproc
ask if ischecked("R", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDT_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
savepartial();

PROC LDA_SPECIFY
preproc
ask if ischecked("S", LD_NATIVE_DISEASE);
PROC LDU_HC
preproc
ask if ischecked("S", LD_NATIVE_DISEASE);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);

do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LDU_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;

 if $ in 0,notappl and strip(LDA_SPECIFY) = "" then 
   getErrorMsg("code 99 is selected but no entries in specify and count of heads.");
elseif strip(LDA_SPECIFY) = "" and $ > 0 then
   getErrorMsg("code 99 is selected but no entries in specify but count of heads have entries.");
endif; 

savepartial();
PROC LCA_SPECIFY000
preproc 
ask if ischecked("D", L5_CAUSE_DEATH_FQ);
PROC LCA_SPECIFY
preproc 
ask if ischecked("D", L5_CAUSE_DEATH_FQ);

postproc
   
savepartial();
PROC LCA_SP_HC
preproc 
ask if ischecked("D", L5_CAUSE_DEATH_FQ);

postproc
    if curocc() = 1 then L5L30L33_NUMBER_BIRDS_M1(4) = $(curocc()); 
elseif curocc() = 2 then L5L30L33_NUMBER_BIRDS_M2(4) = $(curocc()); 
elseif curocc() = 3 then L5L30L33_NUMBER_BIRDS_M3(4) = $(curocc());
endif;	

numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LCA_SP_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;

 if $ in 0,notappl and strip(LCA_SPECIFY) <> "" then 
    getErrorMsg(" Other cause is empty but Other cause(Specify) has an entry. Please indicate the percentage or verify the cause indicated.");
elseif $ > 0 and strip(LCA_SPECIFY) = "" then 
    getErrorMsg("Other causes (Specify) is empty but Other cause is greater than zero. Please indicate the cause of mortality or verify the percentage.");

endif;	

savepartial();

PROC LCB_SPECIFY
preproc 
ask if ischecked("D", L5_CAUSE_DEATH_FQ);

postproc
savepartial();
PROC LCB_SP_HC
preproc 
ask if ischecked("D", L5_CAUSE_DEATH_FQ);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LCA_SP_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;

 if $ in 0,notappl and strip(LCB_SPECIFY) <> "" then 
    getErrorMsg(" Other cause is empty but Other cause(Specify) has an entry. Please indicate the percentage or verify the cause indicated.");
elseif $ > 0 and strip(LCB_SPECIFY) = "" then 
    getErrorMsg("Other causes (Specify) is empty but Other cause is greater than zero. Please indicate the cause of mortality or verify the percentage.");

endif;	

savepartial();

PROC LCC_SPECIFY
preproc 
ask if ischecked("D", L5_CAUSE_DEATH_FQ);

postproc
	if curocc() = 3 then    	
		if  strip(LCA_SPECIFY(1)) = "" and strip(LCA_SPECIFY(2)) = "" and strip(LCA_SPECIFY(3)) = "" and
			strip(LCB_SPECIFY(1)) = "" and strip(LCB_SPECIFY(2)) = "" and strip(LCB_SPECIFY(3)) = "" and 
			strip($(1)) = "" and strip($(2)) = "" and strip($(3)) = "" then
				getErrorMsg("D. Please specify the cause of death due to other causes.");
		endif;
	endif;
	savepartial();
PROC LCC_SP_HC
preproc 
ask if ischecked("D", L5_CAUSE_DEATH_FQ);

postproc
numeric totInvSupp = L2L02_TOTAL(1) + L2L05_TOTAL(1) + L2L05_TOTAL(2) + L2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTL4_DC)
	if LCA_SP_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other diseases is greater than the total supply");
		reenter;
	endif;
enddo;

 if $ in 0,notappl and strip(LCC_SPECIFY) <> "" then 
    getErrorMsg(" Other cause is empty but Other cause(Specify) has an entry. Please indicate the percentage or verify the cause indicated.");
elseif $ > 0 and strip(LCC_SPECIFY) = "" then 
    getErrorMsg("Other causes (Specify) is empty but Other cause is greater than zero. Please indicate the cause of mortality or verify the percentage.");

endif;	

savepartial();
PROC L6_SELL_CUR_YR
postproc
if not L6_SELL_CUR_YR in 1:2 then
	getErrorMsg("No selected code. Please select a valid code");
elseif $ = 2 then
	skip to C3L09_STATUS_OP_RESULT_VISIT;
endif;

	savepartial();
	
PROC L6L35_EGGS_LAID
postproc
if L6L35_EGGS_LAID(1) > ((L2L03_LAYING_FLOCK(1) + L2L07_LAYING_FLOCK_RCVD(1)) * 20) then
	errmsg("A. Item  L.6.2.a (Average number of eggs laid in a month) exceeds  the number of eggs to be laid by the total number of adult female indicated in the inventory. Please check the consistency of the values.");
	reenter;
endif;

if L6L35_EGGS_LAID(2) > ((L2L03_LAYING_FLOCK(1) + L2L07_LAYING_FLOCK_RCVD(2)) * 20) then
	errmsg("A. Item  L.6.2.a (Average number of eggs laid in a month) exceeds  the number of eggs to be laid by the total number of adult female indicated in the inventory. Please check the consistency of the values.");
	reenter;
endif;

if L6L35_EGGS_LAID(3) > ((L2L03_LAYING_FLOCK(1) + L2L07_LAYING_FLOCK_RCVD(3)) * 20) then
	errmsg("A. Item  L.6.2.a (Average number of eggs laid in a month) exceeds  the number of eggs to be laid by the total number of adult female indicated in the inventory. Please check the consistency of the values.");
	reenter;
endif;

	savepartial();
PROC L6L36_CONV_RATE
postproc
if L6L35_EGGS_LAID(curocc()) > 0 then
	if not L6L36_CONV_RATE(curocc()) in 15:25 then
		errmsg("A. Conversion Rate <> is not within the acceptable range. Please verify the inputted value.");
		reenter;
	elseif L6L36_CONV_RATE(curocc()) in 0, notappl then
		errmsg("B. Missing entry in either Estimated number of eggs laid in a month or Conversion Rate. Please verify the inputted value.");
		reenter;
	endif;		
endif;

if L6L36_CONV_RATE(curocc()) > 0 then
	if L6L35_EGGS_LAID(curocc()) in 0, notappl then
		errmsg("C. Missing entry in either Estimated number of eggs laid in a month or Conversion Rate. Please verify the inputted value.");
		reenter;
	endif;
endif;

savepartial();
PROC L6L37_PROD_EGG_PREV_YR
postproc
if not L6L37_PROD_EGG_PREV_YR in 1:2 then
	getErrorMsg("C. Invalid code. Please enter a valid code");
elseif $ = 2 then
	skip to L6L40_TOTAL_EGG_PERCENT(1);
endif;
	
	savepartial();
PROC L6L38_COMPARED_YR
postproc
if not L6L38_COMPARED_YR in 1:3 then
	getErrorMsg("C. Invalid code. Please enter a valid code");
elseif L6L38_COMPARED_YR = 3 then
	skip to L6L40_TOTAL_EGG_PERCENT(1);
endif;

	savepartial();
PROC L5L39_NATIVE_EGG_CBOX_HIGH
preproc
ask if L6L38_COMPARED_YR = 1;
postproc
    if ischecked ("A",$) = 1 then L6L391_HIGH_PRICE_OFFER  =  1;endif;
	if ischecked ("B",$) = 1 then L6L392_HIGH_DEMAND       =  2;endif;
	if ischecked ("C",$) = 1 then L6L393_FINANCIAL_NEED    =  3;endif;
	if ischecked ("D",$) = 1 then L6L394_NO_OUTBREAK       =  4;endif;
	if ischecked ("E",$) = 1 then L6L395_FAV_WEATHER       =  5;endif;
	if ischecked ("F",$) = 1 then L6L396_GOVT_INTRVN       =  6;endif;
	if ischecked ("G",$) = 1 then L6L3915_HIGH_REASON      =  15;endif;

	if poschar("ABCDEFG", $) = 0 then
		getErrorMsg("No selected code!");
	ENDIF;

savepartial();
PROC L5L39_NATIVE_EGG_CBOX_LOW
preproc
ask if L6L38_COMPARED_YR = 2;
postproc
    if ischecked ("A",$) = 1 then L6L397_LOW_PRICE_OFFER =  07;endif;
	if ischecked ("B",$) = 1 then L6L398_LOW_DEMAND      =  08;endif;
	if ischecked ("C",$) = 1 then L6L399_OUTBREAK        =  09;endif;
	if ischecked ("D",$) = 1 then L6L3910_UNFAV_WEATHER  =  10;endif;
	if ischecked ("E",$) = 1 then L6L3911_HIGH_COST      =  11;endif;
	if ischecked ("F",$) = 1 then L6L3912_GOVT_REGLTN    =  12;endif;
	if ischecked ("G",$) = 1 then L6L3913_MOLTING        =  13;endif;
	if ischecked ("H",$) = 1 then L6L3914_CULLING        =  14;endif;
	if ischecked ("I",$) = 1 then L6L3915_LOW_REASON     =  15;endif;

	if poschar("ABCDEFGHI", $) = 0 then
		getErrorMsg("No selected code!");
	ENDIF;
savepartial();
PROC L6L3915_HIGH_SPECIFY
preproc
	ask if ischecked("G", L5L39_NATIVE_EGG_CBOX_HIGH) and L6L38_COMPARED_YR = 1;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified.");
	endif;
	
	savepartial();
PROC L6L3915_LOW_SPECIFY
preproc
	ask if ischecked("I", L5L39_NATIVE_EGG_CBOX_LOW) and L6L38_COMPARED_YR = 2;
	
postproc
	if strip($) = "" then
		getErrorMsg("C. No other reason specified.");
	endif;
	
	savepartial();
PROC L6L41_CONSUMED_PERCENT
postproc
if not $ in 0:100 then
	getNoAcceptCode();
endif;
savepartial();
PROC L6L42_HATCH_PERCENT
postproc
if not $ in 0:100 then
	getNoAcceptCode();
endif;
savepartial();
PROC L6L43_WASTAGE_PERCENT
postproc
if not $ in 0:100 then
	getNoAcceptCode();
endif;
savepartial();
PROC L6L44_SOLD_PERCENT
postproc
if not $ in 0:100 then
	getNoAcceptCode();
endif;

numeric eggsProducedTotal = L6L41_CONSUMED_PERCENT(curocc()) + L6L42_HATCH_PERCENT(curocc()) + L6L43_WASTAGE_PERCENT(curocc()) + L6L44_SOLD_PERCENT(curocc());
L6L40_TOTAL_EGG_PERCENT(curocc()) = eggsProducedTotal;
if eggsProducedTotal <> 100 then
	errmsg("B. Item K.5.2 (Total Egg Disposition) is not equal to 100 percent. Please verify the inputted values.");
	reenter;
endif;

if sum(L6L35_EGGS_LAID) > 0 then
	if eggsProducedTotal = 0 then
		errmsg("D. Egg production indicator is greater than zero but egg disposition is equal to zero.");
		reenter;
	endif;	
endif;

if sum(L6L35_EGGS_LAID) = 0 then
	if eggsProducedTotal > 0 then
		errmsg("E. Egg production indicator is equal tozero but egg disposition is greater than zero.");
		reenter;
	endif;	
endif;
savepartial();
PROC BLOCK001L5_L45L48
preproc 
	ask if L6L44_SOLD_PERCENT > 0;
PROC L6L45_TOTAL_PERCENT
preproc 
L6L45_TOTAL_PERCENT = 100;
PROC L6L46_WIN_PRV_PERCENT
postproc
if L6L44_SOLD_PERCENT(curocc()) > 0 then
	if not L6L46_WIN_PRV_PERCENT(curocc()) in 0:100 then
		getNoAcceptCode();
	endif;
endif;


savepartial();
PROC L6L47_OUT_PRV_PERCENT
postproc
if L6L44_SOLD_PERCENT(curocc()) > 0 then
	if not L6L47_OUT_PRV_PERCENT(curocc()) in 0:100 then
		getNoAcceptCode();
	endif;
endif;

savepartial();
PROC L6L48_UNK_PRV_PERCENT
postproc
numeric eggDestinationTotal = L6L46_WIN_PRV_PERCENT(curocc()) + L6L47_OUT_PRV_PERCENT(curocc()) + L6L48_UNK_PRV_PERCENT(curocc());

if L6L45_TOTAL_PERCENT(curocc()) <> eggDestinationTotal then
	errmsg("Total egg sold [%v] not equal to the total breakdown [%v]. Please check",L6L45_TOTAL_PERCENT(curocc()), eggDestinationTotal);
	reenter
endif;
savepartial();
PROC BLOCK001L5_L49L51
preproc 
	ask if L6L44_SOLD_PERCENT > 0;
PROC L6L49_PRICE_EGG_S
postproc
if L6L44_SOLD_PERCENT(curocc()) in 0, notappl then
	if L6L49_PRICE_EGG_S(curocc()) > 0 then
		getErrorMsg("A. Item L.6.1.d (sold as table eggs) has no entry but there was provided average farmgate price. Please check entries.");
	endif;
elseif L6L44_SOLD_PERCENT(curocc()) > 0 then
	if not L6L49_PRICE_EGG_S(curocc()) in 0,4:15 then
		getWarningMsg("B. Item L.6.4.a (average farmgate price) <> is not within the acceptable range. Please verify the inputted value");
	endif;
endif;

savepartial();
PROC L6L50_PRICE_EGG_M
postproc
if L6L44_SOLD_PERCENT(curocc()) in 0, notappl then
	if L6L50_PRICE_EGG_M(curocc()) > 0 then
		getErrorMsg("A. Item L.6.1.d (sold as table eggs) has no entry but there was provided average farmgate price. Please check entries.");
	endif;
elseif L6L44_SOLD_PERCENT(curocc()) > 0 then
	if not L6L50_PRICE_EGG_M(curocc()) in 0,4:15 then
		getWarningMsg("B. Item L.6.4.b (average farmgate price) <> is not within the acceptable range. Please verify the inputted value");
	endif;
endif;

savepartial();
PROC L6L51_PRICE_EGG_L
postproc
if L6L44_SOLD_PERCENT(curocc()) in 0, notappl then
	if L6L51_PRICE_EGG_L(curocc()) > 0 then
		getErrorMsg("A. Item L.6.1.d (sold as table eggs) has no entry but there was provided average farmgate price. Please check entries.");
	endif;
elseif L6L44_SOLD_PERCENT(curocc()) > 0 then
	if not L6L51_PRICE_EGG_L(curocc()) in 0,4:15 then
		getWarningMsg("B. Item L.6.4.c (average farmgate price) <> is not within the acceptable range. Please verify the inputted value");
	endif;
endif;

savepartial();
PROC L6_PRICE_COMPARED_LYSQ
preproc
ask if SUM(L6L44_SOLD_PERCENT) > 0;

postproc
	if not L6_PRICE_COMPARED_LYSQ in 1:2 then
		if L6_PRICE_COMPARED_LYSQ = notappl then
			getErrorMsg("No selected code");
		else
			getNoAcceptCode();
		endif;
	endif;
	
	savepartial();
PROC L6_REASON_PRICE
preproc
	ask if L6_PRICE_COMPARED_LYSQ in 1:2;
	
postproc
	if strip($) = "" then
		getErrorMsg("A. Indicate the reason for increase/decrease in farmgate price");
	else
		skip to C3L09_STATUS_OP_RESULT_VISIT;
	endif;
	
	savepartial();


//********  Block M - GameFowl *******//
PROC GROUP009_GAMEFOWL

preproc
if D2L12_GAMEFOWL   = 9 then
	ok = 1
else
	skip to REMARKS;
endif;
PROC M1L01_TOTAL
postproc
if CHANGE_FARM_CAP > 0 then
	if M1L01_TOTAL(2) > CHANGE_FARM_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;

else
	if M1L01_TOTAL(2) > MAX_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;
endif;
	savepartial();
PROC M1L02_BROOD_HEN
postproc
	if $(curocc()) > M1L01_TOTAL(curocc())  then
		getErrorMsg("A. Inventory of Brood hen is greater than the total inventory ");
	endif;
	
	if special(M1L02_BROOD_HEN(curocc())) then
		M1L02_BROOD_HEN(curocc()) = 0;
	else
		getOutOfRangeW($,0,999999);
	endif;
	
	savepartial();
	
totBrodHenMonth1 = 	M1L02_BROOD_HEN(1) * 20;
 
PROC M1L03_BROOD_COCK
postproc
	if $(curocc()) > M1L01_TOTAL(curocc())  then
		getErrorMsg("A. Inventory of Brood cock is greater than the total inventory ");
	endif;

	if special(M1L03_BROOD_COCK(curocc())) then
		M1L03_BROOD_COCK(curocc()) = 0;
	else
		getOutOfRangeW($,0,999999);
	endif;
	
	savepartial();
PROC M1L04_OTHER_AGES
postproc
numeric m1 = curocc();

	numeric M1TotInventoryGamefowl = M1L02_BROOD_HEN(curocc()) + M1L03_BROOD_COCK(curocc()) + M1L04_OTHER_AGES(curocc());

	if M1TotInventoryGamefowl <> M1L01_TOTAL then
		getErrorMsg(maketext("The total inventory of gamefowl [%d] is not equal to the breakdown [%d]. Please check",M1L01_TOTAL, M1TotInventoryGamefowl));
	endif;
	
	if visualvalue(M1L02_BROOD_HEN(m1)) > M1L01_TOTAL(m1) then
		getErrorMsg("B. Inventory of Brood Hen is greater than the total inventory.");
	elseif visualvalue(M1L03_BROOD_COCK(m1)) > M1L01_TOTAL(m1) then
		getErrorMsg("B. Inventory of Brood Cock is greater than the total inventory.");
	elseif visualvalue(M1L04_OTHER_AGES(m1)) > M1L01_TOTAL(m1) then
		getErrorMsg("B. Inventory of Other Ages is greater than the total inventory.");
	endif;

	// if $(curocc()) > M1L01_TOTAL(curocc())  then
		// getErrorMsg("A. Inventory of Other ages is greater than the total inventory ");
	// endif;
	
	savepartial();
PROC M2L05_TOTAL

	savepartial();
PROC M2L06_CHICK_HATCHED
postproc

getOutOfRangeW(M2L06_CHICK_HATCHED(curocc()), 0, 999999);
	savepartial();
PROC M2L07_HEN_RCVD
postproc

getOutOfRangeW(M2L07_HEN_RCVD(curocc()), 0, 999999);
	savepartial();
PROC M2L08_COCK_RCVD
postproc

getOutOfRangeW(M2L08_COCK_RCVD(curocc()), 0, 999999);
	savepartial();
PROC M2L09_OTHER_AGE_RCVD
postproc
numeric xtot_ages, m2;
m2 = curocc();

// if special($) then 
	// $ = 0;
// endif;

M2L05_TOTAL(curocc()) = M2L06_CHICK_HATCHED(curocc()) + M2L07_HEN_RCVD(curocc()) + M2L08_COCK_RCVD(curocc()) + $(curocc()); 

getOutOfRangeW(M2L09_OTHER_AGE_RCVD(curocc()), 0, 999999);

xtot_ages =  getComputeTotal(visualvalue(M2L05_TOTAL(m2)),visualvalue(M2L06_CHICK_HATCHED(m2)),visualvalue(M2L07_HEN_RCVD(m2)),visualvalue(M2L08_COCK_RCVD(m2)),visualvalue(M2L09_OTHER_AGE_RCVD(m2)),0);

M2L05L09_TOT_SUPPLY(curocc()) =  M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);

savepartial();
PROC M3L10_DISPOSE_GAMEFOWL
postproc
if $ in 1:2 then
	if $ = 2 then
		skip to M4_GAMEFOWL_DIED;
   endif;
else
   getErrorMsg("No Selected code in item M.3.1");
endif;
savepartial();
PROC M32_DRESSED_ESTAB_FQ
postproc
 
	if $ = 2 then
		skip to M33_SOLD_OTHR_AGE_FQ;
	elseif not $ in 1:2 then
		getNoAcceptCode();
	endif;
savepartial();
PROC M3L11_BIRD_M1
postproc
if M3L11_BIRD_M1 > (M1L01_TOTAL(1) + M2L05_TOTAL(1)) then
	errmsg("A. Gamefowl dressed on establishment is greater than Beginning Inventory + Recieved");
	reenter;
endif;
savepartial();
PROC M3L12_LIVEWEIGHT_M1
postproc
if M3L11_BIRD_M1 > 0 then
	if M3L12_LIVEWEIGHT_M1 in 0, notappl then
		errmsg("A. Missing entry in either number of birds or average liveweight.");
		reenter;
	elseif not M3L12_LIVEWEIGHT_M1 in 0,1.20:3.00 then
		getWarningMsg("C. Average Liveweight is not within the acceptable range. Please verify the inputted value.");
	endif;
elseif M3L11_BIRD_M1 in 0, notappl then
	if M3L12_LIVEWEIGHT_M1 > 0 then
		errmsg("B. Missing entry in either number of birds or average liveweight.");
		reenter;
	endif;
endif;

savepartial();
PROC M3L11_BIRD_M2
postproc
if M3L11_BIRD_M2 > (M1L01_TOTAL(1) + M2L05_TOTAL(2)) then
	errmsg("B. Gamefowl dressed on establishment is greater than Beginning Inventory + Recieved");
	reenter;
endif;
savepartial();
PROC M3L12_LIVEWEIGHT_M2
postproc
if M3L11_BIRD_M2 > 0 then
	if M3L12_LIVEWEIGHT_M2 in 0, notappl then
		errmsg("A. Missing entry in either number of birds or average liveweight.");
		reenter;
	elseif not M3L12_LIVEWEIGHT_M2 in 0,1.2:3.0 then
		getWarningMsg("C. Average Liveweight is not within the acceptable range. Please verify the inputted value.");
	endif;
elseif M3L11_BIRD_M2 in 0, notappl then
	if M3L12_LIVEWEIGHT_M2 > 0 then
		errmsg("B. Missing entry in either number of birds or average liveweight.");
		reenter;
	endif;
endif;

// if not M3L12_LIVEWEIGHT_M2 in 0,1.2:3.0 then
	// getWarningMsg("C. Average Liveweight is not within the acceptable range. Please verify the inputted value.");
// endif;

savepartial();
PROC M3L11_BIRD_M3
postproc
if M3L11_BIRD_M3 > (M1L01_TOTAL(1) + M2L05_TOTAL(3)) then
	errmsg("C. Gamefowl dressed on establishment is greater than Beginning Inventory + Recieved");
	reenter;
endif;
savepartial();


PROC M3L12_LIVEWEIGHT_M3
postproc
if M3L11_BIRD_M3 > 0 then
	if M3L12_LIVEWEIGHT_M3 in 0, notappl then
		errmsg("A. Missing entry in either number of birds or average liveweight.");
		reenter;
	elseif not M3L12_LIVEWEIGHT_M3 in 0,1.2:3.0 then
		getWarningMsg("C. Average Liveweight is not within the acceptable range. Please verify the inputted value.");
	endif;
elseif M3L11_BIRD_M3 in 0, notappl then
	if M3L12_LIVEWEIGHT_M3 > 0 then
		errmsg("B. Missing entry in either number of birds or average liveweight.");
		reenter;
	endif;
endif;

// if not M3L12_LIVEWEIGHT_M2 in 0,1.2:3.0 then
	// getWarningMsg("C. Average Liveweight is not within the acceptable range. Please verify the inputted value.");
// endif;

numeric sumOfBirdsDressed = M3L11_BIRD_M1 + M3L11_BIRD_M2 + M3L11_BIRD_M3;
numeric sumOfLWDressed = M3L12_LIVEWEIGHT_M1 + M3L12_LIVEWEIGHT_M2 + M3L12_LIVEWEIGHT_M3;
if M32_DRESSED_ESTAB_FQ = 1 then
	if not sumOfBirdsDressed > 0 and not sumOfLWDressed > 0 then
		getErrorMsg("Dressed in the establishment is YES, but no entries in number of birds and liveweight.");
	endif;
endif;

savepartial();
PROC M33_SOLD_OTHR_AGE_FQ
postproc

	if poschar("ABCDE", $) = 0 then
		getErrorMsg("No selected ages of gamefowl sold in the Establishment");
	elseif poschar("E", $) > 0 and poschar("ABCD", $) > 0 then
		getErrorMsg("Selection not allowed! 'E - None' cannot be selected with other choices!");
	else
		if poschar("E", $) > 0 and poschar("ABCD", $) = 0 then
			if M3L10_DISPOSE_GAMEFOWL = 1 then
				if M32_DRESSED_ESTAB_FQ = 2 then
					getErrorMsg("No selected ages of gamefowl sold in the Establishment");
				else
					skip to M4_GAMEFOWL_DIED;
				endif;
			endif;
		endif;
	endif;

	savepartial();
PROC M3L14L17_BIRDS_M1
preproc
if ischecked("A", M33_SOLD_OTHR_AGE_FQ) = 0 then 
	if curocc() = 1 then    
		move to M3L14L17_BIRDS_M1(2); // punta caracow
	endif;
endif;

if ischecked("B", M33_SOLD_OTHR_AGE_FQ) = 0 then 
	if curocc() = 2 then    
		move to M3L14L17_BIRDS_M1(3);  // punta other ages
	endif;
endif;

if ischecked("C", M33_SOLD_OTHR_AGE_FQ) = 0 then 
	if curocc() = 3 then    
		move to M3L14L17_BIRDS_M1(4); 
	endif;
endif;

if ischecked("D", M33_SOLD_OTHR_AGE_FQ) = 0 then 
	if curocc() = 4 then    
		endgroup; 
	endif;
endif;

postproc
if M3L14L17_BIRDS_M1(1) > (M1L01_TOTAL(1) + M2L05_TOTAL(1)) then
	errmsg("B. Chicks sold live for other purpose is greater than Total Supply");
	reenter;
endif;

if M3L14L17_BIRDS_M1(2) > (M1L01_TOTAL(1) + M2L05_TOTAL(1)) then
	errmsg("B. Brood Cock sold live for other purpose is greater than Total Supply");
	reenter;
endif;

if M3L14L17_BIRDS_M1(3) > (M1L01_TOTAL(1) + M2L05_TOTAL(1)) then
	errmsg("B. Fighting Cock sold live for other purpose is greater than Total Supply");
	reenter;
endif;

if M3L14L17_BIRDS_M1(4) > (M1L01_TOTAL(1) + M2L05_TOTAL(1)) then
	errmsg("B. Other Ages sold live for other purpose is greater than Total Supply");
	reenter;
endif;

savepartial();
PROC M3L14L17_FARMGATE_M1
postproc

	if M3L14L17_BIRDS_M1(curocc()) > 0 then
		if M3L14L17_FARMGATE_M1(curocc()) in 0, notappl then
			getErrorMsg("  Missing entry in either number of birds or average farmgate price.");
		elseif not M3L14L17_FARMGATE_M1(curocc()) in 500.00:50000.00 then
			getWarningMsg("Average Farmgate price is not within the the acceptable range.");
		endif;
	elseif M3L14L17_BIRDS_M1(curocc()) in 0,notappl and M3L14L17_FARMGATE_M1(curocc()) in 0.0,notappl then
			getWarningMsg("Verify inputted values");
	endif;
	if M3L14L17_FARMGATE_M1(curocc()) > 0 then
		if M3L14L17_BIRDS_M1(curocc()) in 0, notappl then
			getErrorMsg(" Missing entry in either number of birds or average farmgate price.");
		endif;
	endif;
	// if not M3L14L17_FARMGATE_M1(x) in 500.00:50000.00 then
		// errmsg("C. Average farmgate price  <> is not within the acceptable range. Please verify the inputted value.");
		// reenter;
	// endif;

savepartial();
PROC M3L14L17_DESTINATION_M1
postproc
if M3L14L17_BIRDS_M1(1) > 0 then
	if not M3L14L17_DESTINATION_M1(1) in 1:3 then
		errmsg("A. chicks has entry but no specified destination was selected");
		reenter;
	endif;
endif;

if M3L14L17_BIRDS_M1(2) > 0 then
	if not M3L14L17_DESTINATION_M1(2) in 1:3 then
		errmsg("A. brood cock has entry but no specified destination was selected");
		reenter;
	endif;
endif;

if M3L14L17_BIRDS_M1(3) > 0 then
	if not M3L14L17_DESTINATION_M1(3) in 1:3 then
		errmsg("A. brood hen has entry but no specified destination was selected");
		reenter;
	endif;
endif;

if M3L14L17_BIRDS_M1(4) > 0 then
	if not M3L14L17_DESTINATION_M1(4) in 1:3 then
		errmsg("A. Others has entry but no specified destination was selected");
		reenter;
	endif;
endif;
PROC M3L14L17_BIRDS_M2
preproc
if ischecked("A", M33_SOLD_OTHR_AGE_FQ) = 0 then 
	if curocc() = 1 then    
		move to M3L14L17_BIRDS_M2(2); // punta caracow
	endif;
endif;

if ischecked("B", M33_SOLD_OTHR_AGE_FQ) = 0 then 
	if curocc() = 2 then    
		move to M3L14L17_BIRDS_M2(3);  // punta other ages
	endif;
endif;

if ischecked("C", M33_SOLD_OTHR_AGE_FQ) = 0 then 
	if curocc() = 3 then    
		move to M3L14L17_BIRDS_M2(4); 
	endif;
endif;

if ischecked("D", M33_SOLD_OTHR_AGE_FQ) = 0 then 
	if curocc() = 4 then    
		endgroup; 
	endif;
endif;

postproc
if M3L14L17_BIRDS_M2(1) > (M1L01_TOTAL(1) + M2L05_TOTAL(2)) then
	errmsg("C. Chicks sold live for other purpose is greater than Total Supply");
	reenter;
endif;

if M3L14L17_BIRDS_M2(2) > (M1L01_TOTAL(1) + M2L05_TOTAL(2)) then
	errmsg("C. Brood Cock sold live for other purpose is greater than Total Supply");
	reenter;
endif;

if M3L14L17_BIRDS_M2(3) > (M1L01_TOTAL(1) + M2L05_TOTAL(2)) then
	errmsg("C. Fighting Cock sold live for other purpose is greater than Total Supply");
	reenter;
endif;

if M3L14L17_BIRDS_M2(4) > (M1L01_TOTAL(1) + M2L05_TOTAL(2)) then
	errmsg("C. Other Ages sold live for other purpose is greater than Total Supply");
	reenter;
endif;

savepartial();

PROC M3L14L17_FARMGATE_M2
postproc
 
	if M3L14L17_BIRDS_M2(curocc()) > 0 then
		if M3L14L17_FARMGATE_M2(curocc()) in 0, notappl then
			getErrorMsg("  Missing entry in either number of birds or average farmgate price.");
		elseif not M3L14L17_FARMGATE_M2(curocc()) in 500.00:50000.00 then
			getWarningMsg("Average Farmgate price is not within the the acceptable range.");		 
		endif;
	elseif M3L14L17_BIRDS_M2(curocc()) in 0,notappl and M3L14L17_FARMGATE_M1(curocc()) in 0,notappl then
			getWarningMsg("Verify inputted values");	
	endif;
	if M3L14L17_FARMGATE_M2(curocc()) > 0 then
		if M3L14L17_BIRDS_M2(curocc()) in 0, notappl then
			getErrorMsg("  Missing entry in either number of birds or average farmgate price.");
		endif;
	endif;
	 

savepartial();
PROC M3L14L17_DESTINATION_M2
postproc
if M3L14L17_BIRDS_M2(1) > 0 then
	if not M3L14L17_DESTINATION_M2(1) in 1:3 then
		errmsg("B. chicks has entry but no specified destination was selected");
		reenter;
	endif;
endif;

if M3L14L17_BIRDS_M2(2) > 0 then
	if not M3L14L17_DESTINATION_M2(2) in 1:3 then
		errmsg("B. brood cock has entry but no specified destination was selected");
		reenter;
	endif;
endif;

if M3L14L17_BIRDS_M2(3) > 0 then
	if not M3L14L17_DESTINATION_M2(3) in 1:3 then
		errmsg("B. brood hen has entry but no specified destination was selected");
		reenter;
	endif;
endif;

if M3L14L17_BIRDS_M2(4) > 0 then
	if not M3L14L17_DESTINATION_M2(4) in 1:3 then
		errmsg("B. Others has entry but no specified destination was selected");
		reenter;
	endif;
endif;
PROC M3L14L17_BIRDS_M3
preproc
if ischecked("A", M33_SOLD_OTHR_AGE_FQ) = 0 then 
	if curocc() = 1 then    
		move to M3L14L17_BIRDS_M3(2); // punta caracow
	endif;
endif;

if ischecked("B", M33_SOLD_OTHR_AGE_FQ) = 0 then 
	if curocc() = 2 then    
		move to M3L14L17_BIRDS_M3(3);  // punta other ages
	endif;
endif;

if ischecked("C", M33_SOLD_OTHR_AGE_FQ) = 0 then 
	if curocc() = 3 then    
		move to M3L14L17_BIRDS_M3(4); 
	endif;
endif;

if ischecked("D", M33_SOLD_OTHR_AGE_FQ) = 0 then 
	if curocc() = 4 then    
		move to M4_GAMEFOWL_DIED; 
	endif;
endif;

postproc
if M3L14L17_BIRDS_M3(1) > (M1L01_TOTAL(1) + M2L05_TOTAL(3)) then
	errmsg("D. Chicks sold live for other purpose is greater than Total Supply");
	reenter;
endif;

if M3L14L17_BIRDS_M3(2) > (M1L01_TOTAL(1) + M2L05_TOTAL(3)) then
	errmsg("D. Brood Cock sold live for other purpose is greater than Total Supply");
	reenter;
endif;

if M3L14L17_BIRDS_M3(3) > (M1L01_TOTAL(1) + M2L05_TOTAL(3)) then
	errmsg("D. Fighting Cock sold live for other purpose is greater than Total Supply");
	reenter;
endif;

if M3L14L17_BIRDS_M3(4) > (M1L01_TOTAL(1) + M2L05_TOTAL(3)) then
	errmsg("D. Other Ages sold live for other purpose is greater than Total Supply");
	reenter;
endif;

savepartial();
PROC M3L14L17_FARMGATE_M3
postproc
// do varying numeric x = 1 while x <= soccurs(RTM4_L14L16)
	if M3L14L17_BIRDS_M3(curocc()) > 0 then
		if M3L14L17_FARMGATE_M3(curocc()) in 0, notappl then
			getErrorMsg("  Missing entry in either number of birds or average farmgate price.");
		elseif not M3L14L17_FARMGATE_M3(curocc()) in 500.00:50000.00 then
			getWarningMsg("Average Farmgate price is not within the the acceptable range.");
		endif;
	elseif M3L14L17_BIRDS_M3(curocc()) in 0,notappl and M3L14L17_FARMGATE_M3(curocc()) in 0,notappl then
			getWarningMsg("Verify inputted values"); 
	endif;
	if M3L14L17_FARMGATE_M3(curocc()) > 0 then
		if M3L14L17_BIRDS_M3(curocc()) in 0, notappl then
			getErrorMsg(" Missing entry in either number of birds or average farmgate price.");
		endif;
	endif;
	
savepartial();
PROC M3L14L17_DESTINATION_M3
postproc
if M3L14L17_BIRDS_M3(1) > 0 then
	if not M3L14L17_DESTINATION_M3(1) in 1:3 then
		errmsg("C. chicks has entry but no specified destination was selected");
		reenter;
	endif;
endif;

if M3L14L17_BIRDS_M3(2) > 0 then
	if not M3L14L17_DESTINATION_M3(2) in 1:3 then
		errmsg("C. brood cock has entry but no specified destination was selected");
		reenter;
	endif;
endif;

if M3L14L17_BIRDS_M3(3) > 0 then
	if not M3L14L17_DESTINATION_M3(3) in 1:3 then
		errmsg("C. brood hen has entry but no specified destination was selected");
		reenter;
	endif;
endif;

if M3L14L17_BIRDS_M3(4) > 0 then
	if not M3L14L17_DESTINATION_M3(4) in 1:3 then
		errmsg("C. Others has entry but no specified destination was selected");
		reenter;
	endif;
endif;


if M3L14L17_BIRDS_M1(curocc()) in 0,notappl and  M3L14L17_BIRDS_M2(curocc()) in 0,notappl and  M3L14L17_BIRDS_M3(curocc()) in 0,notappl then
	if curocc() = 1 then
		getErrorMsg("Chicks is selected but all months have no entry.");
	elseif curocc() = 2 then
		getErrorMsg("Brood cock is selected but all months have no entry.");
	elseif curocc() = 3 then
		getErrorMsg("Brood hen is selected but all months have no entry.");
	elseif curocc() = 4 then
		getErrorMsg("Others is selected but all months have no entry.");
	endif;
endif; 
	
PROC M4_GAMEFOWL_DIED
postproc
if not M4_GAMEFOWL_DIED in 1:2 then
	getErrorMsg("Invalid code. Please enter a valid code");
elseif M4_GAMEFOWL_DIED = 2 then
	skip to M5L22_AVE_LAID_EGGS(curocc());
endif;

savepartial();
PROC M4_CAUSE_DEATH_FQ
postproc
if poschar("A", M4_CAUSE_DEATH_FQ) = 0 then
	if poschar("B", M4_CAUSE_DEATH_FQ) = 0 then
		if poschar("C", M4_CAUSE_DEATH_FQ) = 0 then
			getErrorMsg("No selected cause of death of gamefowl in the household/farm!");
		endif;
	endif;
endif;

if poschar("ABC", M4_CAUSE_DEATH_FQ) = 0 then
	getErrorMsg("No selected Native/Chicken sold live/disposed for other purpose!");
endif;

savepartial();
PROC M4L26_AVIAN_INFLUENZA
preproc
ask if ischecked("A", M4_CAUSE_DEATH_FQ);

postproc
if not M4L26_AVIAN_INFLUENZA(curocc()) in 0:999999 then
	getWarningMsg("A. Please verify the inputted code.");
	
endif;

numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if M4L26_AVIAN_INFLUENZA(x) > totInvSupp then
		errmsg("B. Number of deaths due to Avian Influenza is greater than the total supply");
		reenter;
	endif;
enddo;

	if curocc() = 1 then  M4L19L21_NUMBER_BIRD_M1 = $(curocc()); 
elseif curocc() = 2 then  M4L19L21_NUMBER_BIRD_M2 = $(curocc()); 
elseif curocc() = 3 then  M4L19L21_NUMBER_BIRD_M3 = $(curocc());
endif;

if curocc() = 3 then
	if M4L26_AVIAN_INFLUENZA(1) in 0, notappl then
		if M4L26_AVIAN_INFLUENZA(2) in 0, notappl then
			if M4L26_AVIAN_INFLUENZA(3) in 0, notappl then
				getErrorMsg("Selected Avian Influenza in the cause of deaths, but no answer in all months.");
			endif;
		endif;
	endif;
endif;
savepartial();
PROC MD_GAMEFOWL_DISEASE
preproc
ask if ischecked("B", M4_CAUSE_DEATH_FQ);
string xa, xb,xc, xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn,xo,xp,xq,xr,xs,xt,xu;
numeric xVal;
postproc
// if soccurs(RTM4_L19L21) = 0 then INSERT(RTM4_L19L21_TOT ); endif;
 
    if ischecked ("A",$) = 0 then  MDA_HC(curocc()) = notappl; else  xa = getlabel($,"A");endif;
	if ischecked ("B",$) = 0 then  MDB_HC(curocc()) = notappl; else  xb = getlabel($,"B");endif;
	if ischecked ("C",$) = 0 then  MDC_HC(curocc()) = notappl; else  xc = getlabel($,"C");endif;
	if ischecked ("D",$) = 0 then  MDD_HC(curocc()) = notappl; else  xd = getlabel($,"D");endif;
	if ischecked ("E",$) = 0 then  MDE_HC(curocc()) = notappl; else  xe = getlabel($,"E");endif;
	if ischecked ("F",$) = 0 then  MDF_HC(curocc()) = notappl; else  xf = getlabel($,"F");endif;
	if ischecked ("G",$) = 0 then  MDG_HC(curocc()) = notappl; else  xg = getlabel($,"G");endif;
    if ischecked ("H",$) = 0 then  MDH_HC(curocc()) = notappl; else  xh = getlabel($,"H");endif;
	if ischecked ("I",$) = 0 then  MDI_HC(curocc()) = notappl; else  xi = getlabel($,"I");endif;
	if ischecked ("J",$) = 0 then  MDJ_HC(curocc()) = notappl; else  xj = getlabel($,"J");endif;
	if ischecked ("K",$) = 0 then  MDK_HC(curocc()) = notappl; else  xk = getlabel($,"K");endif;
	if ischecked ("L",$) = 0 then  MDL_HC(curocc()) = notappl; else  xl = getlabel($,"L");endif;
	if ischecked ("M",$) = 0 then  MDM_HC(curocc()) = notappl; else  xm = getlabel($,"M");endif;	
    if ischecked ("N",$) = 0 then  MDN_HC(curocc()) = notappl; MDN_Specify(curocc()) = ""; else  xn = getlabel($,"N");endif;
			    
xVal = poschar("ABCDEFGHIJKLMN", $);

if curocc() = 3 then
	if poschar("ABCDEFGHIJKLMN", MD_GAMEFOWL_DISEASE(1)) in 0, notappl then
		if poschar("ABCDEFGHIJKLMN", MD_GAMEFOWL_DISEASE(2)) in 0, notappl then
			if poschar("ABCDEFGHIJKLMN", MD_GAMEFOWL_DISEASE(3)) in 0, notappl then
				getErrorMsg(" Please specify the cause of death due to other disease.");
			endif;
		endif;
	endif;
endif;

if curocc() = 1  then     M4L19L21_CDEATH_SPCFY_M11(2)  = concat(xa,xb,xc,xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn );	 
elseif curocc() = 2  then M4L19L21_CDEATH_SPCFY_M21(2)  = concat(xa,xb,xc,xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn  );
elseif curocc() = 3  then M4L19L21_CDEATH_SPCFY_M31(2)  = concat(xa,xb,xc,xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn );
 	 
endif;

	
savepartial();
PROC MDA_HC

preproc
ask if ischecked("A", MD_GAMEFOWL_DISEASE);

postproc
numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MDA_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;

if ischecked("A", MD_GAMEFOWL_DISEASE) then
	if MDA_HC(curocc()) in 0, notappl then
		getErrorMsg("Other disease is selected but number of birds that died is zero.");
	endif;
endif;

savepartial();
PROC MDB_HC

preproc
ask if ischecked("B", MD_GAMEFOWL_DISEASE);

postproc
numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MDB_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;

if ischecked("B", MD_GAMEFOWL_DISEASE) then
	if MDB_HC(curocc()) in 0, notappl then
		getErrorMsg("Other disease is selected but number of birds that died is zero.");
	endif;
endif;

savepartial();
PROC MDC_HC

preproc
ask if ischecked("C", MD_GAMEFOWL_DISEASE);

postproc
numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MDC_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;

if ischecked("C", MD_GAMEFOWL_DISEASE) then
	if MDC_HC(curocc()) in 0, notappl then
		getErrorMsg("Other disease is selected but number of birds that died is zero.");
	endif;
endif;

savepartial();
PROC MDD_HC
preproc
ask if ischecked("D", MD_GAMEFOWL_DISEASE);

postproc
numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MDD_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;

if ischecked("D", MD_GAMEFOWL_DISEASE) then
	if MDD_HC(curocc()) in 0, notappl then
		getErrorMsg("Other disease is selected but number of birds that died is zero.");
	endif;
endif;

savepartial();
PROC MDE_HC
preproc
ask if ischecked("E", MD_GAMEFOWL_DISEASE);

postproc
numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MDE_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;

if ischecked("E", MD_GAMEFOWL_DISEASE) then
	if MDE_HC(curocc()) in 0, notappl then
		getErrorMsg("Other disease is selected but number of birds that died is zero.");
	endif;
endif;

savepartial();
PROC MDF_HC

preproc
ask if ischecked("F", MD_GAMEFOWL_DISEASE);

postproc
numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MDF_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;

if ischecked("F", MD_GAMEFOWL_DISEASE) then
	if MDF_HC(curocc()) in 0, notappl then
		getErrorMsg("Other disease is selected but number of birds that died is zero.");
	endif;
endif;

savepartial();
PROC MDG_HC

preproc
ask if ischecked("G", MD_GAMEFOWL_DISEASE);

postproc
numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MDG_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;

if ischecked("G", MD_GAMEFOWL_DISEASE) then
	if MDG_HC(curocc()) in 0, notappl then
		getErrorMsg("Other disease is selected but number of birds that died is zero.");
	endif;
endif;

savepartial();
PROC MDH_HC

preproc
ask if ischecked("H", MD_GAMEFOWL_DISEASE);

postproc
numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MDH_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;

if ischecked("H", MD_GAMEFOWL_DISEASE) then
	if MDH_HC(curocc()) in 0, notappl then
		getErrorMsg("Other disease is selected but number of birds that died is zero.");
	endif;
endif;

savepartial();
PROC MDI_HC
preproc
ask if ischecked("I", MD_GAMEFOWL_DISEASE);

postproc
numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MDI_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;

if ischecked("I", MD_GAMEFOWL_DISEASE) then
	if MDI_HC(curocc()) in 0, notappl then
		getErrorMsg("Other disease is selected but number of birds that died is zero.");
	endif;
endif;
;
savepartial();
PROC MDJ_HC

preproc
ask if ischecked("J", MD_GAMEFOWL_DISEASE);

postproc
numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MDJ_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;

if ischecked("J", MD_GAMEFOWL_DISEASE) then
	if MDJ_HC(curocc()) in 0, notappl then
		getErrorMsg("Other disease is selected but number of birds that died is zero.");
	endif;
endif;

savepartial();
PROC MDK_HC

preproc
ask if ischecked("K", MD_GAMEFOWL_DISEASE);

postproc
numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MDK_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;

if ischecked("K", MD_GAMEFOWL_DISEASE) then
	if MDK_HC(curocc()) in 0, notappl then
		getErrorMsg("Other disease is selected but number of birds that died is zero.");
	endif;
endif;

savepartial();
PROC MDL_HC
preproc
ask if ischecked("L", MD_GAMEFOWL_DISEASE);

postproc
numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MDL_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;

if ischecked("L", MD_GAMEFOWL_DISEASE) then
	if MDL_HC(curocc()) in 0, notappl then
		getErrorMsg("Other disease is selected but number of birds that died is zero.");
	endif;
endif;

savepartial();
PROC MDM_HC
preproc
ask if ischecked("M", MD_GAMEFOWL_DISEASE);

postproc
numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MDM_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;

if ischecked("M", MD_GAMEFOWL_DISEASE) then
	if MDM_HC(curocc()) in 0, notappl then
		getErrorMsg("Other disease is selected but number of birds that died is zero.");
	endif;
endif;

savepartial();
PROC MDN_SPECIFY

preproc
ask if ischecked("N", MD_GAMEFOWL_DISEASE);

postproc

if curocc() = 1 then  M4L19L21_CDEATH_SPCFY_M11(3) = $(curocc()); 
	elseif curocc() = 2 then  M4L19L21_CDEATH_SPCFY_M21(3) = $(curocc()); 
	elseif curocc() = 3 then  M4L19L21_CDEATH_SPCFY_M31(3) = $(curocc());
endif;

	
savepartial();
PROC MDN_HC
preproc
ask if ischecked("N", MD_GAMEFOWL_DISEASE);

postproc
numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MDN_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;

if ischecked("N", MD_GAMEFOWL_DISEASE) then
	if SUM(MDN_HC) in 0, notappl then
		getErrorMsg("Other disease is selected but number of birds that died is zero.");
	endif;
endif;

if  strip(MDN_SPECIFY(curocc())) = "" and $ in 0,notappl then
   getErrorMsg("code 99 is selected but no entries in specify and count of heads.");
elseif strip(MDN_SPECIFY(curocc())) = "" and $ > 0 then
   getErrorMsg("code 99 is selected but no entries in specify but count of heads have entries.");
endif; 

        if curocc() = 1 then  M4L19L21_NUMBER_BIRDS_M11(3) = $(curocc()); 
	elseif curocc() = 2 then  M4L19L21_NUMBER_BIRDS_M21(3) = $(curocc()); 
	elseif curocc() = 3 then  M4L19L21_NUMBER_BIRDS_M31(3) = $(curocc());
endif;

savepartial();
PROC MCA_SPECIFY
preproc
ask if ischecked("C", M4_CAUSE_DEATH_FQ);

postproc
 
   if curocc() = 1 then   M4L19L21_CDEATH_SPCFY_M1 = $(curocc()); 
elseif curocc() = 2 then  M4L19L21_CDEATH_SPCFY_M2 = $(curocc()); 
elseif curocc() = 3 then  M4L19L21_CDEATH_SPCFY_M3 = $(curocc());
endif;
	savepartial();
PROC MCA_SP_HC

preproc
ask if ischecked("C", M4_CAUSE_DEATH_FQ);

postproc
if curocc() = 1 then
	M4L19L21_NUMBER_BIRD_M1 = $(curocc()); 
elseif curocc() = 2 then
	M4L19L21_NUMBER_BIRD_M2 = $(curocc()); 
elseif curocc() = 3 then
	M4L19L21_NUMBER_BIRD_M3 = $(curocc());
endif;	

 

numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MCA_SP_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;


 if $ in 0,notappl and not strip(MCA_SPECIFY) = "" then 
    getErrorMsg(" Other cause is empty but Other cause(Specify) has an entry. Please indicate the percentage or verify the cause indicated.");
elseif $ > 0 and strip(MCA_SPECIFY) = "" then 
    getErrorMsg("Other causes (Specify) is empty but Other cause is greater than zero. Please indicate the cause of mortality or verify the number of birds.");

endif;	
savepartial();
PROC MCB_SPECIFY
preproc
ask if ischecked("C", M4_CAUSE_DEATH_FQ);

postproc
savepartial();	 
PROC MCB_SP_HC
preproc
ask if ischecked("C", M4_CAUSE_DEATH_FQ);
postproc
if curocc() = 1 then
	M4L19L21_NUMBER_BIRD_M1 = $(curocc()); 
elseif curocc() = 2 then
	M4L19L21_NUMBER_BIRD_M2 = $(curocc()); 
elseif curocc() = 3 then
	M4L19L21_NUMBER_BIRD_M3 = $(curocc());
endif;	

 

numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MCA_SP_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;


 if $ in 0,notappl and not strip(MCA_SPECIFY) = "" then 
    getErrorMsg(" Other cause is empty but Other cause(Specify) has an entry. Please indicate the percentage or verify the cause indicated.");
elseif $ > 0 and strip(MCA_SPECIFY) = "" then 
    getErrorMsg("Other causes (Specify) is empty but Other cause is greater than zero. Please indicate the cause of mortality or verify the number of birds.");

endif;	
savepartial();
PROC MCC_SPECIFY
preproc
ask if ischecked("C", M4_CAUSE_DEATH_FQ);
postproc
	if curocc() = 3 then    	
		if  strip(MCA_SPECIFY(1)) = "" and strip(MCA_SPECIFY(2)) = "" and strip(MCA_SPECIFY(3)) = "" and
			strip(MCB_SPECIFY(1)) = "" and strip(MCB_SPECIFY(2)) = "" and strip(MCB_SPECIFY(3)) = "" and 
			strip($(1)) = "" and strip($(2)) = "" and strip($(3)) = "" then
				getErrorMsg("D. Please specify the cause of death due to other causes.");
		endif;
	endif;
	savepartial();
	
PROC MCC_SP_HC
preproc
ask if ischecked("C", M4_CAUSE_DEATH_FQ);
postproc
if curocc() = 1 then
	M4L19L21_NUMBER_BIRD_M1 = $(curocc()); 
elseif curocc() = 2 then
	M4L19L21_NUMBER_BIRD_M2 = $(curocc()); 
elseif curocc() = 3 then
	M4L19L21_NUMBER_BIRD_M3 = $(curocc());
endif;	

 

numeric totInvSupp = M1L01_TOTAL(1) + M2L05_TOTAL(1) + M2L05_TOTAL(2) + M2L05_TOTAL(3);
do varying numeric x = 1 while x <= soccurs(RTM4_DC)
	if MCA_SP_HC(x) > totInvSupp then
		errmsg("B. Number of deaths due to other causes is greater than the total supply");
		reenter;
	endif;
enddo;


 if $ in 0,notappl and not strip(MCA_SPECIFY) = "" then 
    getErrorMsg(" Other cause is empty but Other cause(Specify) has an entry. Please indicate the percentage or verify the cause indicated.");
elseif $ > 0 and strip(MCA_SPECIFY) = "" then 
    getErrorMsg("Other causes (Specify) is empty but Other cause is greater than zero. Please indicate the cause of mortality or verify the number of birds.");

endif;	
savepartial();
PROC M5_SELL_CUR_YR
postproc
	if not M5_SELL_CUR_YR in 1:2 then
		if M5_SELL_CUR_YR = notappl then
			getErrorMsg("No selected code.");
		else
			getErrorMsg("Invalid code. Please enter a valid code");
		endif;
	elseif M5_SELL_CUR_YR = 2 then
		skip to REMARKS;
	endif;
	
	savepartial();
PROC M5L22_AVE_LAID_EGGS
postproc
	if not $(curocc()) in 0:999999 then
		getErrorMsg("A. Please verify the inputted code.");
	endif;
 
	if L6L35_EGGS_LAID(1) > ((M1L02_BROOD_HEN(1) + M2L07_HEN_RCVD(1)) * 20) then
		errmsg(" Average number of eggs laid in a month exceeds  the number of eggs to be laid by the total number of adult female indicated in the inventory. Please check the consistency of the values.");
		reenter;
	endif;

	if L6L35_EGGS_LAID(2) > ((M1L02_BROOD_HEN(1) + M2L07_HEN_RCVD(2)) * 20) then
		errmsg(" Average number of eggs laid in a month exceeds  the number of eggs to be laid by the total number of adult female indicated in the inventory. Please check the consistency of the values.");
		reenter;
	endif;

	if L6L35_EGGS_LAID(3) > ((M1L02_BROOD_HEN(1) + M2L07_HEN_RCVD(3)) * 20) then
		errmsg(" Average number of eggs laid in a month exceeds  the number of eggs to be laid by the total number of adult female indicated in the inventory. Please check the consistency of the values.");
		reenter;
	endif;
	
	if M5_SELL_CUR_YR = 1 then
		if SUM(M5L22_AVE_LAID_EGGS) in 0, notappl then
			getErrorMsg("Answered YES in egg production but zero entries in estimated number of eggs laid.");
		endif;
	endif;

	savepartial();
PROC M5L23_EGGS_HATCH
postproc
if M5L22_AVE_LAID_EGGS(curocc()) > 0 then
	if M5L23_EGGS_HATCH(curocc()) > 0 and M5L23_EGGS_HATCH(curocc()) > M5L22_AVE_LAID_EGGS(curocc()) then
		getErrorMsg("Intended for hatching is greater than Estimated eggs laid in a month");
	elseif M5L23_EGGS_HATCH(curocc()) in 0, notappl then
		getErrorMsg("A. Item M.5.1 (Estimated eggs laid) is greater than 0 but Item M.5.2 (intended for hatching) is equal to zero. Please check the inputted values.");
	endif;
elseif M5L22_AVE_LAID_EGGS(curocc()) in 0, notappl  then
	if M5L23_EGGS_HATCH(curocc()) > 0 then
		getErrorMsg("B. Item M.5.2 (intended for hatching) is greater than 0 but Item M.5.1 (Estimated eggs laid) is equal to zero. Please check the inputted values.");
	endif;
endif;

savepartial();
PROC GROUP010_DUCK

preproc
if D2L12_DUCK    = 10 then
	ok = 1
else
	skip to REMARKS;
endif;
PROC N1L01_TYPE_OPERATION
if not $ in 1:7 then
   getErrorMsg(" A. No selected code in Item N.1.1 (Type of Operation/s). Please enter a valid code.");
 endif;  
savepartial();
PROC N1L02_TYPE_DUCK

postproc
 if ischecked("1",$) = 0  then
     if visualvalue(N1L01_TYPE_OPERATION) in 3,5:7 then
		errmsg(" Type of Operation includes Egg Production but not raising Mallard duck");
		reenter;
 	 endif;  
 endif;
  
 
savepartial();
PROC BLOCK078
preproc
if curocc() in 1,4 and ischecked("1",N1L02_TYPE_DUCK) =  1 then	 xDucKor = 1; endif;
if curocc() in 2,5 and ischecked("2",N1L02_TYPE_DUCK) =  1 then	 xDucKor = 2; endif;
if curocc() in 3,6 and ischecked("3",N1L02_TYPE_DUCK) =  1 then	 xDucKor = 3; endif;
    
	if curocc() in 1:3 then ctr = 1 ;
elseif curocc() in 4:6 then ctr = 2 ;

endif;
PROC N2L03_TOTAL
preproc
if curocc() in 1,4 and ischecked("1",N1L02_TYPE_DUCK) =  0 then	skip to next;   endif;
if curocc() in 2,5 and ischecked("2",N1L02_TYPE_DUCK) =  0 then	skip to next;   endif;
if curocc() in 3,6 and ischecked("3",N1L02_TYPE_DUCK) =  0 then	skip to next;   endif;

postproc
if CHANGE_FARM_CAP > 0 then
	if N2L03_TOTAL(4) > CHANGE_FARM_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;

else
	if N2L03_TOTAL(4) > MAX_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;
endif;

if CHANGE_FARM_CAP > 0 then
	if N2L03_TOTAL(5) > CHANGE_FARM_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;

else
	if N2L03_TOTAL(5) > MAX_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;
endif;

if CHANGE_FARM_CAP > 0 then
	if N2L03_TOTAL(6) > CHANGE_FARM_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;

else
	if N2L03_TOTAL(6) > MAX_CAP then
		errmsg("The total inventory is greater than the declared maximum farm capacity. Please check the inventory or update the capacity");
		reenter;
	endif;
endif;
	savepartial();
PROC N2L04_LAYING_FLOCK
postproc
if $(curocc()) > visualvalue(N2L03_TOTAL(curocc())) then
	getErrorMsg("Inventory of Laying Flock is greater than the total inventory.");
else
	getOutOfRange($,0,999999,"Please verify the inputted code ");
endif;

savepartial();
PROC N2L05_MALE_BREEDER
postproc
if $(curocc()) > visualvalue(N2L03_TOTAL(curocc())) then
	getErrorMsg("Inventory of Male inventory is greater than the total inventory.");
else
	getOutOfRange($,0,999999,"Please verify the inputted code ");
endif;

savepartial();
PROC N2L06_OTHER_AGES
numeric xtot;
xtot = visualvalue(N2L04_LAYING_FLOCK(curocc()))+  visualvalue(N2L05_MALE_BREEDER(curocc()))+ $(curocc());

if xtot <> visualvalue(N2L03_TOTAL(curocc())) then
    getErrorMsg(" The total inventory of duck is not equal to the breakdown. ");
endif;

if $(curocc()) > visualvalue(N2L03_TOTAL(curocc())) then
	getErrorMsg("Inventory of Other Ages is greater than the total inventory.");
else
	getOutOfRange($,0,999999," Please verify the inputted code ");
endif;



savepartial();
PROC BLOCK079
preproc
 
if curocc() in 1,4,7 and ischecked("1",N1L02_TYPE_DUCK) =  1 then	 xDucKor = 1; endif;
if curocc() in 2,5,8 and ischecked("2",N1L02_TYPE_DUCK) =  1 then	 xDucKor = 2; endif;
if curocc() in 3,6,9 and ischecked("3",N1L02_TYPE_DUCK) =  1 then	 xDucKor = 3; endif;

    if curocc() in 1:3 then ctr = 1 ;
elseif curocc() in 4:6 then ctr = 2 ;
elseif curocc() in 7:9 then ctr = 3 ;
endif;
PROC N3L07_TOTAL
postproc
savepartial();
PROC N3L08_DUCK_HATCHED
preproc
if curocc() in 1,4,7 and ischecked("1",N1L02_TYPE_DUCK) =  0 then skip to next; endif;
if curocc() in 2,5,8 and ischecked("2",N1L02_TYPE_DUCK) =  0 then skip to next; endif;
if curocc() in 3,6,9 and ischecked("3",N1L02_TYPE_DUCK) =  0 then skip to next; endif;

postproc
N3L07_TOTAL(curocc()) = N3L08_DUCK_HATCHED(curocc()) ;

getOutOfRange($,0,999999,"Please verify the inputted code ");

savepartial();
PROC BLOCK080
preproc
 
if curocc() in 1,4,7 and ischecked("1",N1L02_TYPE_DUCK) =  1 then	 xDucKor = 1; endif;
if curocc() in 2,5,8 and ischecked("2",N1L02_TYPE_DUCK) =  1 then	 xDucKor = 2; endif;
if curocc() in 3,6,9 and ischecked("3",N1L02_TYPE_DUCK) =  1 then	 xDucKor = 3; endif;

    if curocc() in 1:3 then ctr = 1 ;
elseif curocc() in 4:6 then ctr = 2 ;
elseif curocc() in 7:9 then ctr = 3 ;
endif;
PROC N3L09_LAYING_FLOCK_RCVD
preproc
if curocc() in 1,4,7 and ischecked("1",N1L02_TYPE_DUCK) =  0 then skip to next; endif;
if curocc() in 2,5,8 and ischecked("2",N1L02_TYPE_DUCK) =  0 then skip to next; endif;
if curocc() in 3,6,9 and ischecked("3",N1L02_TYPE_DUCK) =  0 then skip to next; endif;

postproc
N3L07_TOTAL(curocc()) = visualvalue(N3L08_DUCK_HATCHED(curocc())) + N3L09_LAYING_FLOCK_RCVD(curocc()) ;

getOutOfRange($,0,99999,"Please verify the inputted code ");
savepartial();
PROC N3L10_MALE_BREEDER_RCVD
postproc
N3L07_TOTAL(curocc()) = visualvalue(N3L08_DUCK_HATCHED(curocc())) + visualvalue(N3L09_LAYING_FLOCK_RCVD(curocc())) + N3L10_MALE_BREEDER_RCVD(curocc());

getOutOfRange($,0,99999,"Please verify the inputted code ");

savepartial();
PROC N3L11_OTHER_AGED_RCVD
postproc
numeric  xtotN2 , xkor, xinvt1;

xkor = curocc();
xinvt1 = visualvalue(N2L03_TOTAL(1)) + visualvalue( N2L03_TOTAL(2)) +   visualvalue(N2L03_TOTAL(3)) ;//sum of Items N.2.2. (Total) col. 2 to 4
xtotN2 = visualvalue(N2L03_TOTAL(1)) + visualvalue(N2L03_TOTAL(2));

// computation of total supply
N3L07_TOTAL(xkor) = visualvalue(N3L08_DUCK_HATCHED(xkor)) + visualvalue(N3L09_LAYING_FLOCK_RCVD(xkor)) + visualvalue(N3L10_MALE_BREEDER_RCVD(xkor)) + $(xkor);

// Computation: sum of N.3.1 and N.3.2 and N.3.3
// san ko kunin ang 3.3

///N3L08_DUCK_HATCHED(xkor) = visualvalue(N3L09_LAYING_FLOCK_RCVD(xkor)) + visualvalue(N3L10_MALE_BREEDER_RCVD(xkor))+ $(xkor);

//*** tOTAL SUPPLy **//

if curocc() = 1 then//Computation: sum of Items N.2.2. (Total) col. 2 to 4 and Items N.3 (Total) col. 2 to 4
       N3L07L11_TOT_SUPPLY(1) = xinvt1 + visualvalue(N3L07_TOTAL(1)) + visualvalue(N3L07_TOTAL(2)) + visualvalue(N3L07_TOTAL(3));
	   
endif;
if curocc() = 2 then//Computation: sum of Items N.2.2. (Total) col. 2 to 4 and Items N.3 (Total) col. 5 to 7
       N3L07L11_TOT_SUPPLY(2) = xinvt1 + visualvalue(N3L07_TOTAL(4)) + visualvalue(N3L07_TOTAL(5)) + visualvalue(N3L07_TOTAL(6));
	   
endif;
if curocc() = 3 then//Computation: sum of Items N.2.2. (Total) col. 2 to 4 and Items N.3 (Total) col. 8 to 10
       N3L07L11_TOT_SUPPLY(3) = xinvt1 + visualvalue(N3L07_TOTAL(7)) + visualvalue(N3L07_TOTAL(8)) + visualvalue(N3L07_TOTAL(9));
	   
endif;

//Computation: sum of Item N.2.2. (Total) col. 2 , Item N.3 (Total) col. 2,Item N.3 (Total) col. 3, and Item N.3 (Total) col. 4
N3L07L11_TOT_SUPPLY_QTR =   visualvalue(N2L03_TOTAL(1)) + visualvalue(N3L07_TOTAL(1)) + visualvalue(N3L07_TOTAL(2)) + visualvalue(N3L07_TOTAL(3)); 
    
getOutOfRange($,0,99999,"Please verify the inputted code ");



savepartial();
PROC N4L12_CUR_YR
postproc
if not $ in 1:2 then
    getErrorMsg(" No selected code in Item N.4.1");
endif;	

if $ = 2 then 
    skip to N4L28_SOLD_PURPOSE;
endif;

savepartial();
PROC N4FQ_L13L15
postproc
if not N4FQ_L13L15 in 1:2 then
	getErrorMsg("Invalid code. Please enter a valid code");
elseif $ = 2 then 
    skip to N4FQ_L16L18;//N4L19_DISPOSE_SELL;
endif;

savepartial();
PROC N4L13_BIRDS_M1
postproc
numeric duckInvt1 = visualvalue(N2L03_TOTAL(1)) + visualvalue(N2L03_TOTAL(2)) + visualvalue(N2L03_TOTAL(3));

N3L07L11_TOT_SUPPLY(1) = duckInvt1 + visualvalue(N3L07_TOTAL(1)) + visualvalue(N3L07_TOTAL(2)) + visualvalue(N3L07_TOTAL(3));

if N4L13_BIRDS_M1 > N3L07L11_TOT_SUPPLY(1) then
	getErrorMsg(" Duck dressed on household is greater than Supply");
else
	getOutOfRange($,0,999999,"Please verify the inputted code ");
endif;

savepartial();




PROC N4L14_LIVEWEIGHT_M1
postproc
if N4L13_BIRDS_M1 > 0 then
	if N4L14_LIVEWEIGHT_M1 in 0, notappl then
		getErrorMsg("A. Missing entry in either number of birds or average liveweight");
	elseif N4L14_LIVEWEIGHT_M1 > 0 then
		getOutOfRange($,1.20,3.00,"C. Average Liveweight is not within the acceptable range. Please verify the inputted value.");
	endif;
elseif N4L13_BIRDS_M1 in 0, notappl then
	if N4L14_LIVEWEIGHT_M1 > 0 then
		getErrorMsg("B. Missing entry in either number of birds or average liveweight");
	endif;
endif;

getEntryForHeadLV_Bird(visualvalue(N4L13_BIRDS_M1),$ ,1,1, "Missing entry in either number of birds or average liveweight");
 
savepartial();
PROC N4L15_FARMGATE_M1
postproc
if N4L13_BIRDS_M1 > 0 then
	if N4L14_LIVEWEIGHT_M1 in 0, notappl then
		if N4L15_FARMGATE_M1 in 0, notappl then
			getErrorMsg("B. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L15_FARMGATE_M1 > 0 then
			getErrorMsg("F. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	elseif N4L14_LIVEWEIGHT_M1 > 0 then
		if N4L15_FARMGATE_M1 in 0, notappl then
			getErrorMsg("E. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L15_FARMGATE_M1 > 0 then
			getOutOfRange($,70.00,550.00,"Average farmgate price is not within the acceptable range.");
		endif;
	endif;
elseif N4L13_BIRDS_M1 in 0, notappl then
	if N4L14_LIVEWEIGHT_M1 > 0 then
		if N4L15_FARMGATE_M1 in 0, notappl then
			getErrorMsg("C. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L15_FARMGATE_M1 > 0 then
			getErrorMsg("G. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	elseif N4L14_LIVEWEIGHT_M1 in 0, notappl then
		if N4L15_FARMGATE_M1 > 0 then
			getErrorMsg("D. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	endif;
endif;

getEntryForHeadLVtFG_Bird(visualvalue(N4L13_BIRDS_M1),visualvalue(N4L14_LIVEWEIGHT_M1), $ ,1,1,"Missing entry in either number of birds,  average liveweight and/or average farmgate price.");

savepartial();
PROC N4L13_BIRDS_M2
postproc
if N4L13_BIRDS_M2 > N3L07L11_TOT_SUPPLY(1) then
    getErrorMsg("Duck dressed on household is greater than Supply");
else
	getOutOfRange($,0,999999," Please verify the inputted code ");
endif;
savepartial();
PROC N4L14_LIVEWEIGHT_M2
postproc
if N4L13_BIRDS_M2 > 0 then
	if N4L14_LIVEWEIGHT_M2 in 0, notappl then
		getErrorMsg("A. Missing entry in either number of birds or average liveweight");
	elseif N4L14_LIVEWEIGHT_M2 > 0 then
		getOutOfRange($,1.20,3.00,"C. Average Liveweight is not within the acceptable range. Please verify the inputted value.");
	endif;
elseif N4L13_BIRDS_M2 in 0, notappl then
	if N4L14_LIVEWEIGHT_M2 > 0 then
		getErrorMsg("B. Missing entry in either number of birds or average liveweight");
	endif;
endif;

getEntryForHeadLV_Bird(visualvalue(N4L13_BIRDS_M2),$ ,1,1, "Missing entry in either number of birds or average liveweight");

savepartial();
PROC N4L15_FARMGATE_M2
postproc
if N4L13_BIRDS_M2 > 0 then
	if N4L14_LIVEWEIGHT_M2 in 0, notappl then
		if N4L15_FARMGATE_M2 in 0, notappl then
			getErrorMsg("B. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L15_FARMGATE_M2 > 0 then
			getErrorMsg("F. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	elseif N4L14_LIVEWEIGHT_M2 > 0 then
		if N4L15_FARMGATE_M2 in 0, notappl then
			getErrorMsg("E. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L15_FARMGATE_M2 > 0 then
			getOutOfRange($,70.00,550.00,"Average farmgate price is not within the acceptable range.");
		endif;
	endif;
elseif N4L13_BIRDS_M2 in 0, notappl then
	if N4L14_LIVEWEIGHT_M2 > 0 then
		if N4L15_FARMGATE_M2 in 0, notappl then
			getErrorMsg("C. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L15_FARMGATE_M2 > 0 then
			getErrorMsg("G. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	elseif N4L14_LIVEWEIGHT_M2 in 0, notappl then
		if N4L15_FARMGATE_M2 > 0 then
			getErrorMsg("D. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	endif;
endif;

getEntryForHeadLVtFG_Bird(visualvalue(N4L13_BIRDS_M2),visualvalue(N4L14_LIVEWEIGHT_M2), $ ,1,1,"Missing entry in either number of birds,  average liveweight and/or average farmgate price.");

savepartial();
PROC N4L13_BIRDS_M3
postproc
if N4L13_BIRDS_M1 in 0, notappl then
	if N4L13_BIRDS_M2 in 0, notappl then
		if N4L13_BIRDS_M3 in 0, notappl then
			getErrorMsg("No entries in all months. Please verify the inputted value.");
		endif;
	endif;
endif;

if N4L13_BIRDS_M3 > N3L07L11_TOT_SUPPLY(1) then
    getErrorMsg(" Duck dressed on household is greater than Supply");
else
	getOutOfRange($,0,999999," Please verify the inputted code ");
endif;
savepartial();
PROC N4L14_LIVEWEIGHT_M3
postproc
if N4L13_BIRDS_M3 > 0 then
	if N4L14_LIVEWEIGHT_M3 in 0, notappl then
		getErrorMsg("A. Missing entry in either number of birds or average liveweight");
	elseif N4L14_LIVEWEIGHT_M3 > 0 then
		getOutOfRange($,1.20,3.00,"C. Average Liveweight is not within the acceptable range. Please verify the inputted value.");
	endif;
elseif N4L13_BIRDS_M3 in 0, notappl then
	if N4L14_LIVEWEIGHT_M3 > 0 then
		getErrorMsg("B. Missing entry in either number of birds or average liveweight");
	endif;
endif;

getEntryForHeadLV_Bird(visualvalue(N4L13_BIRDS_M3),$ ,1,1, "Missing entry in either number of birds or average liveweight");

savepartial();
PROC N4L15_FARMGATE_M3
postproc
if N4L13_BIRDS_M3 > 0 then
	if N4L14_LIVEWEIGHT_M3 in 0, notappl then
		if N4L15_FARMGATE_M3 in 0, notappl then
			getErrorMsg("B. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L15_FARMGATE_M3 > 0 then
			getErrorMsg("F. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	elseif N4L14_LIVEWEIGHT_M3 > 0 then
		if N4L15_FARMGATE_M3 in 0, notappl then
			getErrorMsg("E. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L15_FARMGATE_M3 > 0 then
			getOutOfRange($,70.00,550.00,"Average farmgate price is not within the acceptable range.");
		endif;
	endif;
elseif N4L13_BIRDS_M3 in 0, notappl then
	if N4L14_LIVEWEIGHT_M3 > 0 then
		if N4L15_FARMGATE_M3 in 0, notappl then
			getErrorMsg("C. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L15_FARMGATE_M3 > 0 then
			getErrorMsg("G. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	elseif N4L14_LIVEWEIGHT_M3 in 0, notappl then
		if N4L15_FARMGATE_M3 > 0 then
			getErrorMsg("D. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	endif;
endif;

getEntryForHeadLVtFG_Bird(visualvalue(N4L13_BIRDS_M3),visualvalue(N4L14_LIVEWEIGHT_M3), $ ,1,1,"Missing entry in either number of birds,  average liveweight and/or average farmgate price.");

savepartial();
PROC N4FQ_L16L18
postproc
if not N4FQ_L16L18 in 1:2 then
    getErrorMsg("Disposed/sell duck for Dressing is code 1. Verify the inputted code");
elseif N4FQ_L16L18 = 2 then
    if  N4L12_CUR_YR = 1 and N4FQ_L13L15 = 2 then
		 getErrorMsg("if LN12 is code 1 but dressed in the H/farm and sold live are both code 2.");
	else
		skip to N4L28_SOLD_PURPOSE;//N4L19_DISPOSE_SELL;
	endif;
endif;
 
savepartial();
PROC N4L16_BIRDS_M1
postproc
if N4L16_BIRDS_M1 > N3L07L11_TOT_SUPPLY(1) then
    getErrorMsg(" Duck sold live for dressing on establishment is greater than Supply");
else
	getOutOfRange($,0,999999," Please verify the inputted code ");
endif;

savepartial();
PROC N4L17_LIVEWEIGHT_M1
postproc
if N4L16_BIRDS_M1 > 0 then
	if N4L17_LIVEWEIGHT_M1 in 0, notappl then
		getErrorMsg("A. Missing entry in either number of birds,  average liveweight and/or average farmgate price");
	elseif N4L17_LIVEWEIGHT_M1 > 0 then
		getOutOfRange($,1.20,3.00," Average Liveweight is not within the acceptable range. Please verify the inputted value.");
	endif;
elseif N4L16_BIRDS_M1 in 0, notappl then
	if N4L17_LIVEWEIGHT_M1 > 0 then
		getErrorMsg("B. Missing entry in either number of birds,  average liveweight and/or average farmgate price");
	endif;
endif;

getEntryForHeadLV_Bird(visualvalue(N4L16_BIRDS_M1 ),$ ,1,1, "Missing entry in either number of birds or average liveweight");

savepartial();
PROC N4L18_FARMGATE_M1
postproc
if N4L16_BIRDS_M1 > 0 then
	if N4L17_LIVEWEIGHT_M1 in 0, notappl then
		if N4L18_FARMGATE_M1 in 0, notappl then
			getErrorMsg("B. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L18_FARMGATE_M1 > 0 then
			getErrorMsg("F. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	elseif N4L17_LIVEWEIGHT_M1 > 0 then
		if N4L18_FARMGATE_M1 in 0, notappl then
			getErrorMsg("E. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L18_FARMGATE_M1 > 0 then
			getOutOfRange($,70.00,550.00,"Average farmgate price is not within the acceptable range.");
		endif;
	endif;
elseif N4L16_BIRDS_M1 in 0, notappl then
	if N4L17_LIVEWEIGHT_M1 > 0 then
		if N4L18_FARMGATE_M1 in 0, notappl then
			getErrorMsg("C. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L18_FARMGATE_M1 > 0 then
			getErrorMsg("G. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	elseif N4L17_LIVEWEIGHT_M1 in 0, notappl then
		if N4L18_FARMGATE_M1 > 0 then
			getErrorMsg("D. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	endif;
endif;

getEntryForHeadLVtFG_Bird(visualvalue(N4L16_BIRDS_M1),visualvalue(N4L17_LIVEWEIGHT_M1), $ ,1,1," Missing entry in either number of birds,  average liveweight and/or average farmgate price.");

savepartial();
PROC N4L16_BIRDS_M2
postproc
if N4L16_BIRDS_M2 > N3L07L11_TOT_SUPPLY(1) then
    getErrorMsg(" Duck sold live for dressing on establishment is greater than Supply");
else
	getOutOfRange($,0,999999," Please verify the inputted code ");
endif;

savepartial();
PROC N4L17_LIVEWEIGHT_M2
postproc
if N4L16_BIRDS_M2 > 0 then
	if N4L17_LIVEWEIGHT_M2 in 0, notappl then
		getErrorMsg("A. Missing entry in either number of birds,  average liveweight and/or average farmgate price");
	elseif N4L17_LIVEWEIGHT_M2 > 0 then
		getOutOfRange($,1.20,3.00," Average Liveweight is not within the acceptable range. Please verify the inputted value.");
	endif;
elseif N4L16_BIRDS_M2 in 0, notappl then
	if N4L17_LIVEWEIGHT_M2 > 0 then
		getErrorMsg("B. Missing entry in either number of birds,  average liveweight and/or average farmgate price");
	endif;
endif;

getEntryForHeadLV_Bird(visualvalue(N4L16_BIRDS_M2 ),$ ,1,1, "Missing entry in either number of birds or average liveweight");

savepartial();
PROC N4L18_FARMGATE_M2
postproc
if N4L16_BIRDS_M2 > 0 then
	if N4L17_LIVEWEIGHT_M2 in 0, notappl then
		if N4L18_FARMGATE_M2 in 0, notappl then
			getErrorMsg("B. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L18_FARMGATE_M2 > 0 then
			getErrorMsg("F. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	elseif N4L17_LIVEWEIGHT_M2 > 0 then
		if N4L18_FARMGATE_M2 in 0, notappl then
			getErrorMsg("E. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L18_FARMGATE_M2 > 0 then
			getOutOfRange($,70.00,550.00,"Average farmgate price is not within the acceptable range.");
		endif;
	endif;
elseif N4L16_BIRDS_M2 in 0, notappl then
	if N4L17_LIVEWEIGHT_M2 > 0 then
		if N4L18_FARMGATE_M2 in 0, notappl then
			getErrorMsg("C. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L18_FARMGATE_M2 > 0 then
			getErrorMsg("G. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	elseif N4L17_LIVEWEIGHT_M2 in 0, notappl then
		if N4L18_FARMGATE_M2 > 0 then
			getErrorMsg("D. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	endif;
endif;

getEntryForHeadLVtFG_Bird(visualvalue(N4L16_BIRDS_M2),visualvalue(N4L17_LIVEWEIGHT_M2), $ ,1,1," Missing entry in either number of birds,  average liveweight and/or average farmgate price.");

savepartial();
PROC N4L16_BIRDS_M3
postproc
if N4L16_BIRDS_M1 in 0, notappl then
	if N4L16_BIRDS_M2 in 0, notappl then
		if N4L16_BIRDS_M3 in 0, notappl then
			getErrorMsg("No entries in all months. Please verify the inputted value.");
		endif;
	endif;
endif;

if N4L16_BIRDS_M3 > N3L07L11_TOT_SUPPLY(1) then
    getErrorMsg(" Duck sold live for dressing on establishment is greater than Supply");
else
	getOutOfRange($,0,999999,"  Please verify the inputted code ");
endif;

savepartial();
PROC N4L17_LIVEWEIGHT_M3
postproc
if N4L16_BIRDS_M3 > 0 then
	if N4L17_LIVEWEIGHT_M3 in 0, notappl then
		getErrorMsg("A. Missing entry in either number of birds,  average liveweight and/or average farmgate price");
	elseif N4L17_LIVEWEIGHT_M3 > 0 then
		getOutOfRange($,1.20,3.00," Average Liveweight is not within the acceptable range. Please verify the inputted value.");
	endif;
elseif N4L16_BIRDS_M3 in 0, notappl then
	if N4L17_LIVEWEIGHT_M3 > 0 then
		getErrorMsg("B. Missing entry in either number of birds,  average liveweight and/or average farmgate price");
	endif;
endif;

getEntryForHeadLV_Bird(visualvalue(N4L16_BIRDS_M3 ),$ ,1,1, "Missing entry in either number of birds or average liveweight");

savepartial();
PROC N4L18_FARMGATE_M3
postproc
if N4L16_BIRDS_M3 > 0 then
	if N4L17_LIVEWEIGHT_M3 in 0, notappl then
		if N4L18_FARMGATE_M3 in 0, notappl then
			getErrorMsg("B. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L18_FARMGATE_M3 > 0 then
			getErrorMsg("F. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	elseif N4L17_LIVEWEIGHT_M3 > 0 then
		if N4L18_FARMGATE_M3 in 0, notappl then
			getErrorMsg("E. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L18_FARMGATE_M3 > 0 then
			getOutOfRange($,70.00,550.00,"Average farmgate price is not within the acceptable range.");
		endif;
	endif;
elseif N4L16_BIRDS_M3 in 0, notappl then
	if N4L17_LIVEWEIGHT_M3 > 0 then
		if N4L18_FARMGATE_M3 in 0, notappl then
			getErrorMsg("C. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		elseif N4L18_FARMGATE_M3 > 0 then
			getErrorMsg("G. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	elseif N4L17_LIVEWEIGHT_M3 in 0, notappl then
		if N4L18_FARMGATE_M3 > 0 then
			getErrorMsg("D. Missing entry in either number of birds,  average liveweight and/or average farmgate price.");
		endif;
	endif;
endif;

getEntryForHeadLVtFG_Bird(visualvalue(N4L16_BIRDS_M3),visualvalue(N4L17_LIVEWEIGHT_M3), $ ,1,1," Missing entry in either number of birds,  average liveweight and/or average farmgate price.");

savepartial();
PROC N4L19_DISPOSE_SELL
numeric showw1,showw2,showw3,showw;
	if not $ in 1:2 then
		getErrorMsg("No selected code. Please select a valid code");
	endif;
	
	if $ = 2 then
		if N4L16_BIRDS_M1 >= 0 then
			showw1 = N4L16_BIRDS_M1;
		else
			showw1 = 0;
		endif;
		if N4L16_BIRDS_M2 >= 0 then
			showw2 = N4L16_BIRDS_M2;
		else
			showw2 = 0;
		endif;
		if N4L16_BIRDS_M3 >= 0 then
			showw3 = N4L16_BIRDS_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to N4L24_TOTAL(1);
		else
			skip to N4L28_SOLD_PURPOSE;
		endif;
	endif;
	
	savepartial();
PROC N4L20_COMPARED_YR
if not $ in 1:3 then
    getErrorMsg(" A. No selected code");
endif;

if $ = 3 then 
      skip to N4L22_COMPARED_LYSQ;
endif;


if $ = 1 then
	  N4L21_DUCK_CHECKBOX_LOW = "";
      N4L2118_OLOW_SPECIFY = "";
	   
	   skip to N4L21_DUCK_CHECKBOX_HIGH;
elseif $ = 2 then
	  N4L21_DUCK_CHECKBOX_HIGH = "";
      N4L2118_OHIGH_SPECIFY= "";
       
	   skip to N4L21_DUCK_CHECKBOX_LOW;
elseif $ = 3 then
      N4L21_DUCK_CHECKBOX_LOW= "";
      N4L2118_OLOW_SPECIFY="";
	  N4L21_DUCK_CHECKBOX_HIGH = "";
      N4L2118_OHIGH_SPECIFY = "";
       
	   skip to N4L22_COMPARED_LYSQ;
endif;   
savepartial();
PROC N4L21_DUCK_CHECKBOX_HIGH

postproc
    if ischecked ("A",$) = 1 then N4L211_HIGH_PRICE_OFFER  =  1;endif;
	if ischecked ("B",$) = 1 then N4L212_HIGH_DEMAND       =  2;endif;
	if ischecked ("C",$) = 1 then N4L213_FINANCIAL_NEED    =  3;endif;
	if ischecked ("D",$) = 1 then N4L214_NO_OUTBREAK       =  4;endif;
	if ischecked ("E",$) = 1 then N4L215_FAV_WEATHER       =  5;endif;
	if ischecked ("F",$) = 1 then N4L216_PROPER_VENT       =  6;endif;
	if ischecked ("G",$) = 1 then N4L217_TECH_INTRVN       =  7;endif;
	if ischecked ("H",$) = 1 then N4L218_AVAILABILITY_DOC  =  8;endif;
	if ischecked ("I",$) = 1 then N4L219_GOVT_INTRVN       =  9;endif;
	if ischecked ("J",$) = 1 then N4L2118_OHIGH_REASON     =  10;endif;

	if poschar("ABCDEFGHIJ", $) = 0 then
		getErrorMsg("No selected code!");
	ENDIF;

savepartial();
 
PROC N4L21_DUCK_CHECKBOX_LOW
preproc
ask if N4L20_COMPARED_YR = 2;
 
postproc
    if ischecked ("A",$) = 1 then N4L2110_LOW_PRICE_OFFER =  10;endif;
	if ischecked ("B",$) = 1 then N4L2111_LOW_DEMAND      =  11;endif;
	if ischecked ("C",$) = 1 then N4L2112_OUTBREAK        =  12;endif;
	if ischecked ("D",$) = 1 then N4L2113_UNFAV_WEATHER   =  13;endif;
	if ischecked ("E",$) = 1 then N4L2114_POOR_VENT       =  14;endif;
	if ischecked ("F",$) = 1 then N4L2115_HIGH_INPUTS     =  15;endif;
	if ischecked ("G",$) = 1 then N4L2116_UNAVAIL_DOC     =  16;endif;
	if ischecked ("H",$) = 1 then N4L2117_GOVT_REG        =  17;endif;
	if ischecked ("I",$) = 1 then N4L2118_OLOW_REASON     =  18;endif;


	if poschar("ABCDEFGHI", $) = 0 then
		getErrorMsg("No selected code!");
	ENDIF;

savepartial();
PROC N4L2118_OHIGH_SPECIFY
preproc
ask if ischecked("J",N4L21_DUCK_CHECKBOX_HIGH);

postproc
if strip($) = "" then
     getErrorMsg("No other reason specified in Item LN17");
endif;
savepartial();
PROC N4L2118_OLOW_SPECIFY
preproc
ask if ischecked("I",N4L21_DUCK_CHECKBOX_LOW);

postproc
if strip($) = "" then
     getErrorMsg("No other reason specified in Item LN17");
endif;
savepartial();
PROC N4L22_COMPARED_LYSQ
postproc
if not N4L22_COMPARED_LYSQ in 1:2 then
	getErrorMsg("Please enter a valid code.");
endif;
PROC N4L23_HIGHERLOWER
preproc
	ask if N4L22_COMPARED_LYSQ in 1:2;
	
postproc
numeric showw1,showw2,showw3,showw;
	if strip($) = "" then
		getErrorMsg("A. Indicate the reason for increase/decrease in farmgate price");
	endif;
		if N4L16_BIRDS_M1 >= 0 then
			showw1 = N4L16_BIRDS_M1;
		else
			showw1 = 0;
		endif;
		if N4L16_BIRDS_M2 >= 0 then
			showw2 = N4L16_BIRDS_M2;
		else
			showw2 = 0;
		endif;
		if N4L16_BIRDS_M3 >= 0 then
			showw3 = N4L16_BIRDS_M3;
		else
			showw3 = 0;
		endif;
		showw = showw1 + showw2 + showw3;
		
		if showw > 0 then
			skip to N4L24_TOTAL(1);
		else
			skip to N4L28_SOLD_PURPOSE;
		endif;
	
	savepartial();

PROC N4L24_TOTAL
preproc
if curocc() = 1 then
	N4L24_TOTAL(1) = N4L16_BIRDS_M1;
elseif curocc() = 2 then
	N4L24_TOTAL(2) = N4L16_BIRDS_M2;
elseif curocc() = 3 then
	N4L24_TOTAL(3) = N4L16_BIRDS_M3;
endif;

// if  visualvalue(N4L15_FARMGATE_M1) in notappl, 0 then $(1) = 0; else $(1) = visualvalue(N4L15_FARMGATE_M1); endif;
// if  visualvalue(N4L15_FARMGATE_M2) in notappl, 0 then $(2) = 0; else $(2) = visualvalue(N4L15_FARMGATE_M2); endif;
// if  visualvalue(N4L15_FARMGATE_M3) in notappl, 0 then $(3) = 0; else $(3) = visualvalue(N4L15_FARMGATE_M3); endif;
savepartial();
PROC N4L25_WIN_PRV
postproc
if $(curocc()) > visualvalue(N4L24_TOTAL(curocc())) then
    getErrorMsg("Item N.4.4.a (within the province) < > is greater than N.4.3 (Total) < >. Please verify the inputted values.");
else
	getOutOfRange($,0,999999,"Please verify the inputted code");
endif;

savepartial();
PROC N4L26_OUT_PRV
postproc
if $(curocc()) > visualvalue(N4L24_TOTAL(curocc())) then
    getErrorMsg("Item N.4.4.b (outside the province) < > is greater than N.4.4 (Total) < >. Please verify the inputted values.");
else
	getOutOfRange($,0,999999,"  Please enter a valid code.");
endif;

savepartial();
PROC N4L27_UNK_PRV
postproc
numeric xN4Total;

xN4Total = N4L25_WIN_PRV(curocc()) + N4L26_OUT_PRV(curocc()) + N4L27_UNK_PRV(curocc());

if $(curocc()) > visualvalue(N4L24_TOTAL(curocc())) then
    getErrorMsg("N.037 Item N.4.4.c (unknown destination) < > is greater than N.4.4 (Total) < >. Please verify the inputted values.");
else
	getOutOfRange($,0,9999999," Please enter a valid code.");
endif;

// errmsg("unk prv L24tot -%d - %d",N4L24_TOTAL(curocc()), xN4Total  );
if N4L24_TOTAL(curocc()) <> xN4Total then
    getErrorMsg("B. The total number of animals in the different areas of destination is not equal to the total sold live for slaughter for the reference Month. Please verify the inputted values.");
endif;

savepartial();
PROC N4L28_SOLD_PURPOSE
postproc
if not N4L28_SOLD_PURPOSE in 1:2 then
     getErrorMsg("A. No selected code in Item N.5.1. Please enter a valid code.");
elseif N4L28_SOLD_PURPOSE =2 then 
   skip to N4L33_DUCK_DIED;
endif;
 
savepartial();
PROC N4FQ_L29L32
postproc
if poschar("123", N4FQ_L29L32) = 0 then
	getErrorMsg("No selected ages of duck sold live for other purpose.");
endif;
PROC BLOCK101
preproc
if curocc() in 1,4 and ischecked("1",N4FQ_L29L32) =  1 then	 xDucKor = 1; endif;
if curocc() in 2,5 and ischecked("2",N4FQ_L29L32) =  1 then	 xDucKor = 2; endif;
if curocc() in 3,6 and ischecked("3",N4FQ_L29L32) =  1 then	 xDucKor = 3; endif;
PROC N4L30L32_BIRDS_M1
preproc
if curocc() in 1 and ischecked("1",N4FQ_L29L32) =  0 then	skip to next;   endif;
if curocc() in 2 and ischecked("2",N4FQ_L29L32) =  0 then	skip to next;   endif;
if curocc() in 3 and ischecked("3",N4FQ_L29L32) =  0 then	skip to next;   endif;

postproc
N4L30L32_BIRDS_TOT(curocc()) = N4L30L32_BIRDS_M1(curocc());

numeric totSupplyM1 = N3L07_TOTAL(1) + N3L07_TOTAL(2) + N3L07_TOTAL(3);

if N4L30L32_BIRDS_M1(curocc()) > SUM(N2L03_TOTAL) + totSupplyM1 then
	if curocc() = 1 then
		getErrorMsg("Laying flock sold live for other purpose is greater than Total Supply");
	elseif curocc() = 2 then
		getErrorMsg("Male breeder sold live for other purpose is greater than Total Supply");
	elseif curocc() = 3 then
		getErrorMsg("Other ages sold live for other purpose is greater than Total Supply");
	endif;
endif;

savepartial();
PROC N4L30L32_FARMGATE_M1
postproc
N4L30L32_FARMGATE_TOT(curocc()) = N4L30L32_FARMGATE_M1(curocc());

if $(curocc())=  3 then
   getOutOfRange($,70.00,550.00," Average farmgate price is not within the acceptable range.");
else
  getOutOfRange($,0.00,9999.00,"Average farmgate price is not within the acceptable range.");   
endif;

if visualvalue(N4L30L32_BIRDS_M1(curocc())) > 0 and $(curocc()) in 0,notappl then
     getErrorMsg("Missing entry in either number of birds or average farmgate price");
elseif visualvalue(N4L30L32_BIRDS_M1(curocc())) in 0,notappl and $(curocc()) > 0 then
     getErrorMsg(" Missing entry in either number of birds or average farmgate price");
endif;

savepartial();
PROC N4L30L32_DESTINATION_M1
if $ = notappl then
    xL32_DES1 = 0;
else
    xL32_DES1 = 1;
endif;		

	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if N4L30L32_BIRDS_M1 > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("A. Laying Flock has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("A. Male Breeder has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("A. Other Ages has entry but no specified destination was selected");
		endif;
	endif;
	

	savepartial();
PROC BLOCK102
preproc
if curocc() in 1,4 and ischecked("1",N4FQ_L29L32) =  1 then	 xDucKor = 1; endif;
if curocc() in 2,5 and ischecked("2",N4FQ_L29L32) =  1 then	 xDucKor = 2; endif;
if curocc() in 3,6 and ischecked("3",N4FQ_L29L32) =  1 then	 xDucKor = 3; endif;
PROC N4L30L32_BIRDS_M2
preproc
if curocc() in 1 and ischecked("1",N4FQ_L29L32) =  0 then	skip to next;   endif;
if curocc() in 2 and ischecked("2",N4FQ_L29L32) =  0 then	skip to next;   endif;
if curocc() in 3 and ischecked("3",N4FQ_L29L32) =  0 then	skip to next;   endif;

postproc
N4L30L32_BIRDS_TOT(curocc()) = N4L30L32_BIRDS_M1(curocc()) + N4L30L32_BIRDS_M2(curocc());

numeric totSupplyM2 = N3L07_TOTAL(4) + N3L07_TOTAL(5) + N3L07_TOTAL(6);

if N4L30L32_BIRDS_M2(curocc()) > SUM(N2L03_TOTAL) + totSupplyM2 then
	if curocc() = 1 then
		getErrorMsg("Laying flock sold live for other purpose is greater than Total Supply");
	elseif curocc() = 2 then
		getErrorMsg("Male breeder sold live for other purpose is greater than Total Supply");
	elseif curocc() = 3 then
		getErrorMsg("Other ages sold live for other purpose is greater than Total Supply");
	endif;
endif;

savepartial();
PROC N4L30L32_FARMGATE_M2
postproc
N4L30L32_FARMGATE_TOT(curocc()) = N4L30L32_FARMGATE_M1(curocc()) + N4L30L32_FARMGATE_M2(curocc());

if $(curocc())=  3 then
   getOutOfRange($,70.00,550.00," Average farmgate price is not within the acceptable range.");
else
  getOutOfRange($,0.00,9999.00,"Average farmgate price is not within the acceptable range.");   
endif;

if visualvalue(N4L30L32_BIRDS_M2(curocc())) > 0 and $(curocc()) in 0,notappl then
     getErrorMsg("Missing entry in either number of birds or average farmgate price");
elseif visualvalue(N4L30L32_BIRDS_M2(curocc())) in 0,notappl and $(curocc()) > 0 then
     getErrorMsg(" Missing entry in either number of birds or average farmgate price");
endif;

savepartial();
 
PROC N4L30L32_DESTINATION_M2
if $ = notappl then
    xL32_DES2 = 0;
else
    xL32_DES2 = 1;
endif;		
	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if N4L30L32_BIRDS_M2 > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("A. Laying Flock has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("A. Male Breeder has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("A. Other Ages has entry but no specified destination was selected");
		endif;
	endif;
	

	savepartial();

PROC BLOCK103
preproc
if curocc() in 1,4 and ischecked("1",N4FQ_L29L32) =  1 then	 xDucKor = 1; endif;
if curocc() in 2,5 and ischecked("2",N4FQ_L29L32) =  1 then	 xDucKor = 2; endif;
if curocc() in 3,6 and ischecked("3",N4FQ_L29L32) =  1 then	 xDucKor = 3; endif;
PROC N4L30L32_BIRDS_M3
preproc
if curocc() in 1 and ischecked("1",N4FQ_L29L32) =  0 then	skip to next;   endif;
if curocc() in 2 and ischecked("2",N4FQ_L29L32) =  0 then	skip to next;   endif;
if curocc() in 3 and ischecked("3",N4FQ_L29L32) =  0 then	skip to next;   endif;

postproc
N4L30L32_BIRDS_TOT(curocc()) = N4L30L32_BIRDS_M1(curocc()) + N4L30L32_BIRDS_M2(curocc())  + N4L30L32_BIRDS_M3(curocc());

numeric totSupplyM3 = N3L07_TOTAL(7) + N3L07_TOTAL(8) + N3L07_TOTAL(9);

if N4L30L32_BIRDS_M3(curocc()) > SUM(N2L03_TOTAL) + totSupplyM3 then
	if curocc() = 1 then
		getErrorMsg("Laying flock sold live for other purpose is greater than Total Supply");
	elseif curocc() = 2 then
		getErrorMsg("Male breeder sold live for other purpose is greater than Total Supply");
	elseif curocc() = 3 then
		getErrorMsg("Other ages sold live for other purpose is greater than Total Supply");
	endif;
endif;

savepartial();
PROC N4L30L32_FARMGATE_M3
postproc 
N4L30L32_FARMGATE_TOT(curocc()) = N4L30L32_FARMGATE_M1(curocc()) + N4L30L32_FARMGATE_M2(curocc())+ N4L30L32_FARMGATE_M3(curocc());
  
if $(curocc())=  3 then
   getOutOfRange($,70.00,550.00," Average farmgate price is not within the acceptable range.");
else
  getOutOfRange($,0.00,9999.00,"Average farmgate price is not within the acceptable range.");   
endif;

if visualvalue(N4L30L32_BIRDS_M3(curocc())) > 0 and $(curocc()) in 0,notappl then
     getErrorMsg("Missing entry in either number of birds or average farmgate price");
elseif visualvalue(N4L30L32_BIRDS_M3(curocc())) in 0,notappl and $(curocc()) > 0 then
     getErrorMsg(" Missing entry in either number of birds or average farmgate price");
endif;

// if curocc() = 3 then
     // if ischecked("A",N4FQ_L29L32) = 1 and visualvalue(N4L30L32_BIRDS_TOT(1)) = 0 and N4L30L32_FARMGATE_TOT(1) = 0 then
	          // getErrorMsg(" Laying flock is selected but no entries");
			  // move to N4L30L32_FARMGATE_M1(1);
	 // elseif ischecked("B",N4FQ_L29L32) = 1 and visualvalue(N4L30L32_BIRDS_TOT(2)) = 0 and N4L30L32_FARMGATE_TOT(2)  = 0 then  
			  // getErrorMsg(" Male breeder is selected but no entries");
			  // move to N4L30L32_FARMGATE_M1(2);
     // elseif ischecked("C",N4FQ_L29L32) = 1 and  visualvalue(N4L30L32_BIRDS_TOT(3)) = 0 and N4L30L32_FARMGATE_TOT(3)  = 0 then
			  // getErrorMsg(" Other ages is selected but no entries");
			  // move to N4L30L32_FARMGATE_M1(3);
	 // endif;
// endif;
savepartial();
 
PROC N4L30L32_DESTINATION_M3
numeric xtotdes;
if $ = notappl then
    xL32_DES3 = 0;
else
    xL32_DES3 = 1;
endif;		
xtotdes = xL32_DES1+xL32_DES2+xL32_DES3 ;

	if $(curocc()) = notappl then   
		getWarningMsg("W: Destination Entry - Blank");
	endif;
	
	if N4L30L32_BIRDS_M3 > 0 and $ = notappl then
		if curocc() = 1 then
			getErrorMsg("A. Laying Flock has entry but no specified destination was selected");
		elseif curocc() = 2 then
			getErrorMsg("A. Male Breeder has entry but no specified destination was selected");
		elseif curocc() = 3 then
			getErrorMsg("A. Other Ages has entry but no specified destination was selected");
		endif;
	endif;

 
if curocc() = 3 then
     if ischecked("A",N4FQ_L29L32) = 1 and visualvalue(N4L30L32_BIRDS_TOT(1)) = 0 and  xtotdes  = 0 then
	          getErrorMsg("  Laying flock is selected but no entries");
			  move to N4L30L32_DESTINATION_M1(1);
	 elseif ischecked("B",N4FQ_L29L32) = 1 and visualvalue(N4L30L32_BIRDS_TOT(2)) = 0 and xtotdes  = 0  then  
			  getErrorMsg(" Male breeder is selected but no entries");
			  move to N4L30L32_DESTINATION_M1(2);
     elseif ischecked("C",N4FQ_L29L32) = 1 and  visualvalue(N4L30L32_BIRDS_TOT(3)) = 0 and xtotdes  = 0  then
			  getErrorMsg(" Other ages is selected but no entries");
			  move to N4L30L32_DESTINATION_M1(3);
	 endif;
endif;

savepartial();
PROC N4L33_DUCK_DIED
 
getOutOfRange($,1,2," Entered value is not within the acceptable codes.");

if $ = 2 then 
	skip to N5L37_SELL_CUR_YR;
endif;

savepartial();
PROC N4FQ_L35L36
postproc

if ischecked("A",$) = 0 and ischecked("B",$) = 0 and ischecked("C",$) = 0  then
       getErrorMsg("No selected code");
endif;	   

if ischecked ("A",$) = 1 then
       skip to N4L34_AVIAN_INFLUENZA(1);
elseif ischecked ("B",$) = 1 then
//	   skip to ND_DUCK_DISEASE(1);
elseif ischecked ("C",$) = 1 then
//	   skip to NCA_SPECIFY(1);

endif;
 
 savepartial();
PROC N4L34_AVIAN_INFLUENZA
preproc
ask if ischecked("A", N4FQ_L35L36);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                   0,0,N3L07L11_TOT_SUPPLY_QTR ); 
 

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Avian Influenza is greater than the total supply") ;  

getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);
// (numeric xHB1,numeric xHB2,numeric xHB3,numeric xTotDC, numeric xTotSupQtr, numeric xEndInvt1,string xbl,numeric xcnt ) 
 
        if curocc() = 1 then  N4L34L36_NUMBER_OF_BIRDS_M1(1) = $(curocc()); 
	elseif curocc() = 2 then  N4L34L36_NUMBER_OF_BIRDS_M2(1) = $(curocc()); 
	elseif curocc() = 3 then  N4L34L36_NUMBER_OF_BIRDS_M3(1) = $(curocc());
endif;

if curocc() = 3 then
	if N4L34_AVIAN_INFLUENZA(1) in 0, notappl then
		if N4L34_AVIAN_INFLUENZA(2) in 0, notappl then
			if N4L34_AVIAN_INFLUENZA(3) in 0, notappl then
				getErrorMsg("Selected Avian Influenza in the cause of deaths, but no answer in all months.");
			endif;
		endif;
	endif;
endif;
savepartial();

                       
PROC ND_DUCK_DISEASE
preproc
ask if ischecked("B", N4FQ_L35L36); 
string xa, xb,xc, xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn,xo ;

postproc

if soccurs(RTN4_L34L36) = 0 then INSERT(RTN4_L34L36(1)); endif;
if soccurs(RTN4_L34L36) = 1 then INSERT(RTN4_L34L36(2)); endif;

    if ischecked ("A",$) = 0 then  NDA_HC(curocc()) = notappl; else  xa = getlabel($,"A");endif;
	if ischecked ("B",$) = 0 then  NDD_HC(curocc()) = notappl; else  xb = getlabel($,"B");endif;
	if ischecked ("C",$) = 0 then  NDE_HC(curocc()) = notappl; else  xc = getlabel($,"C");endif;
	if ischecked ("D",$) = 0 then  NDF_HC(curocc()) = notappl; else  xd = getlabel($,"D");endif;
	if ischecked ("E",$) = 0 then  NDG_HC(curocc()) = notappl; else  xe = getlabel($,"E");endif;
	if ischecked ("F",$) = 0 then  NDH_HC(curocc()) = notappl; else  xf = getlabel($,"F");endif;
	if ischecked ("G",$) = 0 then  NDI_HC(curocc()) = notappl; else  xg = getlabel($,"G");endif;
    if ischecked ("H",$) = 0 then  NDB_HC(curocc()) = notappl; else  xh = getlabel($,"H");endif;
	if ischecked ("I",$) = 0 then  NDC_HC(curocc()) = notappl; else  xi = getlabel($,"I");endif;
	if ischecked ("J",$) = 0 then  NDJ_HC(curocc()) = notappl; else  xj = getlabel($,"J");endif;
	if ischecked ("K",$) = 0 then  NDK_HC(curocc()) = notappl; else  xk = getlabel($,"K");endif;
	if ischecked ("L",$) = 0 then  NDL_HC(curocc()) = notappl; else  xl = getlabel($,"L");endif;
	if ischecked ("M",$) = 0 then  NDM_HC(curocc()) = notappl; else  xm = getlabel($,"M");endif;	
    if ischecked ("N",$) = 0 then  NDN_HC(curocc()) = notappl; else  xn = getlabel($,"N");endif;
	if ischecked ("O",$) = 0 then  NDO_HC(curocc()) = notappl;NDO_Specify(curocc()) = ""; else  xo = getlabel($,"O");endif;
			    
 

if curocc() = 3 then
	if poschar("ABCDEFGHIJKLMNO", ND_DUCK_DISEASE(1)) in 0, notappl then
		if poschar("ABCDEFGHIJKLMNO", ND_DUCK_DISEASE(2)) in 0, notappl then
			if poschar("ABCDEFGHIJKLMNO", ND_DUCK_DISEASE(3)) in 0, notappl then
				getErrorMsg(" Please specify the cause of death due to other disease.");
			endif;
		endif;
	endif;
endif;	

if curocc() = 1      then N4L34L36_CDEATH_SPCFY_M1(2) = concat(xa,xb,xc,xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn,xo  );	 
elseif curocc() = 2  then N4L34L36_CDEATH_SPCFY_M2(2) = concat(xa,xb,xc,xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn,xo  );
elseif curocc() = 3  then N4L34L36_CDEATH_SPCFY_M3(2) = concat(xa,xb,xc,xd,xe,xf,xg,xh,xi,xj,xk,xl,xm,xn,xo  );
 	 
endif;

savepartial();
PROC NDA_HC
preproc
ask if ischecked("A", ND_DUCK_DISEASE);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                   0,0,N3L07L11_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999," Please verify the inputted code.");

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3),"Number of deaths due to Other disease is greater than the total supply") ;  

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);
 

savepartial();
PROC NDD_HC
preproc
ask if ischecked("B", ND_DUCK_DISEASE);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),NDD_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                   0,0,N3L07L11_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
	
getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

savepartial();
PROC NDE_HC
preproc
ask if ischecked("C", ND_DUCK_DISEASE);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),NDD_HC(curocc()),NDE_HC(curocc()),
                                                 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,N3L07L11_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

savepartial();
PROC NDF_HC
preproc
ask if ischecked("D", ND_DUCK_DISEASE);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),NDD_HC(curocc()),NDE_HC(curocc()),
                                                 NDF_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,N3L07L11_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
	
getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

savepartial();
PROC NDG_HC
preproc
ask if ischecked("E", ND_DUCK_DISEASE);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),NDD_HC(curocc()),NDE_HC(curocc()),
                                                 NDF_HC(curocc()),NDG_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,N3L07L11_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
	
getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

savepartial();
PROC NDH_HC
preproc
ask if ischecked("F", ND_DUCK_DISEASE);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),NDD_HC(curocc()),NDE_HC(curocc()),
                                                 NDF_HC(curocc()),NDG_HC(curocc()),NDH_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,N3L07L11_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
	
getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

savepartial();
PROC NDI_HC
preproc
ask if ischecked("G", ND_DUCK_DISEASE);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),NDD_HC(curocc()),NDE_HC(curocc()),
                                                 NDF_HC(curocc()),NDG_HC(curocc()),NDH_HC(curocc()),NDI_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,N3L07L11_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

savepartial();
PROC NDB_HC
preproc
ask if ischecked("H", ND_DUCK_DISEASE);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                   0,0,N3L07L11_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
	
getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

savepartial();
PROC NDC_HC
preproc
ask if ischecked("I", ND_DUCK_DISEASE);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                   0,0,N3L07L11_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  


if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

savepartial();
PROC NDJ_HC
preproc
ask if ischecked("J", ND_DUCK_DISEASE);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),NDD_HC(curocc()),NDE_HC(curocc()),
                                                 NDF_HC(curocc()),NDG_HC(curocc()),NDH_HC(curocc()),NDI_HC(curocc()),NDJ_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,N3L07L11_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

savepartial();

PROC NDK_HC
preproc
ask if ischecked("K", ND_DUCK_DISEASE);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),NDD_HC(curocc()),NDE_HC(curocc()),
                                                 NDF_HC(curocc()),NDG_HC(curocc()),NDH_HC(curocc()),NDI_HC(curocc()),NDJ_HC(curocc()),NDK_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,N3L07L11_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;
	
getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

savepartial();
PROC NDL_HC
preproc
ask if ischecked("L", ND_DUCK_DISEASE);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),NDD_HC(curocc()),NDE_HC(curocc()),
                                                 NDF_HC(curocc()),NDG_HC(curocc()),NDH_HC(curocc()),NDI_HC(curocc()),NDJ_HC(curocc()),NDK_HC(curocc()),NDL_HC(curocc()),
												 0,0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,N3L07L11_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

savepartial();
PROC NDM_HC
preproc
ask if ischecked("M", ND_DUCK_DISEASE);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),NDD_HC(curocc()),NDE_HC(curocc()),
                                                 NDF_HC(curocc()),NDG_HC(curocc()),NDH_HC(curocc()),NDI_HC(curocc()),NDJ_HC(curocc()),NDK_HC(curocc()),NDL_HC(curocc()),
												 NDM_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,N3L07L11_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

savepartial();
PROC NDN_HC
preproc
ask if ischecked("N", ND_DUCK_DISEASE);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),NDD_HC(curocc()),NDE_HC(curocc()),
                                                 NDF_HC(curocc()),NDG_HC(curocc()),NDH_HC(curocc()),NDI_HC(curocc()),NDJ_HC(curocc()),NDK_HC(curocc()),NDL_HC(curocc()),
												 NDM_HC(curocc()), NDN_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,N3L07L11_TOT_SUPPLY_QTR ); 
getOutOfRange($,0,9999999,"  Please verify the inputted code.");

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

if $ in 0,notappl then   
	getErrorMsg("No corresponding number of deaths");
endif;

getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

savepartial();
PROC NDO_SPECIFY
preproc
ask if ischecked("O", ND_DUCK_DISEASE);//Avian;
postproc

if strip($) = "" then
    getWarningMsg(" Please specify the cause of death due to other disease.");
endif;

if curocc() = 1 then  N4L34L36_CDEATH_SPCFY_M1(3) = $(curocc()); 
	elseif curocc() = 2 then  N4L34L36_CDEATH_SPCFY_M2(3) = $(curocc()); 
	elseif curocc() = 3 then  N4L34L36_CDEATH_SPCFY_M3(3) = $(curocc());
endif;

savepartial();
PROC NDO_HC
preproc
ask if ischecked("O", ND_DUCK_DISEASE);//Avian;

postproc  
  
TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),NDD_HC(curocc()),NDE_HC(curocc()),
                                                 NDF_HC(curocc()),NDG_HC(curocc()),NDH_HC(curocc()),NDI_HC(curocc()),NDJ_HC(curocc()),NDK_HC(curocc()),NDL_HC(curocc()),
												 NDM_HC(curocc()), NDN_HC(curocc()),NDO_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,
				                                 0,0,N3L07L11_TOT_SUPPLY_QTR ); 
 

getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other disease is greater than the total supply") ;  

if $= 0 then 
    getErrorMsg(" Item N.4.3.2.b (Other disease ) is empty but Item N.4.3.2.b (Other disease (Specify)) has an entry. Please indicate the percentage or verify the cause indicated.");
endif;	
getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

        if curocc() = 1 then  N4L34L36_NUMBER_OF_BIRDS_M1(3) = $(curocc()); 
	elseif curocc() = 2 then  N4L34L36_NUMBER_OF_BIRDS_M2(3) = $(curocc()); 
	elseif curocc() = 3 then  N4L34L36_NUMBER_OF_BIRDS_M3(3) = $(curocc());
endif;
 
if $(curocc()) in 0, notappl then
getErrorMsg("Other disease is selected but number of birds that died is zero.");
endif;
 
 if length(strip(NDO_SPECIFY(curocc()))) = 0 and $ in 0,notappl then
   getErrorMsg("code 99 is selected but no entries in specify and count of heads.");
elseif length(strip(NDO_SPECIFY(curocc()))) = 0 and $ > 0 then
   getErrorMsg("code 99 is selected but no entries in specify but count of heads have entries.");
endif; 

savepartial();
PROC RTN4_DC001
preproc
ask if ischecked("C", N4FQ_L35L36); 
PROC NCA_SPECIFY
preproc
	ask if ischecked("C",  N4FQ_L35L36); 

postproc
    if curocc() = 1 then   N4L34L36_CDEATH_SPCFY_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  N4L34L36_CDEATH_SPCFY_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  N4L34L36_CDEATH_SPCFY_M3(2) = $(curocc());
	endif;
	savepartial();
PROC NCA_SP_HC
preproc
ask if ischecked("C",  N4FQ_L35L36); 

postproc  
	  
	TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),NDD_HC(curocc()),NDE_HC(curocc()),
													 NDF_HC(curocc()),NDG_HC(curocc()),NDH_HC(curocc()),NDI_HC(curocc()),NDJ_HC(curocc()),NDK_HC(curocc()),NDL_HC(curocc()),
													 NDM_HC(curocc()), NDN_HC(curocc()),NDO_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,
													 NCA_SP_HC(curocc()),0,N3L07L11_TOT_SUPPLY_QTR ); 
	 

	getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other cause is greater than the total supply") ;  

	if $ in 0,notappl and strip(NCA_SPECIFY) <> "" then 
		getErrorMsg(" Item N.4.3.2.c (Other causes(number of birds)) is empty but Item N.4.3.2.c (Other disease (Specify)) has an entry. Please indicate the percentage or verify the cause indicated.");
	elseif $ > 0 and strip(NCA_SPECIFY) = "" then 
		getErrorMsg(" Item N.4.3.2.c (Other causes (Specify)) is empty but Item N.4.3.2.c (Other reasons ) is greater than zero. Please indicate the cause of mortality or verify the percentage.");

	endif;	
	getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

		if curocc() = 1 then N4L34L36_NUMBER_OF_BIRDS_M1(2) = $(curocc()); 
	elseif curocc() = 2 then N4L34L36_NUMBER_OF_BIRDS_M2(2) = $(curocc()); 
	elseif curocc() = 3 then N4L34L36_NUMBER_OF_BIRDS_M3(2) = $(curocc());
	endif;	

	savepartial();
PROC NCB_SPECIFY
preproc
	ask if ischecked("C",  N4FQ_L35L36); 
postproc

	 
	   if curocc() = 1 then   N4L34L36_CDEATH_SPCFY_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  N4L34L36_CDEATH_SPCFY_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  N4L34L36_CDEATH_SPCFY_M3(2) = $(curocc());
	endif;
	savepartial();
PROC NCB_SP_HC
preproc
	ask if ischecked("C",  N4FQ_L35L36); 
postproc  
	  
	TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),NDD_HC(curocc()),NDE_HC(curocc()),
													 NDF_HC(curocc()),NDG_HC(curocc()),NDH_HC(curocc()),NDI_HC(curocc()),NDJ_HC(curocc()),NDK_HC(curocc()),NDL_HC(curocc()),
													 NDM_HC(curocc()), NDN_HC(curocc()),NDO_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,
													 NCA_SP_HC(curocc()),0,N3L07L11_TOT_SUPPLY_QTR ); 
	 

	getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other cause is greater than the total supply") ;  

	if $ in 0,notappl and strip(NCB_SPECIFY) <> "" then 
		getErrorMsg(" Item N.4.3.2.c (Other causes(number of birds)) is empty but Item N.4.3.2.c (Other disease (Specify)) has an entry. Please indicate the percentage or verify the cause indicated.");
	elseif $ > 0 and strip(NCB_SPECIFY) = "" then 
		getErrorMsg(" Item N.4.3.2.c (Other causes (Specify)) is empty but Item N.4.3.2.c (Other reasons ) is greater than zero. Please indicate the cause of mortality or verify the percentage.");

	endif;	
	getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

		if curocc() = 1 then N4L34L36_NUMBER_OF_BIRDS_M1(2) = $(curocc()); 
	elseif curocc() = 2 then N4L34L36_NUMBER_OF_BIRDS_M2(2) = $(curocc()); 
	elseif curocc() = 3 then N4L34L36_NUMBER_OF_BIRDS_M3(2) = $(curocc());
	endif;	

	savepartial();
PROC NCC_SPECIFY
preproc
	ask if ischecked("C",  N4FQ_L35L36); 
postproc

	 
	   if curocc() = 1 then   N4L34L36_CDEATH_SPCFY_M1(2) = $(curocc()); 
	elseif curocc() = 2 then  N4L34L36_CDEATH_SPCFY_M2(2) = $(curocc()); 
	elseif curocc() = 3 then  N4L34L36_CDEATH_SPCFY_M3(2) = $(curocc());
	endif;
	if curocc() = 3 then    	
		if  strip(NCA_SPECIFY(1)) = "" and strip(NCA_SPECIFY(2)) = "" and strip(NCA_SPECIFY(3)) = "" and
			strip(NCB_SPECIFY(1)) = "" and strip(NCB_SPECIFY(2)) = "" and strip(NCB_SPECIFY(3)) = "" and 
			strip($(1)) = "" and strip($(2)) = "" and strip($(3)) = "" then
				getErrorMsg("D. Please specify the cause of death due to other causes.");
		endif;
	endif;
	savepartial();
	
PROC NCC_SP_HC
preproc
	ask if ischecked("C",  N4FQ_L35L36); 
postproc  
	  
	TOTAL_ND_DUCK_HC(curocc()) = getTotalDeathCause( N4L34_AVIAN_INFLUENZA(curocc()), NDA_HC(curocc()),NDB_HC(curocc()),NDC_HC(curocc()),NDD_HC(curocc()),NDE_HC(curocc()),
													 NDF_HC(curocc()),NDG_HC(curocc()),NDH_HC(curocc()),NDI_HC(curocc()),NDJ_HC(curocc()),NDK_HC(curocc()),NDL_HC(curocc()),
													 NDM_HC(curocc()), NDN_HC(curocc()),NDO_HC(curocc()),0,0,0,0,0,0,0,0,0,0,0,
													 NCA_SP_HC(curocc()),0,N3L07L11_TOT_SUPPLY_QTR ); 
	 

	getCompareTotalSupDead(curocc(), N3L07L11_TOT_SUPPLY(1),N3L07L11_TOT_SUPPLY(2),N3L07L11_TOT_SUPPLY(3) ,$(1),$(2),$(3)," Number of deaths due to Other cause is greater than the total supply") ;  

	if $ in 0,notappl and strip(NCC_SPECIFY) <> "" then 
		getErrorMsg(" Item N.4.3.2.c (Other causes(number of birds)) is empty but Item N.4.3.2.c (Other disease (Specify)) has an entry. Please indicate the percentage or verify the cause indicated.");
	elseif $ > 0 and strip(NCC_SPECIFY) = "" then 
		getErrorMsg(" Item N.4.3.2.c (Other causes (Specify)) is empty but Item N.4.3.2.c (Other reasons ) is greater than zero. Please indicate the cause of mortality or verify the percentage.");

	endif;	
	getTotalDispositionQTR(N4L13_BIRDS_M1,N4L13_BIRDS_M2,N4L13_BIRDS_M3,TOTAL_ND_DUCK_HC(curocc()),N3L07L11_TOT_SUPPLY_QTR,N2L03_TOTAL(2),"N",87);

		if curocc() = 1 then N4L34L36_NUMBER_OF_BIRDS_M1(2) = $(curocc()); 
	elseif curocc() = 2 then N4L34L36_NUMBER_OF_BIRDS_M2(2) = $(curocc()); 
	elseif curocc() = 3 then N4L34L36_NUMBER_OF_BIRDS_M3(2) = $(curocc());
	endif;	

	savepartial();
PROC N5L37_SELL_CUR_YR
if $ = notappl then
	getErrorMsg("No selected codes");
 endif;
if $ = 1 then
  skip to N5L38_LAID_EGGS(1);
elseif $ = 2 then 
   skip to  REMARKS; 
 endif;  
savepartial();
PROC BLOCK125

    // if curocc() in 1:3 then ctr = 1 ;
// elseif curocc() in 4:6 then ctr = 2 ;
// elseif curocc() in 7:9 then ctr = 3 ;
// endif;


    if curocc() in 1:3 then ctr = 1 ;
elseif curocc() in 4:6 then ctr = 2 ;
elseif curocc() in 7:9 then ctr = 3 ;
endif;
PROC N5L38_LAID_EGGS
preproc
numeric tot;
 
tot = 0;

if ischecked("1",N1L02_TYPE_DUCK) = 0 then
   if curocc() in 1,4,7 then skip to next; endif;
endif;

if ischecked("2",N1L02_TYPE_DUCK) = 0 then	
   if curocc() in 2,5,8 then skip to next; endif;
endif;

if ischecked("3",N1L02_TYPE_DUCK) = 0 then	
   if curocc() in 3,6,9 then skip to next; endif;
endif;

postproc

tot = $(1) + $(4) + $(7) ;
  
if curocc() = 1 then
	if $ > ((visualvalue(N2L04_LAYING_FLOCK(1)) + visualvalue(N3L09_LAYING_FLOCK_RCVD(1))) * 20) then
		 errmsg(" Average number of eggs laid in a month exceeds the number of eggs to be laid by the total number of laying flock indicated in the inventory. Please check the consistency of the values.");
		reenter $;
	endif;
	 
endif;

if curocc() = 2 then
	if $ > ((visualvalue(N2L04_LAYING_FLOCK(2)) + visualvalue(N3L09_LAYING_FLOCK_RCVD(2))) * 20) then
		 errmsg(" Average number of eggs laid in a month exceeds the number of eggs to be laid by the total number of laying flock indicated in the inventory. Please check the consistency of the values.");
		reenter $;
	endif;
	
endif;

if curocc() = 3 then
	if $ > ((visualvalue(N2L04_LAYING_FLOCK(3)) + visualvalue(N3L09_LAYING_FLOCK_RCVD(3))) * 20) then
		 errmsg("  Average number of eggs laid in a month exceeds the number of eggs to be laid by the total number of laying flock indicated in the inventory. Please check the consistency of the values.");
		reenter $;
	endif;
	if tot = 0 and N1L01_TYPE_OPERATION in 3,5,6,7 then
	    errmsg("Average number of eggs laid in a month has no entry but type of operation is egg production");
	    reenter;
	endif;
endif;


if curocc() = 4 then
	if $ > ((visualvalue(N2L04_LAYING_FLOCK(1)) + visualvalue(N3L09_LAYING_FLOCK_RCVD(4))) * 20) then
		 errmsg(" Average number of eggs laid in a month exceeds the number of eggs to be laid by the total number of laying flock indicated in the inventory. Please check the consistency of the values.");
		reenter $;
	endif;
endif;

if curocc() = 5 then
	if $ > ((visualvalue(N2L04_LAYING_FLOCK(2)) + visualvalue(N3L09_LAYING_FLOCK_RCVD(5))) * 20) then
		 errmsg(" Average number of eggs laid in a month exceeds the number of eggs to be laid by the total number of laying flock indicated in the inventory. Please check the consistency of the values.");
		reenter $;
	endif;
	if tot = 0 and N1L01_TYPE_OPERATION in 3,5,6,7 then
	    errmsg("Average number of eggs laid in a month has no entry but type of operation is egg production");
	    reenter;
	endif;
endif;
if curocc() = 6 then
	if $ > ((visualvalue(N2L04_LAYING_FLOCK(3)) + visualvalue(N3L09_LAYING_FLOCK_RCVD(6))) * 20) then
		 errmsg(" Average number of eggs laid in a month exceeds the number of eggs to be laid by the total number of laying flock indicated in the inventory. Please check the consistency of the values.");
		reenter $;
	endif;
	if tot = 0 and N1L01_TYPE_OPERATION in 3,5,6,7 then
	    errmsg("Average number of eggs laid in a month has no entry but type of operation is egg production");
	    reenter;
	endif;
endif;
if curocc() = 7 then
	if $ > ((visualvalue(N2L04_LAYING_FLOCK(1)) + visualvalue(N3L09_LAYING_FLOCK_RCVD(7))) * 20) then
		 errmsg(" Average number of eggs laid in a month exceeds the number of eggs to be laid by the total number of laying flock indicated in the inventory. Please check the consistency of the values.");
		reenter $;
	endif;
	if tot = 0 and N1L01_TYPE_OPERATION in 3,5,6,7 then
	    errmsg("Average number of eggs laid in a month has no entry but type of operation is egg production");
	    reenter;
	endif;
endif;

if curocc() = 8 then
	if $ > ((visualvalue(N2L04_LAYING_FLOCK(2)) + visualvalue(N3L09_LAYING_FLOCK_RCVD(8))) * 20) then
		 errmsg(" Average number of eggs laid in a month exceeds the number of eggs to be laid by the total number of laying flock indicated in the inventory. Please check the consistency of the values.");
		reenter $;
	endif;
endif;


if curocc() = 9 then
	if $ > ((visualvalue(N2L04_LAYING_FLOCK(3)) + visualvalue(N3L09_LAYING_FLOCK_RCVD(9))) * 20) then
		 errmsg("  Average number of eggs laid in a month exceeds the number of eggs to be laid by the total number of laying flock indicated in the inventory. Please check the consistency of the values.");
		reenter $;
	endif;
endif;

savepartial();

PROC N5L39_CONV_RATE
preproc
 
if not curocc() in 1,4,7 then skip to next; endif; 

postproc

if curocc() in 1,4,7 then
	if visualvalue(N5L38_LAID_EGGS(curocc())) > 0  and $(curocc()) = 0 then
		errmsg(" Missing entry in either estimated number of eggs laid in a month or Conversion Rate. Please verify the inputted value.");
		reenter;
	elseif visualvalue(N5L38_LAID_EGGS(curocc())) = 0  and $(curocc()) > 0 then
		errmsg(" Missing entry in either estimated number of eggs laid in a month or Conversion Rate. Please verify the inputted value.");
		reenter;
	elseif visualvalue(N5L38_LAID_EGGS(curocc())) > 0 then
		if not $(curocc()) in 0,15:20 then
			getWarningMsg(" Conversion Rate <> is not within the acceptable range. Please verify the inputted value");
		endif;
	endif;
endif;

savepartial();
PROC N5L40_PREV_YR
postproc
if not $ in 1:2  then
	getErrorMsg(" No selected codes");
endif;

if $ = 2 then
   skip to  N5L44_CONSUMED_PERCENT(1);
endif;   
savepartial();
PROC N5L41_COMPARED_YR
postproc
if not $ in 1:3  then
	getErrorMsg(" A. Item N.5.1.c was not identified. Please select a valid code.");
endif;


if $ = 1 then
	  N5L42_EGG_CHECKBOX_LOW = "";
      N5L4220_LOW_SPECIFY = "";
	   
	   skip to N5L42_EGG_CHECKBOX_HIGH;
elseif $ = 2 then
	  N5L42_EGG_CHECKBOX_HIGH = "";
      N5L4220_HIGH_SPECIFY = "";
       
	   skip to N5L42_EGG_CHECKBOX_LOW;
elseif $ = 3 then
      N5L42_EGG_CHECKBOX_LOW = "";
      N5L4220_LOW_SPECIFY = "";
	  N5L42_EGG_CHECKBOX_HIGH = "";
      N5L4220_HIGH_SPECIFY = "";
       
	   skip to N5L44_CONSUMED_PERCENT(1);
endif;   
savepartial();
PROC N5L42_EGG_CHECKBOX_HIGH

postproc
    if ischecked ("A",$) = 1 then N5L421_HIGH_PRICE_OFFER=  1;endif;
	if ischecked ("B",$) = 1 then N5L422_HIGH_DEMAND     =  2;endif;
	if ischecked ("C",$) = 1 then N5L423_FINANCIAL_NEED  =  3;endif;
	if ischecked ("D",$) = 1 then N5L424_NO_OUTBREAK     =  4;endif;
	if ischecked ("E",$) = 1 then N5L425_FAV_WEATHER     =  5;endif;
	if ischecked ("F",$) = 1 then N5L426_PROPER_VENT     =  6;endif;
	if ischecked ("G",$) = 1 then N5L427_MODERN_TECH     =  7;endif;
	if ischecked ("H",$) = 1 then N5L428_AVAIL_RTL       =  8;endif;
	if ischecked ("I",$) = 1 then N5L429_GOVT_INTRVN     =  9;endif;
	if ischecked ("J",$) = 1 then N5L4220_HIGH_REASON    =  20;endif;

	if poschar("ABCDEFGHIJ", $) = 0 then
		getErrorMsg("NAnswer in Item N.5.1.c is code 1 (Higher) but no selected code/s in Item N.5.1.d");
	ENDIF;

savepartial();
PROC N5L42_EGG_CHECKBOX_LOW
preproc
ask if N5L41_COMPARED_YR = 2;

postproc
    if ischecked ("A",$) = 1 then N5L4210_LOW_PRICE_OFFER=  10;endif;
	if ischecked ("B",$) = 1 then N5L4211_LOW_DEMAND     =  11;endif;
	if ischecked ("C",$) = 1 then N5L4212_OUTBREAK       =  12;endif;
	if ischecked ("D",$) = 1 then N5L4213_UNFAV_WEATHER  =  13;endif;
	if ischecked ("E",$) = 1 then N5L4214_POOR_VENT      =  14;endif;
	if ischecked ("F",$) = 1 then N5L4215_HIGH_COST      =  15;endif;
	if ischecked ("G",$) = 1 then N5L4216_TIGHT_SUPPLY   =  16;endif;
	if ischecked ("H",$) = 1 then N5L4217_GOVT_REGLTN    =  17;endif;
	if ischecked ("I",$) = 1 then N5L4218_MOLTING        =  18;endif;
	if ischecked ("J",$) = 1 then N5L4218_CULLING        =  19;endif;
	if ischecked ("K",$) = 1 then N5L4220_LOW_REASON     =  20;endif;

	if poschar("ABCDEFGHIJK", $) = 0 then
		getErrorMsg("NAnswer in Item N.5.1.c is code 2 (lower) but no selected code/s in Item N.5.1.d");
	ENDIF;

savepartial();
PROC N5L4220_HIGH_SPECIFY
preproc
ask if ischecked("J",N5L42_EGG_CHECKBOX_HIGH);

postproc
if strip($) = "" then
     getErrorMsg(" No other reason specified.");
endif;
savepartial();
PROC N5L4220_LOW_SPECIFY
preproc
ask if ischecked("K",N5L42_EGG_CHECKBOX_LOW);

postproc
if strip($) = "" then
     getErrorMsg(" No other reason specified.");
endif;
savepartial();
PROC N5L43_TOTAL
postproc
savepartial();
PROC N5L44_CONSUMED_PERCENT
getOutOfRange($,0,100," A. Processed/consumed in the establishment is greater than 100 percent");

N5L43_TOTAL(curocc()) = visualvalue(N5L44_CONSUMED_PERCENT(curocc())) + visualvalue(N5L45_HATCH_PERCENT(curocc())) + visualvalue(N5L46_WASTAGE_PERCENT(curocc())) + visualvalue(N5L47_SOLD_PERCENT(curocc()));
savepartial();
PROC N5L45_HATCH_PERCENT
getOutOfRange($,0,100,"	A. Intended for hatching is greater than 100 percent");

N5L43_TOTAL(curocc()) = visualvalue(N5L44_CONSUMED_PERCENT(curocc())) + visualvalue(N5L45_HATCH_PERCENT(curocc())) + visualvalue(N5L46_WASTAGE_PERCENT(curocc())) + visualvalue(N5L47_SOLD_PERCENT(curocc()));
savepartial();
PROC N5L46_WASTAGE_PERCENT
getOutOfRange($,0,100,"A. Wastage is greater than 100 percent");

N5L43_TOTAL(curocc()) = visualvalue(N5L44_CONSUMED_PERCENT(curocc())) + visualvalue(N5L45_HATCH_PERCENT(curocc())) + visualvalue(N5L46_WASTAGE_PERCENT(curocc())) + visualvalue(N5L47_SOLD_PERCENT(curocc()));
savepartial();
PROC N5L47_SOLD_PERCENT
numeric xkor = curocc();
numeric xEggMonth1 = N5L38_LAID_EGGS(1) + N5L38_LAID_EGGS(2) + N5L38_LAID_EGGS(3); // mallard + muscovy + other types (month 1)
numeric xEggMonth2 = N5L38_LAID_EGGS(4) + N5L38_LAID_EGGS(5) + N5L38_LAID_EGGS(6); // mallard + muscovy + other types (month 2)
numeric xEggMonth3 = N5L38_LAID_EGGS(7) + N5L38_LAID_EGGS(8) + N5L38_LAID_EGGS(9); // mallard + muscovy + other types (month 3)

N5L43_TOTAL(xkor) = visualvalue(N5L44_CONSUMED_PERCENT(xkor)) + visualvalue(N5L45_HATCH_PERCENT(xkor)) + visualvalue(N5L46_WASTAGE_PERCENT(xkor)) + visualvalue(N5L47_SOLD_PERCENT(xkor));

// getOutOfRange($,0,100," Sold as table eggs is greater than 100 percent.");


if visualvalue(N5L43_TOTAL(xkor)) > 100 then 
   getErrorMsg("Total Disposition < > is greater than 100 percent. Please verify the inputted values");
endif;

// if N5L43_TOTAL(xkor) > 0 then
	// if visualvalue(N5L38_LAID_EGGS(xkor)) in 0, notappl then
		// getErrorMsg("Egg production indicator is greater than zero but egg disposition is equal to zero");
	// elseif visualvalue(N5L38_LAID_EGGS(xkor)) > 0 then
		// if N5L43_TOTAL(xkor) <> 100 then
			// getErrorMsg("N.6.2.A. (Total) is not equal to 100 percent");
		// endif;
	// endif;
// elseif N5L43_TOTAL(xkor) in 0, notappl then
	// if visualvalue(N5L38_LAID_EGGS(xkor)) > 0 then
		// getErrorMsg("Egg production indicator is equal to zero but egg disposition is greater than zero.");
	// endif;
// endif;

if xkor = 1 then
	if visualvalue(N5L43_TOTAL(xkor)) > 0 then
		if xEggMonth1 in 0, notappl then
			getErrorMsg("Egg production indicator is greater than zero but egg disposition is equal to zero");
		elseif xEggMonth1 > 0 then
			if visualvalue(N5L43_TOTAL(xkor)) <> 100 then
				getErrorMsg("N.6.2.A. (Total) is not equal to 100 percent");
			endif;
		endif;
	elseif visualvalue(N5L43_TOTAL(xkor)) in 0, notappl then
		if xEggMonth1 > 0 then
			getErrorMsg("Egg production indicator is equal to zero but egg disposition is greater than zero.");
		endif;
	endif;
endif;

if xkor = 2 then
	if visualvalue(N5L43_TOTAL(xkor)) > 0 then
		if xEggMonth2 in 0, notappl then
			getErrorMsg("Egg production indicator is greater than zero but egg disposition is equal to zero");
		elseif xEggMonth2 > 0 then
			if visualvalue(N5L43_TOTAL(xkor)) <> 100 then
				getErrorMsg("N.6.2.A. (Total) is not equal to 100 percent");
			endif;
		endif;
	elseif visualvalue(N5L43_TOTAL(xkor)) in 0, notappl then
		if xEggMonth2 > 0 then
			getErrorMsg("Egg production indicator is equal to zero but egg disposition is greater than zero.");
		endif;
	endif;
endif;

if xkor = 3 then
	if visualvalue(N5L43_TOTAL(xkor)) > 0 then
		if xEggMonth3 in 0, notappl then
			getErrorMsg("Egg production indicator is greater than zero but egg disposition is equal to zero");
		elseif xEggMonth3 > 0 then
			if visualvalue(N5L43_TOTAL(xkor)) <> 100 then
				getErrorMsg("N.6.2.A. (Total) is not equal to 100 percent");
			endif;
		endif;
	elseif visualvalue(N5L43_TOTAL(xkor)) in 0, notappl then
		if xEggMonth3 > 0 then
			getErrorMsg("Egg production indicator is equal to zero but egg disposition is greater than zero.");
		endif;
	endif;
endif;

 savepartial();
PROC N5L48_TOTAL
savepartial();
PROC N5L49_WIN_PRV_PERCENT
postproc
if N5L49_WIN_PRV_PERCENT(curocc()) > 100 then
	getErrorMsg("A. Entered value is greater than 100 percent");
endif;


savepartial();
PROC N5L50_OUT_PRV_PERCENT
postproc
if N5L50_OUT_PRV_PERCENT(curocc()) > 100 then
	getErrorMsg("A. Entered value is greater than 100 percent");
endif;

savepartial();
PROC N6L51_UNK_PRV_PERCENT
postproc
N5L48_TOTAL(curocc()) = visualvalue(N5L49_WIN_PRV_PERCENT(curocc())) + visualvalue(N5L50_OUT_PRV_PERCENT(curocc())) + visualvalue(N6L51_UNK_PRV_PERCENT(curocc()));

if N6L51_UNK_PRV_PERCENT(curocc()) > 100 then
	getErrorMsg("A. Entered value is greater than 100 percent");
endif;

if N5L48_TOTAL(curocc()) > 0 then
	if N5L47_SOLD_PERCENT(curocc()) in 0, notappl then
		getErrorMsg("B. Without entry in sold as tables eggs but egg sold as table egg by areas of destination is greater than zero.");
	elseif N5L47_SOLD_PERCENT(curocc()) > 0 then
		if N5L48_TOTAL(curocc()) <> 100 then
			getErrorMsg("D. N.6.3.A. (Total) is not equal to 100 percent");
		endif;
	endif;
elseif N5L48_TOTAL(curocc()) in 0, notappl then
	if N5L47_SOLD_PERCENT(curocc()) > 0 then
		getErrorMsg("C. N.6.3.A. (Total) is equal to zero and J.6.2.d (Sold as table eggs) is greater than zero.");
	endif;
endif;

savepartial();
PROC N5L52_SM
numeric xkor;
xkor = curocc();

if visualvalue(N5L47_SOLD_PERCENT(xkor)) = 0 and $(xkor) > 0 then
       getErrorMsg("Item N.5.2.d (sold as table eggs) has no entry but there was provided average farmgate price. Please check entries.");
elseif visualvalue(N5L47_SOLD_PERCENT(xkor)) > 0 and $(xkor) = 0 then
        getErrorMsg("Average farmgate price has no entry but Item N.5.2.d (sold as table eggs) has entry. Please check entries.");
endif;

if not $(xkor) in 0,5.00:12.00 then
    getWarningMsg("Item N.5.3.a (average farmgate price) < > is not within the acceptable range. Please verify the inputted value.");
  
endif;    
   
savepartial();
PROC N5L53_MED
numeric xkor;
xkor = curocc();

if visualvalue(N5L47_SOLD_PERCENT(xkor)) = 0 and $(xkor) > 0 then
       getErrorMsg("item N.5.2.d (sold as table eggs) has no entry but there was provided average farmgate price. Please check entries.");
elseif visualvalue(N5L47_SOLD_PERCENT(xkor)) > 0 and $(xkor) = 0 then
        getErrorMsg(" Average farmgate price has no entry but Item N.5.2.d (sold as table eggs) has entry. Please check entries.");
endif;

if not $(xkor) in 0,5.00:12.00 then
   getWarningMsg("Item N.5.3.b (average farmgate price) < > is not within the acceptable range. Please verify the inputted value.");
    
endif;    
   
savepartial();
PROC N5L54_LARGE
numeric xkor;
xkor = curocc();
   
   
if visualvalue(N5L47_SOLD_PERCENT(xkor)) = 0 and $(xkor) > 0 then
       getErrorMsg(" Item N.5.2.d (sold as table eggs) has no entry but there was provided average farmgate price. Please check entries.");
elseif visualvalue(N5L47_SOLD_PERCENT(xkor)) > 0 and $(xkor) = 0 then
        getErrorMsg("Average farmgate price has no entry but Item N.5.2.d (sold as table eggs) has entry. Please check entries.");
endif;

if not $(xkor) in 0,5.00:12.00 then
   getWarningMsg("Item N.5.3.c (average farmgate price) < > is not within the acceptable range. Please verify the inputted value.");
     
endif; 
savepartial();
PROC N5L55_PRICE_COMPARED_LYSQ
savepartial();
PROC N5L56_HIGHERLOWER
if N5L55_PRICE_COMPARED_LYSQ in 1:2 then
	if strip($) = "" then
			errmsg(" A. Indicate the reason for increase/decrease in farmgate price");
			reenter;
	endif;
endif;
savepartial();
PROC GROUP011_OTHER_ANIMALS

preproc
if D2L12_OA_HORSE  = 11 or D2L12_OA_RABBIT  = 12 or D2L12_OA_QUAIL  = 13 or D2L12_OA_TURKEY  = 14 or D2L12_OA_GOOSE  = 15 then
	ok = 1
else
	skip to REMARKS;
endif;
PROC O1L01_OTHER_HORSE
preproc
ask if animal_type = 11;

postproc

savepartial();
PROC O1L02_OTHER_RABBIT
preproc
ask if animal_type = 12;

postproc

if animal_type <> 12 then
	if O1L02_OTHER_RABBIT(curocc()) > 0 then
		errmsg("Animal type id not rabbit but with answer in rabbit inventory");
		reenter;
	endif;
endif;

savepartial();
PROC O1L03_OTHER_QUAIL
preproc
ask if animal_type = 13;

postproc

if animal_type <> 13 then
	if O1L03_OTHER_QUAIL(curocc()) > 0 then
		errmsg("Animal type id not quail but with answer in quial inventory");
		reenter;
	endif;
endif;

savepartial();
PROC O1L04_OTHER_TURKEY
preproc
ask if animal_type = 14;

postproc

if animal_type <> 14 then
	if O1L04_OTHER_TURKEY(curocc()) > 0 then
		errmsg("Animal type id not turkey but with answer in turkey inventory");
		reenter;
	endif;
endif;

savepartial();
PROC O1L05_OTHER_GOOSE
preproc
ask if animal_type = 15;

postproc


if animal_type <> 15 then
	if O1L05_OTHER_GOOSE(curocc()) > 0 then
		errmsg("Animal type id not goose but with answer in goose inventory");
		reenter;
	endif;
endif;


savepartial();
PROC O2L06L10_HEAD_A
preproc

	if ANIMAL_TYPE <> 11 then 
		if curocc() = 1 then    
			move to O2L06L10_HEAD_A(2); // punta horse
		endif;
	endif;
	
	if ANIMAL_TYPE <> 12 then 
		if curocc() = 2 then    
			move to O2L06L10_HEAD_A(3); // punta quail
		endif;
	endif;

	if ANIMAL_TYPE <> 13 then 
		if curocc() = 3 then    
			move to O2L06L10_HEAD_A(4); // punta turkey
		endif;
	endif;
	
	if ANIMAL_TYPE <> 14 then 
		if curocc() = 4 then    
			move to O2L06L10_HEAD_A(5); // punta goose
		endif;
	endif;
	
	if ANIMAL_TYPE <> 15 then 
		if curocc() = 5 then    
			move to O2L06L10_HEAD_B(1);
		endif;
	endif;
	
postproc

savepartial();
PROC O2L06L10_HEAD_B
preproc

	if ANIMAL_TYPE <> 11 then 
		if curocc() = 1 then    
			move to O2L06L10_HEAD_B(2); // punta horse
		endif;
	endif;
	
	if ANIMAL_TYPE <> 12 then 
		if curocc() = 2 then    
			move to O2L06L10_HEAD_B(3); // punta quail
		endif;
	endif;

	if ANIMAL_TYPE <> 13 then 
		if curocc() = 3 then    
			move to O2L06L10_HEAD_B(4); // punta turkey
		endif;
	endif;
	
	if ANIMAL_TYPE <> 14 then 
		if curocc() = 4 then    
			move to O2L06L10_HEAD_B(5); // punta goose
		endif;
	endif;
	
	if ANIMAL_TYPE <> 15 then 
		if curocc() = 5 then    
			move to O2L06L10_HEAD_C(1);
		endif;
	endif;
	
postproc

savepartial();
PROC O2L06L10_HEAD_C
preproc

	if ANIMAL_TYPE <> 11 then 
		if curocc() = 1 then    
			move to O2L06L10_HEAD_C(2); // punta horse
		endif;
	endif;
	
	if ANIMAL_TYPE <> 12 then 
		if curocc() = 2 then    
			move to O2L06L10_HEAD_C(3); // punta quail
		endif;
	endif;

	if ANIMAL_TYPE <> 13 then 
		if curocc() = 3 then    
			move to O2L06L10_HEAD_C(4); // punta turkey
		endif;
	endif;
	
	if ANIMAL_TYPE <> 14 then 
		if curocc() = 4 then    
			move to O2L06L10_HEAD_C(5); // punta goose
		endif;
	endif;
	
	if ANIMAL_TYPE <> 15 then 
		if curocc() = 5 then    
			move to O2L17_QUAIL(1);
		endif;
	endif;
	
postproc

savepartial();
PROC O2L17_QUAIL
preproc
ask if animal_type = 13;

postproc


savepartial();
PROC O2L17_QUAIL_FG
preproc
ask if animal_type = 13;

postproc


savepartial();
PROC O2L18_TURKEY
preproc
ask if animal_type = 14;

postproc


savepartial();
PROC O2L18_TURKEY_FG
preproc
ask if animal_type = 14;

postproc


savepartial();
PROC O2L19_GOOSE
preproc
ask if animal_type = 15;

postproc


savepartial();
PROC O2L19_GOOSE_FG
preproc
ask if animal_type = 15;

postproc


savepartial();
PROC C3L09_STATUS_OP_RESULT_VISIT
preproc
C3L09_STATUS_OP_RESULT_VISIT  = tonumber(sysparm("C3L09_STATUS_OP_RESULT_VISIT"));
if INTVW = 2 then
	setvalueset(C3L09_STATUS_OP_RESULT_VISIT,C3L09_STATUS_OP_RESULT_VISIT_VS1);
else
	setvalueset(C3L09_STATUS_OP_RESULT_VISIT,C3L09_STATUS_OP_RESULT_VISIT_VS2);
endif;



postproc

if INTVW = 2 then
	if $ in 2:11 then
		oks=1;
	else
		errmsg("Status of Operation/ Result of Final Visit is code [%d]. but the answer in Proceed to interview is No",C3L09_STATUS_OP_RESULT_VISIT);
	endif;
endif;
	

if C3L09_STATUS_OP_RESULT_VISIT = 4 then
	skip to SHIFTED_FARM_OPERATION;
elseif C3L09_STATUS_OP_RESULT_VISIT = 8 then
	skip to DUPLICATE;
else
	skip to C4L10_NUM_VISIT;
endif;

if $ in 2:8 and A_INVENTORY in 0, notappl then
	INTERVIEW_STATUS = 2;
	NONRESPONSE = $;
	//skip to REMARKS;
endif;

	
savepartial();
PROC SHIFTED_FARM_OPERATION
postproc
skip to C4L10_NUM_VISIT;
PROC C4L10_NUM_VISIT

postproc

If $ > 2 then
	errmsg ("Number of Visits is not within the acceptable range. Please verify the inputted data.");
	reenter
endif;

if C3L09_STATUS_OP_RESULT_VISIT in 2:11 then
	INTERVIEW_STATUS = 2;
	NONRESPONSE = C3L09_STATUS_OP_RESULT_VISIT;

	//errmsg("%s",ECN);
	// string dataFile = concat(".\data\F1_", edit("99",REG), edit("999",PROV), edit("99",MUN), edit("999",BGY), ECN,".csdbe|password=1234");
	// setfile(CLPS2023_DICT,dataFile,create);	




else
	C3L09_STATUS_OP_RESULT_VISIT = 1;
	INTERVIEW_STATUS = 1;
	NONRESPONSE = notappl;
	//endlevel;
endif;


SURVEY_END_TIME =  edit("99:99:99",systime("HHMMSS"));

savepartial();
